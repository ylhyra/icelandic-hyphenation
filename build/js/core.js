/*! For license information please see core.js.LICENSE.txt */
!function(){var t={30:function(t,e,n){var s=n(473),r=n(259),i=n(878),a=n(105),o=n(234),l=n(725),u=n(183);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},473:function(t,e,n){var s;!function(t,r,i){function a(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},725:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},259:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},234:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,i=e.i;return e.w=s=s+1640531527|0,n=r[i+34&127],t=r[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[i]=n^t,e.i=i,n+(s^s>>>16)|0},function(t,e){var n,s,r,i,a,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,i=-32;i<l;++i)e&&(s^=e.charCodeAt((i+32)%e.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=a,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},105:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},878:function(t,e,n){var s;!function(t,r,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},183:function(t,e,n){var s;!function(r,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var s=[],d=y(m((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(r)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(r)]}}():t,3),s),p=new f(s),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&g(s,p),t.state=function(){return g(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(t=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+t[r%n]+(e=a[r])],a[i]=e;(s.g=function(t){for(var e,n=0,r=s.i,i=s.j,a=s.S;t--;)e=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+e])+(a[i]=e)];return s.i=r,s.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(m(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function y(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,y(i.random(),r),t.exports){t.exports=p;try{a=n(906)}catch(t){}}else void 0===(s=function(){return p}.call(e,n,e,t))||(t.exports=s)}([],Math)},906:function(){},993:function(){},352:function(){},589:function(){},758:function(){}},e={};function n(s){if(e[s])return e[s].exports;var r=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=function(t,e){for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},function(){"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:function(){return Ls},computeFlatOffset:function(){return Ys},computeOutShape:function(){return Bs},getNormalizedAxes:function(){return Vs},isSliceContinous:function(){return Xs},maskToAxes:function(){return zs},parseSliceParams:function(){return Js},startForAxis:function(){return qs},startIndicesWithElidedDims:function(){return Gs},stopForAxis:function(){return Ks},stopIndicesWithElidedDims:function(){return Hs},stridesForAxis:function(){return js},stridesWithElidedDims:function(){return Ps}});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:function(){return Ii},computeOutShape:function(){return ki},segOpComputeOptimalWindowSize:function(){return vi}});var s={};n.r(s),n.d(s,{ERF_A1:function(){return jo},ERF_A2:function(){return qo},ERF_A3:function(){return Ko},ERF_A4:function(){return Xo},ERF_A5:function(){return Yo},ERF_P:function(){return Ho},PARALLELIZE_THRESHOLD:function(){return xi},SELU_SCALE:function(){return Go},SELU_SCALEALPHA:function(){return Vo},applyActivation:function(){return Wa},assertAndGetBroadcastShape:function(){return hi},assertAxesAreInnerMostDims:function(){return yr},assertParamsConsistent:function(){return qr},assignToTypedArray:function(){return rl},axesAreInnerMostDims:function(){return pr},calculateShapes:function(){return Uo},castTensor:function(){return ol},combineLocations:function(){return fr},complexWithEvenIndex:function(){return el},complexWithOddIndex:function(){return nl},computeConv2DInfo:function(){return Rr},computeConv3DInfo:function(){return Ar},computeDefaultPad:function(){return Tr},computeDilation2DInfo:function(){return Sr},computeOptimalWindowSize:function(){return wi},computeOutAndReduceShapes:function(){return gr},computeOutShape:function(){return Kr},computePool2DInfo:function(){return Er},computePool3DInfo:function(){return Nr},convertConv2DDataFormat:function(){return zr},eitherStridesOrDilationsAreOne:function(){return Lr},expandShapeToKeepDim:function(){return mr},exponent:function(){return al},exponents:function(){return il},getAxesPermutation:function(){return br},getBroadcastDims:function(){return ui},getComplexWithIndex:function(){return sl},getFusedBiasGradient:function(){return Pa},getFusedDyActivation:function(){return Ba},getImageCenter:function(){return Fo},getInnerMostAxes:function(){return wr},getPermuted:function(){return Oo},getReductionAxes:function(){return ci},getReshaped:function(){return _o},getReshapedPermuted:function(){return Mo},getSliceBeginCoords:function(){return Lo},getSliceSize:function(){return zo},getUndoAxesPermutation:function(){return xr},linspaceImpl:function(){return ul},log:function(){return Zo},mergeRealAndImagArrays:function(){return Qo},prepareAndValidate:function(){return Bo},prepareSplitSize:function(){return xa},reshapeTensor:function(){return ll},segment_util:function(){return e},shouldFuse:function(){return Ua},slice_util:function(){return t},splitRealAndImagArrays:function(){return tl},tupleValuesAreOne:function(){return Mr},upcastType:function(){return Sn},validateInput:function(){return Wo},validateUpdateShape:function(){return Po},warn:function(){return Jo}});var r={};n.r(r),n.d(r,{addImpl:function(){return $y},ceilImpl:function(){return Vy},expImpl:function(){return wb},expm1Impl:function(){return Ib},floorImpl:function(){return Ub},logImpl:function(){return Zb},maxImpl:function(){return ix},multiplyImpl:function(){return Sb},rsqrtImpl:function(){return Cx},simpleAbsImpl:function(){return ay},sliceImpl:function(){return Ab},subImpl:function(){return Fb},transposeImpl:function(){return ax},uniqueImpl:function(){return nw}});class i{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,s){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,s){return o("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,s){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,s){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,s){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,s){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,s){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,s,r,i){return o("batchNorm")}localResponseNormalization4D(t,e,n,s,r){return o("localResponseNormalization4D")}LRNGrad(t,e,n,s,r,i,a){return o("LRNGrad")}multinomial(t,e,n,s){return o("multinomial")}oneHot(t,e,n,s){return o("oneHot")}cumsum(t,e,n,s){return o("cumsum")}nonMaxSuppression(t,e,n,s,r){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,s,r,i){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,s){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}class l{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function u(){return h}let c,h=null;function d(){if(null==c){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}c=t}return c}function p(t,e){const n=function(){const t=d();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const f="Abs",g="Acos",m="Acosh",y="Add",b="ArgMax",x="ArgMin",w="Asin",v="Asinh",k="Atan",I="Atanh",C="Atan2",$="AvgPool",S="AvgPoolBackprop",E="AvgPool3D",N="BatchMatMul",R="BatchToSpaceND",A="BroadcastTo",T="Cast",D="Ceil",F="ClipByValue",_="Complex",O="Concat",M="Conv2D",L="Conv2DBackpropInput",z="Conv3D",B="Cos",P="Cosh",W="Cumsum",U="DepthwiseConv2dNative",V="Dilation2D",G="Dilation2DBackpropInput",H="Dilation2DBackpropFilter",j="Div",q="Elu",K="Erf",X="Exp",Y="Expm1",J="FlipLeftRight",Z="Floor",Q="FloorDiv",tt="FusedBatchNorm",et="GatherV2",nt="GreaterEqual",st="Identity",rt="IFFT",it="Imag",at="IsFinite",ot="IsInf",lt="IsNan",ut="Log",ct="Log1p",ht="LogicalNot",dt="LogSoftmax",pt="Max",ft="Maximum",gt="MaxPool",mt="MaxPoolBackprop",yt="MaxPool3D",bt="MaxPoolWithArgmax",xt="Minimum",wt="Multiply",vt="Negate",kt="NotEqual",It="NonMaxSuppressionV3",Ct="NonMaxSuppressionV4",$t="NonMaxSuppressionV5",St="OnesLike",Et="OneHot",Nt="PadV2",Rt="Prelu",At="Real",Tt="Reciprocal",Dt="Relu",Ft="Reshape",_t="ResizeNearestNeighbor",Ot="ResizeBilinear",Mt="Relu6",Lt="Reverse",zt="Round",Bt="Rsqrt",Pt="SelectV2",Wt="Selu",Ut="Slice",Vt="Sin",Gt="Sinh",Ht="Sign",jt="Sigmoid",qt="Softplus",Kt="Sqrt",Xt="SpaceToBatchND",Yt="SplitV",Jt="Softmax",Zt="SquaredDifference",Qt="Square",te="Sub",ee="Tan",ne="Tanh",se="Tile",re="Transpose",ie="Unique",ae="Unpack",oe="UnsortedSegmentSum",le="ZerosLike",ue="Step",ce="RotateWithOffset",he="_FusedMatMul",de="FusedConv2D",pe=p("kernelRegistry",(()=>new Map)),fe=p("gradRegistry",(()=>new Map));function ge(t){return fe.get(t)}function me(t){const e=pe.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===t&&n.push(a)}return n}function ye(t){const{kernelName:e,backendName:n}=t,s=xe(e,n);pe.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),pe.set(s,t)}function be(t){const{kernelName:e}=t;fe.has(e)&&u().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),fe.set(e,t)}function xe(t,e){return`${e}_${t}`}function we(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function ve(t,e,n){return Math.max(t,Math.min(e,n))}function ke(t){return t%2==0?t:t+1}function Ie(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function Ce(t,e,n=""){Ie(Ne(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function $e(t){Ie(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function Se(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Be(t)&&!n)for(let s=0;s<t.length;++s)Se(t[s],e,n);else e.push(t);return e}function Ee(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Ne(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function Re(t){return t%1==0}function Ae(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Te(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function De(t,e=(t=>0),n){return new Promise(((s,r)=>{let i=0;const a=()=>{if(t())return void s();i++;const o=e(i);null!=n&&i>=n?r():setTimeout(a,o)};a()}))}function Fe(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function _e(t,e){const n=e.length;return Ie((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t)),Ie(t.every((t=>Re(t))),(()=>"All values in axis param must be integers but got axis "+t)),t.map((t=>t<0?n+t:t))}function Oe(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||r?null:_e(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function Me(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function Le(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function ze(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Be(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function Pe(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function We(t){return"string"==typeof t||t instanceof String}function Ue(t){return"number"==typeof t}function Ve(t){return Array.isArray(t)?Ve(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":Ue(t)?"float32":We(t)?"string":"boolean"==typeof t?"bool":"float32"}function Ge(t){return!!(t&&t.constructor&&t.call&&t.apply)}function He(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function je(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function qe(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=Se(t)),u().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function Ke(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],i=e.slice(1),a=i.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=Ke(t+e*a,i,n)}return s}function Xe(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return Ke(0,t,e)}function Ye(t,e){const n=Je(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Je(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function Ze(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Xe(t,new Float32Array(n));if("int32"===e)return Xe(t,new Int32Array(n));if("bool"===e)return Xe(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function Qe(){return u().platform.now()}function tn(t){t.forEach((e=>{Ie(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function en(t,e="utf-8"){return e=e||"utf-8",u().platform.encode(t,e)}function nn(t,e="utf-8"){return e=e||"utf-8",u().platform.decode(t,e)}function sn(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function rn(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}class an{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new ln)}profileKernel(t,e,n){let s;const r=this.backendTimer.time((()=>{s=n()}));for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{on(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:r.then((t=>t.kernelMs)),extraInfo:r.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),s,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function on(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class ln{logKernelProfile(t,e,n,s,r,i){const a="number"==typeof s?Te(s+"ms",9):s.error,o=Te(t,25),l=e.rank,u=e.size,c=Te(e.shape.toString(),14);let h="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;h+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function un(t,e,n,s){const r=je(e),i=function(t,e,n,s){const r=Ee(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?pn(t):t;if(o>1)for(let t=0;t<r/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],cn(l[e+t],0,n).length)}return a}(t,e,n,r),a=e.length,o=dn(t,e,n,r,i),l=["Tensor"];return s&&(l.push("  dtype: "+n),l.push("  rank: "+a),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function cn(t,e,n){let s;return s=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":We(t)?`'${t}'`:"bool"===n?hn(t):parseFloat(t.toFixed(7)).toString(),Te(s,e)}function hn(t){return 0===t?"false":"true"}function dn(t,e,n,s,r,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[cn(pn(t)[0],0,n)]:"bool"===n?[hn(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let s=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(s=pn(s),i=pn(i)),["["+s.map(((t,e)=>cn(t,r[e],n))).join(", ")+", ..., "+i.map(((t,e)=>cn(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?pn(t):Array.from(t)).map(((t,e)=>cn(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const s=e*h,i=s+h;d.push(...dn(t.slice(s,i),u,n,c,r,!1))}d.push("...");for(let e=o-3;e<o;e++){const s=e*h,i=s+h;d.push(...dn(t.slice(s,i),u,n,c,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*h,i=s+h;d.push(...dn(t.slice(s,i),u,n,c,r,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function pn(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class fn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Ee(t),null!=n){const t=n.length;Ie(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Le(e,this.size),this.strides=je(t)}set(t,...e){0===e.length&&(e=[0]),Ie(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return gn().makeTensor(this.values,this.shape,this.dtype)}}let gn=null,mn=null,yn=null;class bn{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Ee(t),this.strides=je(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return mn.buffer(this.shape,this.dtype,t)}bufferSync(){return mn.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Xe(this.shape,t)}arraySync(){return Xe(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=gn().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>nn(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=gn().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>nn(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await gn().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(gn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return mn.print(this,t)}clone(){return this.throwIfDisposed(),mn.clone(this)}toString(t=!1){return un(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),mn.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),gn().makeVariable(this,t,e,n)}}Object.defineProperty(bn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class xn extends bn{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ne(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);gn().disposeTensor(this),this.dataId=t.dataId,gn().incRef(this,null)}dispose(){gn().disposeVariable(this),this.isDisposedInternal=!0}}var wn,vn,kn,In,Cn;Object.defineProperty(xn,Symbol.hasInstance,{value:t=>t instanceof bn&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(wn||(wn={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(vn||(vn={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(kn||(kn={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(In||(In={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Cn||(Cn={}));const $n={float32:In,int32:vn,bool:kn,complex64:Cn};function Sn(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return $n[t][e]}function En(t){return Sn(t,"int32")}function Nn(t,e){if(t.dtype===e.dtype)return[t,e];const n=Sn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Rn(t,e){return e.some((e=>e.id===t.id))}function An(t){const e=[];return Tn(t,e,new Set),e}function Tn(t,e,n){if(null==t)return;if(t instanceof bn)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),Tn(s,e,n))}}class Dn{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Fn{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Dn}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new an(this.backendInstance),!0}setupRegisteredKernels(){me(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){me(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof a||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e);s.disposeData(e),n.backend=t,t.move(e,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Fn.nextTensorId++}nextVariableId(){return Fn.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},s={dtype:e};return On.runKernelFunc((n=>n.cast(t,e)),n,null,T,s)}})),[],{}),e}runKernel(t,e,n,s,r){return this.runKernelFunc(null,e,null,t,n,s,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-e-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t,e,n,s,r,i,a){let o,l=[];const u=this.isTapeOn();null==s&&(s=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=function(t,e){const n=xe(t,e);return pe.get(n)}(s,this.backendName);let f,g;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:r,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(s,e,o);if(null==t){null==a&&(a=[]);const e=o.filter(((t,e)=>a[e]));t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const r=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(s,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),o=g.outputs):o=d()})),u&&this.addTapeNode(s,e,o,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=ge(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(Ie(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>r[e]));return i.concat(a)}return null}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&We(t[0])&&(r=t.map((t=>en(t))));const i=s.write(r,e,n),a=new bn(e,n,i,this.nextTensorId());if(this.incRef(a,s),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,s){const r=new bn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new xn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Pe(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof xn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=ge(t);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=Je(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=An(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(Ie(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));Ie(r instanceof bn,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){i.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in s)i[s[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=Ye(Ee(t),"float32");return On.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[e];if(!Ne(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=s(e,r),e.dispose()}}}}(t,i,(t=>this.tidy(t)),Mn);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return Ie(Ge(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;Ie(e.every((t=>t instanceof bn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc(((s,r)=>(n=t(...e,r),Ie(n.value instanceof bn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Ie(Ge(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),s,((t,s)=>{const r=n.gradFunc(t,s),i=Array.isArray(r)?r:[r];Ie(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Ie(i.every((t=>t instanceof bn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Qe(),n=await this.backend.time(t);return n.wallMs=Qe()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Dn;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function _n(){const t=d();if(null==t._tfengine){const e=new l(t);t._tfengine=new Fn(e)}var e;return e=t._tfengine.ENV,h=e,gn=()=>t._tfengine,t._tfengine}Fn.nextTensorId=0,Fn.nextVariableId=0;const On=_n();function Mn(t,e){const n={a:t,b:e};return On.runKernelFunc(((n,s)=>{const r=n.add(t,e);return s([t,e]),r}),n,null,y)}function Ln(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const zn=u();function Bn(t,e){let n=t;if(Be(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||Be(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&u().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Pn(t,s,[]),s}function Pn(t,e,n){if(n=n||[],!Array.isArray(t)&&!Be(t))return void Ie(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Ie(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Ie(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)Pn(t[e],s,n.concat(e))}function Wn(t,e,n,s){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}function Un(t,e,n,s="numeric"){if(t instanceof bn)return Wn(s,t.dtype,e,n),t;let r=Ve(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Wn(s,r,e,n),null==t||!Be(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=Bn(t,r);Be(t)||Array.isArray(t)||(t=[t]);const a="string"!==r?qe(t,r):Se(t,[],!0);return On.makeTensor(a,i,r)}function Vn(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>Un(t,`${e}[${s}]`,n)),s)}function Gn(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{On.startScope(n);try{const e=s(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),On.endScope(e),e}catch(t){throw On.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}zn.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),zn.registerFlag("IS_BROWSER",(()=>Ln())),zn.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),zn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),zn.registerFlag("PROD",(()=>!1)),zn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>zn.getBool("DEBUG"))),zn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),zn.registerFlag("IS_TEST",(()=>!1));const Hn=Gn({complex_:function(t,e){const n=Un(t,"real","complex"),s=Un(e,"imag","complex");Ce(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return On.runKernelFunc((t=>t.complex(n,s)),r,null,_)}});function jn(t,e,n,s){if(null==s&&(s=Ve(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Be(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){tn(e);const t=Ee(e),s=Ee(n);Ie(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==Ee(e.slice(t));Ie(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Be(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?qe(t,s):Se(t,[],!0),On.makeTensor(t,e,s)}function qn(t,e,n){return jn(t,e,Bn(t,n),n)}const Kn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Xn(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<r.length;++i){const a=r[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(i,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Yn(await Promise.all(s)),specs:n}}function Yn(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const Jn="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Zn(t){return Jn?Buffer.byteLength(t):new Blob([t]).size}function Qn(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function ts(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Zn(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Zn(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function es(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let r=0;r<s.length;r++){const a=s[r],o=t[n[a>>10]+(1023&a)]+e[a>>10];i[r]=o}return new Float32Array(r)}}class ns{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ns.instance&&(ns.instance=new ns),ns.instance}static registerSaveRouter(t){ns.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ns.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ns.getHandlers(t,"save")}static getLoadHandlers(t,e){return ns.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?ns.getInstance().loadRouters:ns.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const ss="tensorflowjs",rs="models_store",is="model_info_store";function as(){if(!u().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function os(t){const e=t.result;e.createObjectStore(rs,{keyPath:"modelPath"}),e.createObjectStore(is,{keyPath:"modelPath"})}class ls{constructor(t){if(this.indexedDB=as(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(ss,1);s.onupgradeneeded=()=>os(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(rs,"readonly"),s=e.objectStore(rs).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=ts(e),i=r.transaction(is,"readwrite");let a=i.objectStore(is);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(rs,"readwrite");const o=l.objectStore(rs).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{a=i.objectStore(is);const e=a.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}ls.URL_SCHEME="indexeddb://";const us=t=>{return u().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ls.URL_SCHEME)?(e=t.slice(ls.URL_SCHEME.length),new ls(e)):null;var e};ns.registerSaveRouter(us),ns.registerLoadRouter(us);class cs{constructor(){this.indexedDB=as()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(ss,1);n.onupgradeneeded=()=>os(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(is,"readonly"),i=r.objectStore(is).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(s.close(),e(i.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(ls.URL_SCHEME)?e.slice(ls.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(ss,1);s.onupgradeneeded=()=>os(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(is,"readwrite"),a=i.objectStore(is),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=a.delete(t),i=()=>{l=r.transaction(rs,"readwrite");const s=l.objectStore(rs).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=i,s.onerror=t=>(i(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const hs="/",ds="tensorflowjs_models",ps="info",fs="model_topology",gs="weight_specs",ms="weight_data",ys="model_metadata";function bs(t){return{info:[ds,t,ps].join(hs),topology:[ds,t,fs].join(hs),weightSpecs:[ds,t,gs].join(hs),weightData:[ds,t,ms].join(hs),modelMetadata:[ds,t,ys].join(hs)}}function xs(t){const e=t.split(hs);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join(hs)}class ws{constructor(t){if(!u().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=bs(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=ts(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Jn)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Jn){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}ws.URL_SCHEME="localstorage://";const vs=t=>{return u().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ws.URL_SCHEME)?(e=t.slice(ws.URL_SCHEME.length),new ws(e)):null;var e};ns.registerSaveRouter(vs),ns.registerLoadRouter(vs);class ks{constructor(){Ie(u().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Ie("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=ds+hs,n=hs+ps;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[xs(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=bs(t=(e=t).startsWith(ws.URL_SCHEME)?e.slice(ws.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class Is{constructor(){this.managers={}}static getInstance(){return null==Is.instance&&(Is.instance=new Is),Is.instance}static registerManager(t,e){Ie(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Ie(t.length>0,(()=>"scheme must not be an empty string."));const n=Is.getInstance();Ie(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Cs{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(u().get("IS_BROWSER")){u().setPlatform("browser",new Cs);try{Is.registerManager(ws.URL_SCHEME,new ks)}catch(t){}try{Is.registerManager(ls.URL_SCHEME,new cs)}catch(t){}}let $s;function Ss(t,e="float32",n){return e=e||"float32",tn(t),new fn(t,e,n)}u().get("IS_NODE")&&u().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=u().global.fetch?u().global.fetch(t,e):(null==$s&&($s=n(352)),$s(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Es=Gn({cast_:function(t,e){const n=Un(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return On.runKernelFunc((t=>t.cast(n,e)),s,null,T,r)}}),Ns=Gn({clone_:function(t){const e=Un(t,"x","clone",null),n={x:e};return On.runKernelFunc((()=>On.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,st)}});function Rs(t){return new Promise((t=>setTimeout(t))).then(t)}_n(),mn={buffer:Ss,cast:Es,clone:Ns,print:function(t,e=!1){console.log(t.toString(e))}};class As{constructor(t){if(!u().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(As.URL_SCHEME)&&(t=t.slice(As.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=r,await Rs((()=>i.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Rs((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ts(t)}}}}function Ts(t,e,n,s){!function(t){Ie(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Ie(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+t)),Ie(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+e)),Ie(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++r/t.length*(s-n);return e(a),i})),i))))}async function Ds(t,e){null==e&&(e={});const n=null==e.fetchFunc?u().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await Ts(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await Ts(r,e.onProgress,.5,1)}As.URL_SCHEME="downloads://",ns.registerSaveRouter((t=>u().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(As.URL_SCHEME)?function(t="model"){return new As(t)}(t.slice(As.URL_SCHEME.length)):null));class Fs{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Ie("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=u().platform.fetch,Ie(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Ie(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:ts(t),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,i=e.convertedBy,a=e.format,o=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=s){const t=await this.loadWeights(s);[l,u]=t}const c={modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:r,convertedBy:i,format:a},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(r+t+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Qn(await Ds(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function _s(t){return null!=t.match(Fs.URL_SCHEME_REGEX)}Fs.URL_SCHEME_REGEX=/^https?:\/\//;const Os=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>_s(t))):_s(t),n)return Ms(t,e)}return null};function Ms(t,e){return new Fs(t,e)}function Ls(t,e,n){const s=t.shape.length;Ie(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),Ie(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)Ie(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function zs(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Bs(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function Ps(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Ws(t,e,n){return n<=t?n:n-(e-1)}function Us(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function Vs(t,e,n,s,r,i,a,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=Gs(a,l,u,s,t),h=Hs(o,l,u,r,t),d=Ps(i,l,u,t)}else for(let e=0;e<u;e++)c[e]=qs(a,s,i,t,e,l),h[e]=Ks(o,r,i,t,e,l),d[e]=js(i,e,l);return{begin:c,end:h,strides:d}}function Gs(t,e,n,s,r){const i=[...r],a=Us(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=0;else{const a=Ws(e,n,r);let o=s[a];t&1<<a&&(o=0),i[r]=o}return i}function Hs(t,e,n,s,r){const i=[...r],a=Us(n,e);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=Ws(e,n,r);let o=s[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let t=0;t<i.length;t++){const e=r[t];i[t]<0&&(i[t]+=e),i[t]=ve(0,i[t],r[t])}return i}function js(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function qs(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=ve(0,a,l-1),a}function Ks(t,e,n,s,r,i){let a=e[r];const o=n[r]||1;(t&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?ve(0,a,l):ve(-1,a,l-1),a}function Xs(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Ys(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function Js(t,e,n){let s;const r=t.shape.length;let i;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{Ie(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(Ie(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,i]}ns.registerSaveRouter(Os),ns.registerLoadRouter(Os);class Zs{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Qs{constructor(){this.classNameMap={}}static getMap(){return null==Qs.instance&&(Qs.instance=new Qs),Qs.instance}static register(t){Qs.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function tr(t){Ie(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Ie("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Ie(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Qs.register(t)}function er(t){u().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function nr(){return On}function sr(){return On.memory()}function rr(t,e){return On.tidy(t,e)}function ir(t){An(t).forEach((t=>t.dispose()))}function ar(t){return On.keep(t)}function or(t,e,n=1){return On.registerBackend(t,e,n)}function lr(t){return On.customGrad(t)}function ur(t,e){if((Be(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Be(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return jn(t,[],[],e)}yn=er;class cr extends Zs{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return ir(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){Ie(Ge(t),(()=>"The f passed in variableGrads(f) must be a function")),Ie(null==e||Array.isArray(e)&&e.every((t=>t instanceof xn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in On.registeredVariables)e.push(On.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;Ie((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=On.gradients(t,e,null,!0);Ie(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Ie(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&ir(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ur(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(cr,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const hr=Gn({abs_:function(t){const e=Un(t,"x","abs"),n={x:e};return On.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,f)}}),dr=Gn({add_:function(t,e){let n=Un(t,"a","add"),s=Un(e,"b","add");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.add(n,s);return e([n,s]),r}),r,null,y)}});function pr(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function fr(t,e,n){const s=t.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[i++]):r.push(e[a++]);return r}function gr(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function mr(t,e){return fr(t,e.map((t=>1)),e)}function yr(t,e,n){Ie(pr(e,n),(()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`))}function br(t,e){if(pr(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function xr(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function wr(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const vr=Gn({reshape_:function(t,e){const n=Un(t,"x","reshape",null),s={x:n},r={shape:e};return On.runKernelFunc(((t,s)=>(e=Fe(e,n.size),Ie(n.size===Ee(e),(()=>"new shape and old shape must have the same number of elements.")),s([n]),t.reshape(n,e))),s,null,Ft,r)}}),kr=Gn({transpose_:function(t,e){const n=Un(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),Ie(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{Ie(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return On.runKernelFunc((t=>t.transpose(n,e)),s,null,re,r)}}),Ir=Gn({all_:function(t,e=null,n=!1){let s=Un(t,"x","all","bool");const r={x:s},i={axis:e,keepDims:n};return On.runKernelFunc((t=>{const r=_e(e,s.shape);let i=r;const a=br(i,s.rank);null!=a&&(s=kr(s,a),i=wr(i.length,s.rank));const o=t.all(s,i);if(n){const t=mr(o.shape,r);return vr(o,t)}return o}),r,null,"All",i)}}),Cr=Gn({any_:function(t,e=null,n=!1){let s=Un(t,"x","any","bool");const r={x:s},i={axis:e,keepDims:n};return On.runKernelFunc((t=>{const r=_e(e,s.shape);let i=r;const a=br(i,s.rank);null!=a&&(s=kr(s,a),i=wr(i.length,s.rank));const o=t.any(s,i);if(n){const t=mr(o.shape,r);return vr(o,t)}return o}),r,null,"Any",i)}}),$r=Gn({argMax_:function(t,e=0){let n=Un(t,"x","argMax");const s={x:n},r={axis:e};return On.runKernelFunc(((t,s)=>{s([n]);let r=_e(e,n.shape);const i=br(r,n.rank);return null!=i&&(n=kr(n,i),r=wr(r.length,n.rank)),t.argMax(n,r[0])}),s,null,b,r)}});function Sr(t,e,n,s,r="NHWC",i){return Rr(t,[...e,t[3]],n,i,s,null,null,zr(r))}function Er(t,e,n,s,r,i,a="channelsLast"){const[o,l]=Dr(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);u=[o,l,t[1],t[1]]}return Rr(t,u,n,s,r,i,!1,a)}function Nr(t,e,n,s,r,i,a="NDHWC"){const[o,l,u]=Fr(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error("Unknown dataFormat "+a);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Ar(t,c,n,s,r,!1,h,i)}function Rr(t,e,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,h,u,c]=t}const[d,p,,f]=e,[g,m]=Dr(n),[y,b]=Dr(s),x=_r(d,y),w=_r(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,s,r,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=Tr(t,e,n));const i=t[1],a=Or((t[0]-e+2*s)/n+1,r);Ie(Re(a),(()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`));const o=Or((i-e+2*s)/n+1,r);return Ie(Re(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[a,o]}([e,n],i,s,t,o);c=r[0],h=r[1]}else if("same"===t){c=Math.ceil(e/s),h=Math.ceil(n/r);const t=Math.max(0,(c-1)*s+i-e),o=Math.max(0,(h-1)*r+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/s),h=Math.ceil((n-a+1)/r);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Or((e-i+d+p)/s+1,o),h=Or((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,x,w,i,o),C=a?f*h:f;let $;return"channelsFirst"===o?$=[l,C,k,I]:"channelsLast"===o&&($=[l,k,I,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:$,filterShape:e}}function Ar(t,e,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error("Unknown dataFormat "+a);[l,d,u,c,h]=t}const[p,f,g,,m]=e,[y,b,x]=Fr(n),[w,v,k]=Fr(s),I=_r(p,w),C=_r(f,v),$=_r(g,k),{padInfo:S,outDepth:E,outHeight:N,outWidth:R}=function(t,e,n,s,r,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,s,r,i){null==r&&(r=Tr(t,e,s));const a=t[1],o=t[2],l=Or((t[0]-e+2*r)/s+1,i);Ie(Re(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=Or((a-e+2*r)/s+1,i);Ie(Re(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=Or((o-e+2*r)/s+1,i);return Ie(Re(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,s,1],o,0,r,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const t=(d-1)*r+o-e,c=(p-1)*i+l-n,g=(f-1)*a+u-s,m=Math.floor(t/2),y=t-m,b=Math.floor(c/2),x=c-b,w=Math.floor(g/2);h={top:b,bottom:x,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-l+1)/i),f=Math.ceil((s-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,b,x,I,C,$,o),A=i?m*d:m;let T;return"channelsFirst"===a?T=[l,A,E,N,R]:"channelsLast"===a&&(T=[l,E,N,R,A]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:N,outWidth:R,outChannels:A,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:$,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:T,filterShape:e}}function Tr(t,e,n,s=1){const r=_r(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function Dr(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Fr(t){return"number"==typeof t?[t,t,t]:t}function _r(t,e){return e<=1?t:t+(t-1)*(e-1)}function Or(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function Mr(t){const[e,n,s]=Dr(t);return 1===e&&1===n&&1===s}function Lr(t,e){return Mr(t)||Mr(e)}function zr(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}const Br=Gn({avgPool_:function(t,e,n,s,r){const i=Un(t,"x","avgPool","float32");Ie(Lr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=vr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Ie(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),null!=r&&Ie(Re(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let c=On.runKernelFunc(((t,i)=>{const o=Er(a.shape,e,n,1,s,r);return i([a]),1===o.filterWidth&&1===o.filterHeight&&Ne(o.inShape,o.outShape)?a.clone():t.avgPool(a,o)}),l,null,$,u);return c=Es(c,i.dtype),o?vr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Pr=Gn({avgPool3d_:function(t,e,n,s,r,i="NDHWC",a){null==a?a=[1,1,1]:er("dilations is deprecated, this field will be gone in v3.0.0.");const o=Un(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=vr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Ie(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),Ie("NDHWC"===i,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+i)),Ie(Lr(n,a),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=r&&Ie(Re(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a};let d=On.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=Nr(l.shape,e,n,a,s,r,i);return o([l]),t.avgPool3d(l,u)}),c,null,E,h);return d=Es(d,l.dtype),u?vr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Wr(t){return null==t?null:0===t.rank?vr(t,[t.size]):1===t.rank?t:2===t.rank?vr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?vr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Ur=Gn({batchNorm_:function(t,e,n,s,r,i){null==i&&(i=.001);const a=Un(t,"x","batchNorm"),o=Un(e,"mean","batchNorm"),l=Un(n,"variance","batchNorm");let u,c;null!=r&&(u=Un(r,"scale","batchNorm")),null!=s&&(c=Un(s,"offset","batchNorm")),Ie(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ie(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ie(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?vr(t,[1,1,1,t.size]):2===t.rank?vr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?vr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},f=On.runKernelFunc(((t,e)=>(e([h,o,l,u]),t.batchNorm(h,Wr(o),Wr(l),Wr(c),Wr(u),i))),d,null,tt,p);return vr(f,a.shape)}}),Vr=Gn({batchNorm2d_:function(t,e,n,s,r,i){const a=Un(t,"x","batchNorm"),o=Un(e,"mean","batchNorm"),l=Un(n,"variance","batchNorm");let u,c;return null!=r&&(u=Un(r,"scale","batchNorm")),null!=s&&(c=Un(s,"offset","batchNorm")),Ie(2===a.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+a.rank+".")),Ie(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Ie(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Ie(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Ie(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ur(a,o,l,c,u,i)}}),Gr=Gn({batchNorm3d_:function(t,e,n,s,r,i){const a=Un(t,"x","batchNorm"),o=Un(e,"mean","batchNorm"),l=Un(n,"variance","batchNorm");let u,c;return null!=r&&(u=Un(r,"scale","batchNorm")),null!=s&&(c=Un(s,"offset","batchNorm")),Ie(3===a.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+a.rank+".")),Ie(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Ie(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Ie(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Ie(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ur(a,o,l,c,u,i)}}),Hr=Gn({batchNorm4d_:function(t,e,n,s,r,i){const a=Un(t,"x","batchNorm"),o=Un(e,"mean","batchNorm"),l=Un(n,"variance","batchNorm");let u,c;return null!=r&&(u=Un(r,"scale","batchNorm")),null!=s&&(c=Un(s,"offset","batchNorm")),Ie(4===a.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+a.rank+".")),Ie(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Ie(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Ie(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Ie(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ur(a,o,l,c,u,i)}}),jr=Gn({clipByValue_:function(t,e,n){const s=Un(t,"x","clipByValue");Ie(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},i={clipValueMin:e,clipValueMax:n};return On.runKernelFunc(((t,r)=>{const i=t.clip(s,e,n);return r([s]),i}),r,null,F,i)}});function qr(t,e){const n=t[0].length;t.forEach(((t,e)=>{Ie(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),Ie(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let i=0;i<n;i++)Ie(i===e||t[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Kr(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}const Xr=Gn({concat_:function(t,e=0){Ie(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=Vn(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const s=n,r={axis:e};return On.runKernelFunc(((t,s)=>{const r=_e(e,n[0].shape)[0],i=Kr(n.map((t=>t.shape)),r);if(0===Ee(i))return qn([],i);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];qr(n.map((t=>t.shape)),r);const a=t.concat(n,r);return s(n),a}),s,null,O,r)}}),Yr=Gn({concat1d_:function(t){return Xr(t,0)}}),Jr=Gn({concat2d_:function(t,e){return Xr(t,e)}}),Zr=Gn({concat3d_:function(t,e){return Xr(t,e)}}),Qr=Gn({concat4d_:function(t,e){return Xr(t,e)}}),ti=Gn({conv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=Un(t,"x","conv2d"),l=Un(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=vr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Ie(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Ie(4===l.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+l.rank+".")),null!=a&&Ie(Re(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];Ie(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Ie(Lr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=On.runKernelFunc(((t,e)=>{const o=zr(r),c=Rr(u.shape,l.shape,n,i,s,a,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h}),d,null,M,p);return c?vr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ei=Gn({conv1d_:function(t,e,n,s,r="NWC",i=1,a){const o=Un(t,"x","conv1d"),l=Un(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=vr(o,[1,o.shape[0],o.shape[1]])),Ie(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Ie(3===l.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+l.rank+".")),null!=a&&Ie(Re(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),Ie(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Ie(Lr(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Ie("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=vr(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=vr(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=ti(d,h,[1,n],s,"NHWC",[1,i],a);return vr(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),ni=Gn({conv2DBackpropInput_:function(t,e,n,s,r,i="NHWC",a){Ie(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=vr(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),Ie(4===o.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+".")),Ie(4===l.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank)),Ie(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];Ie(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Ie(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=a&&Ie(Re(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=On.runKernelFunc(((t,e)=>{const u=zr(i),c=Rr(o,n.shape,s,1,r,a,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,L,p);return u?vr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),si=Gn({conv2dTranspose_:function(t,e,n,s,r,i){const a=Un(t,"x","conv2dTranspose"),o=Un(e,"filter","conv2dTranspose");return ni(n,a,o,s,r,"NHWC",i)}}),ri=Gn({conv3d_:function(t,e,n,s,r="NDHWC",i=[1,1,1]){const a=Un(t,"x","conv3d"),o=Un(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=vr(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),Ie(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Ie(5===o.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+".")),Ie(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Ie(Lr(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Ie("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},d=On.runKernelFunc(((t,e)=>{const r=Ar(l.shape,o.shape,n,i,s),a=t.conv3d(l,o,r);return e([l,o]),a}),c,null,z,h);return u?vr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ii=Gn({depthwiseConv2d_:function(t,e,n,s,r="NHWC",i=[1,1],a){const o=Un(t,"x","depthwiseConv2d"),l=Un(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=vr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Ie(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Ie(4===l.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+l.rank+".")),Ie(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=a&&Ie(Re(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},p=On.runKernelFunc(((t,e)=>{null==i&&(i=[1,1]),Ie(Lr(n,i),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const r=Rr(u.shape,l.shape,n,i,s,a,!0),o=t.depthwiseConv2D(u,l,r);return e([u,l]),o}),h,null,U,d);return c?vr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),ai=Gn({floorDiv_:function(t,e){let n=Un(t,"a","floorDiv"),s=Un(e,"b","floorDiv");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.floorDiv(n,s);return e([n,s]),r}),r,null,Q)}}),oi=Gn({div_:function(t,e){let n=Un(t,"a","div"),s=Un(e,"b","div");if([n,s]=Nn(n,s),"int32"===n.dtype&&"int32"===s.dtype)return ai(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.realDivide(n,s);return e([n,s]),r}),r,null,j,{})}}),li=Gn({elu_:function(t){const e=Un(t,"x","elu"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.elu(e);return n([s]),s}),n,null,q)}});function ui(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=t[i]||1;(e[e.length-1-r]||1)>1&&1===a&&s.unshift(i)}return s}function ci(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],i=e.length-s-1,a=e[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function hi(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let i=e[e.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const di=Gn({equal_:function(t,e){let n=Un(t,"a","equal"),s=Un(e,"b","equal");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.equal(n,s)),r,null,"Equal")}}),pi=Gn({exp_:function(t){const e=Un(t,"x","exp"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.exp(e);return n([s]),s}),n,null,X)}}),fi=Gn({expandDims_:function(t,e=0){const n=Un(t,"x","expandDims",null);Ie(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s=n.shape.slice();return e<0&&(Ie(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),s.splice(e,0,1),vr(n,s)}}),gi=Gn({tile_:function(t,e){const n=Un(t,"x","tile",null);Ie(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s=[n],r={x:n},i={reps:e};return On.runKernelFunc(((t,s)=>{const r=t.tile(n,e);return s([n]),r}),r,null,se,i,s)}}),mi=Gn({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=Ss([t,e],s),i=t<=e?t:e;for(let t=0;t<i;++t)r.set(1,t,t);const a=vr(r.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return gi(fi(a,0),[n[0],1,1]);if(2===n.length)return gi(fi(fi(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return gi(fi(fi(fi(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function yi(t,e,n){const s={shape:t,value:e,dtype:n};return On.runKernelFunc((s=>s.fill(t,e,n)),{},null,"Fill",s)}const bi=Gn({floor_:function(t){const e=Un(t,"x","floor"),n={x:e};return On.runKernelFunc((t=>t.floor(e)),n,null,Z)}}),xi=30;function wi(t){return t<=xi?t:He(t,Math.floor(Math.sqrt(t)))}function vi(t,e){let n,s=!1;for(t<=xi?(n=t,s=!0):n=He(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=He(t,n+1);return n}function ki(t,e,n){const s=[],r=t.length;for(let i=0;i<r;i++)i!==e?s.push(t[i]):s.push(n);return s}function Ii(t,e,n){const s=t.shape[n],r=[];let i=1,a=1;for(let e=0;e<n;e++)r.push(t.shape[e]),i*=t.shape[e];for(let t=0;t<e.rank;t++)r.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)r.push(t.shape[e]),a*=t.shape[e];return{batchSize:i,sliceSize:a,dimSize:s,outputShape:r}}const Ci=Gn({gather_:function(t,e,n=0){const s=Un(t,"x","gather"),r=Un(e,"indices","gather","int32"),i={x:s,indices:r},a={axis:n};return On.runKernelFunc(((t,e)=>{const i=_e(n,s.shape)[0],a=Ii(s,r,i),o=t.gather(s,vr(r,[r.size]),i);return e([s,r]),vr(o,a.outputShape)}),i,null,et,a)}}),$i=Gn({greater_:function(t,e){let n=Un(t,"a","greater"),s=Un(e,"b","greater");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.greater(n,s)),r,null,"Greater")}}),Si=Gn({greaterEqual_:function(t,e){let n=Un(t,"a","greaterEqual"),s=Un(e,"b","greaterEqual");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.greaterEqual(n,s);return e([n,s]),r}),r,null,nt)}}),Ei=Gn({imag_:function(t){const e=Un(t,"input","imag"),n={input:e};return On.runKernelFunc((t=>t.imag(e)),n,null,it)}}),Ni=Gn({maximum_:function(t,e){let n=Un(t,"a","maximum"),s=Un(e,"b","maximum");[n,s]=Nn(n,s),"bool"===n.dtype&&(n=Es(n,"int32"),s=Es(s,"int32")),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.maximum(n,s);return e([n,s]),r}),r,null,ft)}}),Ri=Gn({mul_:function(t,e){let n=Un(t,"a","mul"),s=Un(e,"b","mul");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.multiply(n,s);return e([n,s]),r}),r,null,wt)}}),Ai=Gn({leakyRelu_:function(t,e=.2){const n=Un(t,"x","leakyRelu");return Ni(Ri(ur(e),n),n)}}),Ti=Gn({log_:function(t){const e=Un(t,"x","log"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.log(e);return n([e]),s}),n,null,ut)}}),Di=Gn({max_:function(t,e=null,n=!1){const s=Un(t,"x","max"),r={x:s},i={reductionIndices:e,keepDims:n};return On.runKernelFunc(((t,r)=>{let i=_e(e,s.shape);const a=br(i,s.rank);let o=s;null!=a&&(o=kr(s,a),i=wr(i.length,o.rank));const l=t.max(o,i);null!=a&&o.dispose();let u=l;if(n){const t=mr(u.shape,_e(e,s.shape));u=vr(u,t),l.dispose()}return r([s,u]),u}),r,null,pt,i)}}),Fi=Gn({sub_:function(t,e){let n=Un(t,"a","sub"),s=Un(e,"b","sub");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.subtract(n,s);return e([n,s]),r}),r,null,te)}}),_i=Gn({sum_:function(t,e=null,n=!1){let s=Un(t,"x","sum");"bool"===s.dtype&&(s=Es(s,"int32"));const r={x:s},i={axis:e,keepDims:n};return On.runKernelFunc(((t,r)=>{r([s]);const i=_e(e,s.shape),a=br(i,s.rank);let o=i,l=s;null!=a&&(l=kr(s,a),o=wr(o.length,s.rank));let u=t.sum(l,o);if(n){const t=mr(u.shape,i);u=vr(u,t)}return u}),r,null,"Sum",i)}}),Oi=Gn({logSoftmax_:function(t,e=-1){const n=Un(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s={logits:n},r={axis:e};return On.runKernelFunc(((n,s)=>{const r=Di(t,e,!0),i=Fi(t,r),a=Fi(Es(i,"float32"),Ti(_i(pi(i),e,!0)));return s([a]),a}),s,null,dt,r)}}),Mi=Gn({logicalAnd_:function(t,e){const n=Un(t,"a","logicalAnd","bool"),s=Un(e,"b","logicalAnd","bool");hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.logicalAnd(n,s)),r,null,"LogicalAnd")}}),Li=Gn({maxPool_:function(t,e,n,s,r){const i=Un(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=vr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Ie(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),Ie(Lr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&Ie(Re(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:a},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},c=On.runKernelFunc(((t,i)=>{const o=Er(a.shape,e,n,1,s,r);let l;return l=1===o.filterWidth&&1===o.filterHeight&&Ne(o.inShape,o.outShape)?a.clone():t.maxPool(a,o),i([a,l]),l}),l,null,gt,u);return o?vr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zi=Gn({maxPool3d_:function(t,e=[1,1,1],n,s,r,i="NDHWC",a){null==a?a=[1,1,1]:er("dilations is deprecated, this field will be gone in v3.0.0.");const o=Un(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=vr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Ie(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),Ie("NDHWC"===i,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+i)),Ie(Lr(n,a),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=r&&Ie(Re(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:i,dilations:a},d=On.runKernelFunc(((t,o)=>{null==a&&(a=[1,1,1]);const u=Nr(l.shape,e,n,a,s,r,i),c=t.maxPool3d(l,u);return o([l,c]),c}),c,null,yt,h);return u?vr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Bi(t,e="float32"){if("complex64"===e){const e=Bi(t,"float32"),n=Bi(t,"float32");return Hn(e,n)}const n=Je(Ee(t),e);return On.makeTensor(n,t,e)}function Pi(t,e="float32"){if("complex64"===e){const e=Pi(t,"float32"),n=Bi(t,"float32");return Hn(e,n)}const n=Ye(Ee(t),e);return On.makeTensor(n,t,e)}const Wi=Gn({mean_:function(t,e=null,n=!1){const s=Un(t,"x","mean"),r=_e(e,s.shape),i=Ee(gr(s.shape,r)[1]);return lr((t=>{const s=ur(i),a=s.dtype===t.dtype?t:Es(t,s.dtype),o=oi(a,s);return{value:_i(o,e,n),gradFunc:e=>{const n=t.shape.slice();r.forEach((t=>{n[t]=1}));const s=vr(e,n);return oi(Ri(s,Pi(t.shape,"float32")),i)}}}))(s)}}),Ui=Gn({min_:function(t,e=null,n=!1){const s=Un(t,"x","min"),r={x:s},i={axis:e,keepDims:n};return On.runKernelFunc(((t,r)=>{const i=_e(e,s.shape);let a=i;const o=br(a,s.rank);let l=s;null!=o&&(l=kr(s,o),a=wr(a.length,s.rank));const u=t.min(l,a);null!=o&&l.dispose();let c=u;if(n){const t=mr(c.shape,i);c=vr(u,t),u.dispose()}return r([s,c]),c}),r,null,"Min",i)}}),Vi=Gn({minimum_:function(t,e){let n=Un(t,"a","minimum"),s=Un(e,"b","minimum");[n,s]=Nn(n,s),"bool"===n.dtype&&(n=Es(n,"int32"),s=Es(s,"int32")),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.minimum(n,s);return e([n,s]),r}),r,null,xt)}}),Gi=Gn({square_:function(t){const e=Un(t,"x","square"),n=[e];return On.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),Hi=Gn({moments_:function(t,e=null,n=!1){const s=_e(e,(t=Un(t,"x","moments")).shape),r=Wi(t,s,n);let i=r.shape;n||(i=mr(r.shape,s));const a=Gi(Fi(Es(t,"float32"),vr(r,i)));return{mean:r,variance:Wi(a,s,n)}}}),ji=Gn({neg_:function(t){const e=Un(t,"x","neg"),n={x:e};return On.runKernelFunc((t=>t.neg(e)),n,null,vt)}}),qi=Gn({notEqual_:function(t,e){let n=Un(t,"a","notEqual"),s=Un(e,"b","notEqual");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.notEqual(n,s)),r,null,kt)}}),Ki=Gn({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const r=Un(t,"indices","oneHot","int32"),i=[...r.shape,e],a={indices:r},o={depth:e,onValue:n,offValue:s};return On.runKernelFunc(((t,a)=>(a([r]),vr(t.oneHot(vr(r,[r.size]),e,n,s),i))),a,null,Et,o)}}),Xi=Gn({real_:function(t){const e=Un(t,"input","real"),n={input:e};return On.runKernelFunc((t=>t.real(e)),n,null,At)}}),Yi=Gn({zerosLike_:function(t){const e=Un(t,"x","zerosLike"),n={x:e};return On.runKernelFunc((t=>t.zerosLike(e)),n,null,le)}}),Ji=Gn({onesLike_:function(t){const e=Un(t,"x","onesLike"),n={x:e};return On.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=Ji(Xi(e)),n=Yi(Ei(e));return Hn(t,n)}return t.onesLike(e)}),n,null,St)}}),Zi=Gn({pad_:function(t,e,n=0){const s=Un(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},i={x:s};return On.runKernelFunc(((t,r)=>(r([s]),t.pad(s,e,n))),i,null,Nt,r)}}),Qi=Gn({prelu_:function(t,e){const n=Un(t,"x","prelu"),s=Un(e,"alpha","prelu"),r={x:n,alpha:s};return On.runKernelFunc(((t,e)=>{const r=t.prelu(n,s);return e([n,s]),r}),r,null,Rt)}});var ta=n(30);class ea{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=ta.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*a,e=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class na{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ta.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const sa=Gn({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type "+s);const i=new ea(e,n,s,!1,r),a=Ss(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),ra=Gn({randomUniform_:function(t,e=0,n=1,s="float32",r){const i=Ss(t,s),a=new na(e,n,null,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});function ia(t,e){$e(t);const n=Bn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return jn(t,null,n,e)}function aa(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return On.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Bi([0],s);const r=Je(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return ia(r,s)}),{},null,"Range",r)}const oa=Gn({relu_:function(t){const e=Un(t,"x","relu"),n={x:e};return On.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Es(e,"int32"):t.relu(e))),n,null,Dt)}}),la=Gn({reverse_:function(t,e){const n=Un(t,"x","reverse"),s={x:n},r={dims:e};return On.runKernelFunc((t=>{const s=_e(e,n.shape);if(0===n.rank)return Ns(n);const r=t.reverse(n,s);return vr(r,n.shape)}),s,null,Lt,r)}}),ua=Gn({selu_:function(t){const e=Un(t,"x","selu"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.selu(e);return n([e]),s}),n,null,Wt)}}),ca=Gn({separableConv2d_:function(t,e,n,s,r,i=[1,1],a="NHWC"){const o=Un(t,"x","separableConv2d"),l=Un(e,"depthwiseFilter","separableConv2d"),u=Un(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=vr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Ie(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Ie(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Ie(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Ie(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Ie(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];Ie(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=ii(c,l,s,r,a,i),g=ti(f,u,1,"valid",a);return h?vr(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),ha=Gn({sigmoid_:function(t){const e=Un(t,"x","sigmoid"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.sigmoid(e);return n([s]),s}),n,null,jt)}}),da=Gn({slice_:function(t,e,n){const s=Un(t,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:n};return On.runKernelFunc(((t,r)=>{const[i,a]=Js(s,e,n);return Ls(s,i,a),r([s]),t.slice(s,i,a)}),r,null,Ut,i)}}),pa=Gn({slice1d_:function(t,e,n){const s=Un(t,"x","slice1d");return Ie(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),da(s,[e],[n])}}),fa=Gn({slice2d_:function(t,e,n){const s=Un(t,"x","slice2d");return Ie(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),da(s,e,n)}}),ga=Gn({slice3d_:function(t,e,n){const s=Un(t,"x","slice3d");return Ie(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),da(s,e,n)}}),ma=Gn({slice4d_:function(t,e,n){const s=Un(t,"x","slice4d");return Ie(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),da(s,e,n)}}),ya=Gn({softmax_:function(t,e=-1){const n=Un(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return On.runKernelFunc(((t,s)=>{const r=t.softmax(n,e);return s([r]),r}),s,null,Jt,r)}}),ba=Gn({softplus_:function(t){const e=Un(t,"x","softplus"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.softplus(e);return n([e]),s}),n,null,qt)}});function xa(t,e,n=0){let s=[];if("number"==typeof e)Ie(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{Ie(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const r=e.indexOf(-1);if(-1!==r){const s=e.reduce(((t,e)=>e>0?t+e:t));e[r]=t.shape[n]-s}Ie(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}const wa=Gn({split_:function(t,e,n=0){const s=Un(t,"x","split"),r={x:s},i={numOrSizeSplits:e,axis:n};return On.runKernelFunc(((t,r)=>{const i=_e(n,s.shape)[0],a=xa(s,e,i);return t.split(s,a,i)}),r,null,Yt,i)}}),va=Gn({sqrt_:function(t){const e=Un(t,"x","sqrt"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.sqrt(e);return n([e]),s}),n,null,Kt)}}),ka=Gn({squeeze_:function(t,e){const n=Un(t,"x","squeeze");return vr(n,Oe(n.shape,e).newShape)}}),Ia=Gn({stack_:function(t,e=0){const n=Vn(t,"tensors","stack");if(Ie(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return fi(n[0],e);const s=n[0].rank,r=n[0].shape,i=n[0].dtype;Ie(e<=s,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{Ce(r,t.shape,"All tensors passed to stack must have matching shapes"),Ie(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const a=n.map((t=>fi(t,e)));return Xr(a,e)}}),Ca=Gn({tanh_:function(t){const e=Un(t,"x","tanh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.tanh(e);return n([s]),s}),n,null,ne)}});function $a(t,e,n){if($e(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Bn(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return jn(t,e,s,n)}function Sa(t,e,n){if($e(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Bn(t,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return jn(t,e,s,n)}const Ea=Gn({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new ea(e,n,s,!0,r),a=Ss(t,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Na=Gn({unstack_:function(t,e=0){const n=Un(t,"x","unstack");Ie(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const s={value:n},r={axis:e};return On.runKernelFunc((t=>t.unstack(n,e)),s,null,ae,r)}}),Ra=Gn({broadcastTo_:function(t,e){let n=Un(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=vr(n,t)}const r=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Ns(n);const a={x:n},o={shape:e,inputShape:r};return On.runKernelFunc((t=>t.tile(n,i)),a,null,A,o)}}),Aa=Gn({where_:function(t,e,n){const s=Un(e,"a","where"),r=Un(n,"b","where"),i=Un(t,"condition","where","bool"),a=hi(s.shape,r.shape),o=Ra(s,a),l=Ra(r,a);1===i.rank&&Ie(i.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==i.rank&&Ce(i.shape,l.shape,"Error in where: ");const u={condition:i,t:o,e:l};return On.runKernelFunc(((t,e)=>{const n=t.select(i,o,l);return e([i]),n}),u,null,Pt)}}),Ta=Gn({dropout_:function(t,e,n,s){const r=Un(t,"x","dropout");if(Ie("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),Ie(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof bn?r.clone():r;const i=function(t,e){if(null==e)return t.shape.slice();if(Ne(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),a=1-e,o=oi(bi(dr(ra(i,0,1,"float32",s),a)),a);return Ri(r,o)}}),Da=Gn({fft_:function(t){Ie("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return On.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=t.as2D(s,n);return e.fft(r).reshape(t.shape)}),e,null,"FFT")}}),Fa=Gn({rfft_:function(t,e){Ie("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got "+t.dtype));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,r=da(t,s,i),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=Xr([t,Bi(s)],t.shape.length-1),n=e}else r=t;const i=Yi(r),a=vr(Hn(r,i),[s,n]),o=Da(a),l=Math.floor(n/2)+1,u=Xi(o),c=Ei(o),h=wa(u,[l,n-l],u.shape.length-1),d=wa(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,vr(Hn(h[0],d[0]),p)}}),_a=Gn({ifft_:function(t){Ie("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return On.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=vr(t,[s,n]),i=e.ifft(r);return vr(i,t.shape)}),e,null,rt)}}),Oa=Gn({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=vr(t,[n,e]);s=_a(r)}else{const r=[n,2*(e-1)],i=vr(Xi(t),[n,e]),a=vr(Ei(t),[n,e]),o=la(da(i,[0,1],[n,e-2]),1),l=Ri(la(da(a,[0,1],[n,e-2]),1),ur(-1)),u=Xr([i,o],1),c=Xr([a,l],1),h=vr(Hn(u,c),[r[0],r[1]]);s=_a(h)}if(s=Xi(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=vr(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),Ma=Gn({conv2DBackpropFilter_:function(t,e,n,s,r,i="NHWC",a){let o=t;3===t.rank&&(o=vr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=vr(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Ie(4===o.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+".")),Ie(4===l.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+l.shape+".")),Ie(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];Ie(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Ie(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=a&&Ie(Re(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a};return On.runKernelFunc((t=>{const e=zr(i),u=Rr(o.shape,n,s,1,r,a,!1,e);return t.conv2dDerFilter(o,l,u)}),h,null,"Conv2DBackpropFilter",d)}}),La=Gn({relu6_:function(t){const e=Un(t,"x","relu6"),n={x:e};return On.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Es(e,"int32"):t.relu6(e))),n,null,Mt)}}),za=Gn({step_:function(t,e=0){const n=Un(t,"x","step"),s={x:n},r={alpha:e};return On.runKernelFunc((t=>t.step(n,e)),s,null,ue,r)}});function Ba(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Ri(t,za(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Pa(t,e){let n=e;const s=ci(t.shape,e.shape);return s.length>0&&(n=_i(n,s)),vr(n,t.shape)}function Wa(t,e,n){if("linear"===e)return t;if("relu"===e)return oa(t);if("elu"===e)return li(t);if("relu6"===e)return La(t);if("prelu"===e)return Qi(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Ua=(t,e)=>!(t>0)||"linear"===e,Va=Gn({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===Ua(On.state.gradientDepth,l)){let c=ti(t,e,n,s,r,i,a);return null!=o&&(c=dr(c,o)),Wa(c,l,u)}const c=Un(t,"x","conv2d"),h=Un(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=vr(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Ie(4===d.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+".")),Ie(4===h.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+".")),null!=a&&Ie(Re(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`)),Ie(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),Ie(Lr(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Ie("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const f=Rr(d.shape,h.shape,n,i,s,a);let g,m;null!=o&&(g=Un(o,"bias","fused conv2d"),[g]=Nn(g,c),hi(f.outShape,g.shape)),null!=u&&(m=Un(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[r,a,o,u]=e,c=Ba(t,o,l);Ie(Mr(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const h=[ni(a.shape,c,r,n,s),Ma(a,c,r.shape,n,s)];if(null!=u){const t=Pa(u,c);h.push(t)}return h},b=t=>t.fusedConv2d({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m}),x={x:d,filter:h,bias:g,preluActivationWeights:m},w={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l};return null==o?lr(((t,e,n)=>{let s=On.runKernelFunc(b,x,null,de,w);return n([e,t,s]),p&&(s=vr(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(d,h):lr(((t,e,n,s)=>{let r=On.runKernelFunc(b,x,null,de,w);return s([e,t,r,n]),p&&(r=vr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(d,h,g)}}),Ga=Gn({matMul_:function(t,e,n=!1,s=!1){let r=Un(t,"a","matMul"),i=Un(e,"b","matMul");[r,i]=Nn(r,i),Ie(r.rank>=2&&i.rank>=2&&r.rank===i.rank,(()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${r.rank} and ${i.rank}.`));const a=n?r.shape[r.rank-2]:r.shape[r.rank-1],o=s?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?r.shape[r.rank-1]:r.shape[r.rank-2],u=s?i.shape[i.rank-2]:i.shape[i.rank-1],c=r.shape.slice(0,-2),h=i.shape.slice(0,-2),d=Ee(c),p=Ee(h);Ie(Ne(c,h),(()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${r.shape} and `+i.shape+" must match.")),Ie(a===o,(()=>`Error in matMul: inner shapes (${a}) and (${o}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${n} and transposeB=${s} must match.`));const f=r.shape.slice(0,-2).concat([l,u]),g=vr(r,n?[d,a,l]:[d,l,a]),m=vr(i,s?[p,u,o]:[p,o,u]),y={a:g,b:m},b={transposeA:n,transposeB:s},x=On.runKernelFunc(((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,s))),y,null,N,b);return vr(x,f)}}),Ha=Gn({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a}){if(!1===Ua(On.state.gradientDepth,i)){let o=Ga(t,e,n,s);return null!=r&&(o=dr(o,r)),Wa(o,i,a)}let o=Un(t,"a","fused matMul"),l=Un(e,"b","fused matMul");[o,l]=Nn(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=s?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=s?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),g=Ee(p),m=Ee(f);Ie(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),Ie(Ne(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and `+l.shape+" must match.")),Ie(u===c,(()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=o.shape.slice(0,-2).concat([h,d]),b=vr(o,n?[g,u,h]:[g,h,u]),x=vr(l,s?[m,d,c]:[m,c,d]);let w,v;null!=r&&(w=Un(r,"bias","fused matMul"),[w]=Nn(w,o),hi(y,w.shape)),null!=a&&(v=Un(a,"prelu weights","fused matMul"));const k=(t,e)=>{const[a,o,l,u]=e,c=Ba(vr(t,l.shape),l,i);let h,d;return n||s?!n&&s?(h=Ga(c,o,!1,!1),d=Ga(c,a,!0,!1)):n&&!s?(h=Ga(o,c,!1,!0),d=Ga(a,c,!1,!1)):(h=Ga(o,c,!0,!0),d=Ga(c,a,!0,!0)):(h=Ga(c,o,!1,!0),d=Ga(a,c,!0,!1)),null!=r?[h,d,Pa(u,c)]:[h,d]},I=t=>t.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:s,bias:w,activation:i,preluActivationWeights:v}),C={a:b,b:x,bias:w,preluActivationWeights:v},$={transposeA:n,transposeB:s,activation:i};return null==r?lr(((t,e,n)=>{const s=On.runKernelFunc(I,C,null,he,$);return n([t,e,s]),{value:vr(s,y),gradFunc:k}}))(b,x):lr(((t,e,n,s)=>{const r=On.runKernelFunc(I,C,null,he,$);return s([t,e,r,n]),{value:vr(r,y),gradFunc:k}}))(b,x,w)}});function ja(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+s-1);r[i]=e-n*Math.cos(a)}return ia(r,"float32")}Gn({hammingWindow_:function(t){return ja(t,.54,.46)}});const qa=Gn({hannWindow_:function(t){return ja(t,.5,.5)}}),Ka=Gn({frame_:function(t,e,n,s=!1,r=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(da(t,i,e)),i+=n;if(s)for(;i<t.size;){const s=i+e-t.size,o=Xr([da(t,i,e-s),yi([s],r)]);a.push(o),i+=n}return 0===a.length?$a([],[0,e]):vr(Xr(a),[a.length,e])}});function Xa(t,e,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),Ie(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),Ie(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),Ie(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1])),Ie(1===e.rank,(()=>"scores must be a 1D tensor")),Ie(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was `+e.shape[0])),Ie(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}function Ya(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(e,t[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}(t,e,n||Ja)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function Ja(t,e){return t>e?1:t<e?-1:0}function Za(t,e,n,s,r){return eo(t,e,n,s,r,0).selectedIndices}function Qa(t,e,n,s,r,i){return eo(t,e,n,s,r,0,!1,i,!0)}function to(t,e,n,s,r,i){return eo(t,e,n,s,r,i,!0)}function eo(t,e,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(ro);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<r)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=no(t,i,h[n]);if(a>=s){o=!0;break}if(e.score=e.score*so(s,c,a),e.score<=r)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(i),d.push(e.score)):e.score>r&&Ya(u,e,ro))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:ia(h,"int32")};return a&&(g.selectedScores=ia(d,"float32")),l&&(g.validOutputs=ur(p,"int32")),g}function no(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function so(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function ro(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}Gn({stft_:function(t,e,n,s,r=qa){var i;null==s&&(i=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=Ka(t,e,n),o=Ri(a,r(e)),l=[];for(let t=0;t<a.shape[0];t++)l.push(Fa(da(o,[t,0],[1,e]),s));return Xr(l)}}),Gn({cropAndResize_:function(t,e,n,s,r,i){const a=Un(t,"image","cropAndResize"),o=Un(e,"boxes","cropAndResize","float32"),l=Un(n,"boxInd","cropAndResize","int32");r=r||"bilinear",i=i||0;const u=o.shape[0];Ie(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),Ie(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Ie(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Ie(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),Ie(s[0]>=1&&s[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+s)),Ie("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was "+r));const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return On.runKernelFunc((t=>t.cropAndResize(a,o,l,s,r,i)),c,null,"CropAndResize",h)}}),Gn({flipLeftRight_:function(t){const e=Un(t,"image","flipLeftRight","float32");Ie(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return On.runKernel(J,n,{})}}),Gn({rotateWithOffset_:function(t,e,n=0,s=.5){const r=Un(t,"image","rotateWithOffset","float32");Ie(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:e,fillValue:n,center:s};return On.runKernel(ce,i,a)}}),Gn({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=Un(t,"boxes","nonMaxSuppression"),a=Un(e,"scores","nonMaxSuppression"),o=Xa(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return On.runKernelFunc((t=>t.nonMaxSuppression(i,a,n,s,r)),{boxes:i,scores:a},null,It,l)}}),Gn({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=Un(t,"boxes","nonMaxSuppression"),o=Un(e,"scores","nonMaxSuppression"),l=Xa(a,o,n,s,r,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=On.runKernel($t,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Gn({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=Un(t,"boxes","nonMaxSuppression"),o=Un(e,"scores","nonMaxSuppression"),l=Xa(a,o,n,s,r,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=On.runKernel(Ct,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const io=Gn({resizeBilinear_:function(t,e,n=!1){const s=Un(t,"images","resizeBilinear");Ie(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Ie(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."));let r=s,i=!1;3===s.rank&&(i=!0,r=vr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[a,o]=e,l={images:r},u={alignCorners:n,size:e},c=On.runKernelFunc(((t,e)=>(e([r]),t.resizeBilinear(r,a,o,n))),l,null,Ot,u);return i?vr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ao=Gn({resizeNearestNeighbor_:function(t,e,n=!1){const s=Un(t,"images","resizeNearestNeighbor");Ie(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Ie(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+".")),Ie("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let r=s,i=!1;3===s.rank&&(i=!0,r=vr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[a,o]=e,l={images:r},u={alignCorners:n,size:e},c=On.runKernelFunc(((t,e)=>(e([r]),t.resizeNearestNeighbor(r,a,o,n))),l,null,_t,u);return i?vr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),oo=Gn({lessEqual_:function(t,e){let n=Un(t,"a","lessEqual"),s=Un(e,"b","lessEqual");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.lessEqual(n,s);return e([n,s]),r}),r,null,"LessEqual")}}),lo=Gn({bandPart_:function(t,e,n){Ie(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Ie(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Un(t,"a","bandPart");Ie(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=vr(aa(0,i,1,"int32"),[-1,1]),l=aa(0,a,1,"int32"),u=Fi(o,l),c=Mi(oo(u,ur(+e,"int32")),Si(u,ur(-n,"int32"))),h=Bi([i,a],s.dtype);return vr(Ia(Na(vr(s,[-1,i,a])).map((t=>Aa(c,t,h)))),r)}}),uo=Gn({pow_:function(t,e){let n=Un(t,"base","pow"),s=Un(e,"exp","pow");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.pow(n,s);return e([n,s,r]),r}),r,null,"Pow")}});function co(t,e,n=null){if(0===t.rank)return hr(t);if(1!==t.rank&&null===n)return co(vr(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return _i(hr(t),n);if(e===1/0)return Di(hr(t),n);if(e===-1/0)return Ui(hr(t),n);if("euclidean"===e||2===e)return va(_i(uo(hr(t),ur(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return Di(_i(hr(t),n[0]),n[1]-1);if(e===1/0)return Di(_i(hr(t),n[1]),n[0]);if(e===-1/0)return Ui(_i(hr(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return va(_i(Gi(t),n));throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const ho=Gn({norm_:function(t,e="euclidean",n=null,s=!1){const r=co(t=Un(t,"x","norm"),e,n);let i=r.shape;if(s){const e=_e(n,t.shape);i=mr(r.shape,e)}return vr(r,i)}}),po=Gn({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Ie(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Ie(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=wa(t,t.shape[0],0).map((t=>ka(t,[0])));Ie(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(On.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Ri(_i(Ri(n[s],t)),n[s]);t=Fi(t,e)}return oi(t,ho(t,"euclidean"))})));return e?Ia(n,0):n}});function fo(t,e=!1){return On.tidy((()=>{Ie(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=mi(n),i=Ns(t);const a=$a([[1]],[1,1]);let o=Ns(a);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=i,l=o,u=r;[o,i,r]=On.tidy((()=>{const e=da(i,[t,t],[n-t,1]),l=ho(e),u=da(i,[t,t],[1,1]),c=Aa($i(u,0),$a([[-1]]),$a([[1]])),h=Fi(u,Ri(c,l)),d=oi(e,h);o=1===d.shape[0]?Ns(a):Xr([a,da(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ji(oi(Ga(c,h),l)),f=da(i,[t,0],[n-t,s]),g=Ri(p,o),m=kr(o);if(0===t)i=Fi(f,Ga(g,Ga(m,f)));else{const e=Fi(f,Ga(g,Ga(m,f)));i=Xr([da(i,[0,0],[t,s]),e],0)}const y=kr(g),b=da(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Fi(b,Ga(Ga(b,o),y));else{const e=Fi(b,Ga(Ga(b,o),y));r=Xr([da(r,[0,0],[n,t]),e],1)}return[o,i,r]})),ir([e,l,u])}return!e&&n>s&&(r=da(r,[0,0],[n,s]),i=da(i,[0,0],[s,s])),[r,i]}))}const go=Gn({qr_:function(t,e=!1){if(Ie(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank)),2===t.rank)return fo(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=Na(vr(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],i=[];return s.forEach((t=>{const[n,s]=fo(t,e);r.push(n),i.push(s)})),[vr(Ia(r,0),t.shape),vr(Ia(i,0),t.shape)]}}});var mo;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(mo||(mo={}));const yo=Gn({computeWeightedLoss_:function(t,e,n=mo.SUM_BY_NONZERO_WEIGHTS){const s=Un(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=Un(e,"weights","computeWeightedLoss"));const i=null==r?s:Ri(s,r);if(n===mo.NONE)return i;if(n===mo.SUM)return _i(i);if(n===mo.MEAN){if(null==r)return Wi(i);{const t=s.size/r.size,e=oi(_i(i),_i(r));return t>1?oi(e,ur(t)):e}}if(n===mo.SUM_BY_NONZERO_WEIGHTS){if(null==r)return oi(_i(i),ur(s.size));{const t=Ri(r,Pi(s.shape)),e=Es(_i(qi(t,ur(0))),"float32");return oi(_i(i),e)}}throw Error("Unknown reduction: "+n)}});Gn({absoluteDifference_:function(t,e,n,s=mo.SUM_BY_NONZERO_WEIGHTS){const r=Un(t,"labels","absoluteDifference"),i=Un(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=Un(n,"weights","absoluteDifference")),Ce(r.shape,i.shape,"Error in absoluteDifference: ");const o=hr(Fi(r,i));return yo(o,a,s)}}),Gn({cosineDistance_:function(t,e,n,s,r=mo.SUM_BY_NONZERO_WEIGHTS){const i=Un(t,"labels","cosineDistance"),a=Un(e,"predictions","cosineDistance");let o=null;null!=s&&(o=Un(s,"weights","cosineDistance")),Ce(i.shape,a.shape,"Error in cosineDistance: ");const l=ur(1),u=Fi(l,_i(Ri(i,a),n,!0));return yo(u,o,r)}}),Gn({hingeLoss_:function(t,e,n,s=mo.SUM_BY_NONZERO_WEIGHTS){let r=Un(t,"labels","hingeLoss");const i=Un(e,"predictions","hingeLoss");let a=null;null!=n&&(a=Un(n,"weights","hingeLoss")),Ce(r.shape,i.shape,"Error in hingeLoss: ");const o=ur(1);r=Fi(Ri(ur(2),r),o);const l=oa(Fi(o,Ri(r,i)));return yo(l,a,s)}}),Gn({huberLoss_:function(t,e,n,s=1,r=mo.SUM_BY_NONZERO_WEIGHTS){const i=Un(t,"labels","huberLoss"),a=Un(e,"predictions","huberLoss");let o=null;null!=n&&(o=Un(n,"weights","huberLoss")),Ce(i.shape,a.shape,"Error in huberLoss: ");const l=ur(s),u=hr(Fi(a,i)),c=Vi(u,l),h=Fi(u,c),d=dr(Ri(ur(.5),Gi(c)),Ri(l,h));return yo(d,o,r)}}),Gn({logLoss_:function(t,e,n,s=1e-7,r=mo.SUM_BY_NONZERO_WEIGHTS){const i=Un(t,"labels","logLoss"),a=Un(e,"predictions","logLoss");let o=null;null!=n&&(o=Un(n,"weights","logLoss")),Ce(i.shape,a.shape,"Error in logLoss: ");const l=ur(1),u=ur(s),c=ji(Ri(i,Ti(dr(a,u)))),h=Ri(Fi(l,i),Ti(dr(Fi(l,a),u))),d=Fi(c,h);return yo(d,o,r)}});const bo=Gn({squaredDifference_:function(t,e){let n=Un(t,"a","squaredDifference"),s=Un(e,"b","squaredDifference");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.squaredDifference(n,s);return e([n,s]),r}),r,null,Zt,{})}});Gn({meanSquaredError_:function(t,e,n,s=mo.SUM_BY_NONZERO_WEIGHTS){const r=Un(t,"labels","meanSquaredError"),i=Un(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=Un(n,"weights","meanSquaredError")),Ce(r.shape,i.shape,"Error in meanSquaredError: ");const o=bo(r,i);return yo(o,a,s)}});const xo=Gn({log1p_:function(t){const e=Un(t,"x","log1p"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.log1p(e);return n([e]),s}),n,null,ct)}});Gn({sigmoidCrossEntropy_:function(t,e,n,s=0,r=mo.SUM_BY_NONZERO_WEIGHTS){let i=Un(t,"multiClassLabels","sigmoidCrossEntropy");const a=Un(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Un(n,"weights","sigmoidCrossEntropy")),Ce(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=ur(s),e=ur(1),n=ur(.5);i=dr(Ri(i,Fi(e,t)),Ri(n,t))}const l=function(t,e){const n=Un(t,"labels","sigmoidCrossEntropyWithLogits"),s=Un(e,"logits","sigmoidCrossEntropyWithLogits");Ce(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=oa(s),i=Ri(s,n),a=xo(pi(ji(hr(s))));return dr(Fi(r,i),a)}(i,a);return yo(l,o,r)}});const wo=Gn({logSumExp_:function(t,e=null,n=!1){const s=Un(t,"x","logSumExp"),r=_e(e,s.shape),i=Di(s,r,!0),a=Fi(s,i),o=pi(a),l=_i(o,r),u=Ti(l),c=dr(vr(i,u.shape),u);if(n){const t=mr(c.shape,r);return vr(c,t)}return c}});Gn({softmaxCrossEntropy_:function(t,e,n,s=0,r=mo.SUM_BY_NONZERO_WEIGHTS){let i=Un(t,"onehotLabels","softmaxCrossEntropy");const a=Un(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Un(n,"weights","softmaxCrossEntropy")),Ce(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const t=ur(s),e=ur(1),n=ur(i.shape[1]);i=dr(Ri(i,Fi(e,t)),oi(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return lr(((t,e,s)=>{const r=wo(e,[n],!0),i=Fi(Es(e,"float32"),r);s([t,i]);const a=ji(Ri(i,t));return{value:_i(a,[n]),gradFunc:(t,e)=>{const[s,r]=e,i=mr(t.shape,[n]);return[Ri(vr(t,i),Fi(Es(s,"float32"),pi(r))),Ri(vr(t,i),Fi(pi(r),Es(s,"float32")))]}}}))(t,e)}(i,a);return yo(l,o,r)}});const vo={bandPart:lo,gramSchmidt:po,qr:go};class ko extends cr{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=On.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=On.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:rr((()=>Yi(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:rr((()=>Yi(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;rr((()=>{const t=dr(Ri(i,this.rho),Ri(Gi(r),1-this.rho)),e=Ri(oi(va(dr(a,this.epsilon)),va(dr(i,this.epsilon))),r),n=dr(Ri(a,this.rho),Ri(Gi(e),1-this.rho));i.assign(t),a.assign(n);const o=dr(Ri(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ir(this.accumulatedGrads.map((t=>t.variable))),ir(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ko.className="Adadelta",tr(ko);class Io extends cr{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=On.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:rr((()=>yi(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const i=this.accumulatedGrads[n].variable;rr((()=>{const t=dr(i,Gi(r));i.assign(t);const e=dr(Ri(oi(r,va(dr(t,On.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ir(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Io.className="Adagrad",tr(Io);class Co extends cr{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],rr((()=>{this.accBeta1=ur(e).variable(),this.accBeta2=ur(n).variable()})),null==s&&(this.epsilon=On.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);rr((()=>{const n=Fi(1,this.accBeta1),s=Fi(1,this.accBeta2);e.forEach(((e,r)=>{const i=On.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:e+"/m",variable:rr((()=>Yi(i).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:e+"/v",variable:rr((()=>Yi(i).variable(!1)))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=dr(Ri(o,this.beta1),Ri(a,1-this.beta1)),c=dr(Ri(l,this.beta2),Ri(Gi(a),1-this.beta2)),h=oi(u,n),d=oi(c,s);o.assign(u),l.assign(c);const p=dr(Ri(oi(h,dr(va(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Ri(this.accBeta1,this.beta1)),this.accBeta2.assign(Ri(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ir(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&ir(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),rr((()=>{this.accBeta1.assign(uo(this.beta1,this.iterations_+1)),this.accBeta2.assign(uo(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Co.className="Adam",tr(Co);class $o extends cr{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],rr((()=>{this.iteration=ur(0).variable(),this.accBeta1=ur(e).variable()})),null==s&&(this.epsilon=On.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);rr((()=>{const n=Fi(1,this.accBeta1),s=oi(-this.learningRate,dr(Ri(this.iteration,this.decay),1));e.forEach(((e,r)=>{const i=On.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:e+"/m",variable:Yi(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:e+"/v",variable:Yi(i).variable(!1)});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=dr(Ri(o,this.beta1),Ri(a,1-this.beta1)),c=Ri(l,this.beta2),h=hr(a),d=Ni(c,h);o.assign(u),l.assign(d);const p=dr(Ri(oi(s,n),oi(u,dr(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(dr(this.iteration,1)),this.accBeta1.assign(Ri(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ir(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&ir(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}$o.className="Adamax",tr($o);class So extends cr{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=On.registeredVariables[e];rr((()=>{const t=dr(Ri(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ar(ur(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}So.className="SGD",tr(So);class Eo extends So{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ur(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=On.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:rr((()=>Yi(s).variable(t)))}}const r=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&rr((()=>{let t;const e=dr(Ri(this.m,r),i);t=this.useNesterov?dr(Ri(this.c,dr(i,Ri(e,this.m))),s):dr(Ri(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ir(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Eo.className="Momentum",tr(Eo);class No extends cr{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=On.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=On.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:rr((()=>Yi(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:rr((()=>Yi(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:rr((()=>Yi(s).variable(r)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;rr((()=>{const t=dr(Ri(a,this.decay),Ri(Gi(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=dr(Ri(e,this.decay),Ri(i,1-this.decay)),l=oi(Ri(i,this.learningRate),va(Fi(t,dr(Gi(r),this.epsilon)))),u=dr(Ri(o,this.momentum),l);a.assign(t),e.assign(r),o.assign(u);const c=Fi(s,u);s.assign(c)}else{const t=dr(Ri(a,this.decay),Ri(Gi(i),1-this.decay)),e=dr(Ri(o,this.momentum),oi(Ri(i,this.learningRate),va(dr(t,this.epsilon))));a.assign(t),o.assign(e);const n=Fi(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ir(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ir(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&ir(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}No.className="RMSProp",tr(No);class Ro{static sgd(t){return new So(t)}static momentum(t,e,n=!1){return new Eo(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new No(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new Co(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new ko(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new $o(t,e,n,s,r)}static adagrad(t,e=.1){return new Io(t,e)}}const Ao={sgd:Ro.sgd,momentum:Ro.momentum,adadelta:Ro.adadelta,adagrad:Ro.adagrad,rmsprop:Ro.rmsprop,adamax:Ro.adamax,adam:Ro.adam},To="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Do(){return new Promise((t=>To((()=>t()))))}function Fo(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function _o(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function Oo(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Mo(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function Lo(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function zo(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function Bo(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,s=n[n.length-1];let r=1;for(let t=0;t<n.length-1;++t)r*=n[t];const i=t.shape,a=n.slice();a.pop();let o=1;for(let e=s;e<t.rank;++e)o*=i[e],a.push(i[e]);const l=[...je(t.shape).map((t=>t/o)),1].slice(0,s);return[a,r,o,l]}function Po(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(i+" Output shape length < "+(s+(n.rank-r)));if(n.rank!==r+t.length-s)throw new Error(i+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(i+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function Wo(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}Po(n,e,t)}function Uo(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=n.length;let a=1;for(let t=r;t<i;++t)a*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:Ee(e.shape)/o,sliceSize:a,strides:[...je(n.slice(0,r)),1],outputSize:Ee(n)}}const Vo=1.7580993408473768,Go=1.0507009873554805,Ho=.3275911,jo=.254829592,qo=-.284496736,Ko=1.421413741,Xo=-1.453152027,Yo=1.061405429;function Jo(...t){u().getBool("IS_TEST")||console.warn(...t)}function Zo(...t){u().getBool("IS_TEST")||console.log(...t)}function Qo(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function tl(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function el(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function nl(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function sl(t,e){return{real:t[2*e],imag:t[2*e+1]}}function rl(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function il(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const i=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function al(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function ol(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Bi(t.shape),s=Es(t,"float32"),r=n.complex(s,e);return e.dispose(),s.dispose(),r}if(!ze(t.dtype,e))return On.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const s=n.real(t),r=Es(s,e);return s.dispose(),r}if("int32"===e)return n.int(t);if("bool"===e){const e=ur(0,t.dtype),s=n.notEqual(t,e);return e.dispose(),s}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function ll(t,e){return On.makeTensorFromDataId(t.dataId,e,t.dtype)}function ul(t,e,n){const s=(e-t)/(n-1),r=Je(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return ia(r,"float32")}function cl(t,e,n){const s=new Array(t.rank).fill(0),r=t.shape.slice();return e.map((e=>{const i=[...r];i[n]=e;const a=da(t,s,i);return s[n]+=e,a}))}function hl(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=Ss(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const i=t.locToIndex(r);s.values[e]=t.values[i]}return s.toTensor()}function dl(t,e,n,s,r){const i=e[e.length-1],[a,o]=[t.length/i,i],l=Me(n,a*s),u=Me("int32",a*s);for(let e=0;e<a;e++){const n=e*o,r=t.subarray(n,n+o),i=[];for(let t=0;t<r.length;t++)i.push({value:r[t],index:t});i.sort(((t,e)=>e.value-t.value));const a=e*s,c=l.subarray(a,a+s),h=u.subarray(a,a+s);for(let t=0;t<s;t++)c[t]=i[t].value,h[t]=i[t].index}const c=e.slice();return c[c.length-1]=s,[qn(l,c,n),qn(u,c,"int32")]}function pl(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=Ss(t,"int32"),r=Ss([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=s.indexToLoc(n[e]),a=e*t.length;r.values.set(i,a)}return r.toTensor()}const fl={kernelName:f,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,za(Es(n,"float32"),-1))}}},gl={kernelName:g,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Gi(Es(n,"float32")),s=va(Fi(ur(1),e));return ji(oi(t,s))}}}},ml={kernelName:m,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=va(Fi(Gi(Es(n,"float32")),1));return oi(t,e)}}}},yl={kernelName:y,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{let e=t;const s=ci(n.shape,r);return s.length>0&&(e=_i(e,s)),vr(e,n.shape)},b:()=>{let e=t;const n=ci(s.shape,r);return n.length>0&&(e=_i(e,n)),vr(e,s.shape)}}}},bl={kernelName:b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Yi(n)}}},xl={kernelName:x,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Yi(n)}}},wl={kernelName:w,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,va(Fi(ur(1),Gi(Es(n,"float32")))))}}},vl={kernelName:v,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=va(dr(ur(1),Gi(Es(n,"float32"))));return oi(t,e)}}}},kl={kernelName:C,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{const e=dr(Gi(n),Gi(s));let i=Ri(t,oi(s,e));const a=ci(n.shape,r);return a.length>0&&(i=_i(i,a)),vr(i,n.shape)},b:()=>{const e=dr(Gi(n),Gi(s));let i=ji(Ri(t,oi(n,e)));const a=ci(s.shape,r);return a.length>0&&(i=_i(i,a)),vr(i,s.shape)}}}},Il={kernelName:k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,dr(Gi(Es(n,"float32")),1))}}},Cl={kernelName:I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,Fi(ur(1),Gi(Es(n,"float32"))))}}},$l=Gn({avgPool3dBackprop_:function(t,e,n,s,r=[1,1,1],i,a){const o=Un(t,"dy","avgPool3dBackprop"),l=Un(e,"input","avgPool3dBackprop");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=vr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=vr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Ie(5===u.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+u.rank+".")),Ie(5===c.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+".")),Ie(Lr(s,r),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`)),null!=a&&Ie(Re(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const d={dy:u,input:c},p={filterSize:n,strides:s,dilations:r,pad:i,dimRoundingMode:a},f=On.runKernelFunc((t=>{const e=Nr(c.shape,n,s,r,i,a);return t.avgPool3dBackprop(u,c,e)}),d,null,"AvgPool3DBackprop",p);return h?vr(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Sl={kernelName:E,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>$l(t,s,r,i,u,o,l)}}},El=Gn({avgPoolBackprop_:function(t,e,n,s,r){const i=Un(t,"dy","avgPoolBackprop"),a=Un(e,"input","avgPoolBackprop");Ie(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=vr(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=vr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Ie(4===l.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+".")),Ie(4===o.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+"."));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=On.runKernelFunc((t=>{const e=Er(o.shape,n,s,1,r);return t.avgPoolBackprop(l,o,e)}),c,null,S,h);return u?vr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Nl={kernelName:$,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=n;return{x:()=>El(t,s,r,i,a)}}},Rl={kernelName:N,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Ga(t,r,!1,!1),b:()=>Ga(t,s,!0,!1)}:i&&!a?{a:()=>Ga(r,t,!1,!0),b:()=>Ga(s,t,!1,!1)}:{a:()=>Ga(r,t,!0,!0),b:()=>Ga(t,s,!0,!0)}:{a:()=>Ga(t,r,!1,!0),b:()=>Ga(s,t,!0,!1)}}},Al=Gn({spaceToBatchND_:function(t,e,n){const s=Un(t,"x","spaceToBatchND");Ie(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),Ie(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),Ie(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},i={blockShape:e,paddings:n};return On.runKernelFunc((t=>t.spaceToBatchND(s,e,n)),r,null,Xt,i)}}),Tl={kernelName:R,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Al(t,s,r)}}},Dl={kernelName:A,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let t=r.length-1;t>=0;t--)if(r[t]===i[t])a[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>_i(t,o,!0)}}},Fl={kernelName:T,gradFunc:t=>({x:()=>t.clone()})},_l={kernelName:D,gradFunc:t=>({x:()=>Yi(t)})},Ol={kernelName:F,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Aa(Mi(Si(s,r),oo(s,i)),t,Yi(t))}}},Ml={kernelName:O,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,i=_e(r,e[0].shape)[0],a=s.map((t=>t[i]));return wa(t,a,i).map((t=>()=>t))}},Ll={kernelName:M,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return Ie(Mr(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>ni(s.shape,t,r,a,o,l),filter:()=>Ma(s,t,r.shape,a,o,l)}}},zl={kernelName:L,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ti(t,r,i,a,o,1,l),filter:()=>Ma(t,s,r.shape,i,a,o,l)}}},Bl=Gn({conv3DBackpropFilter_:function(t,e,n,s,r){let i=t;4===t.rank&&(i=vr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=vr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Ie(5===i.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+".")),Ie(5===a.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+a.shape+".")),Ie(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),Ie(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),Ie(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,y:a},l={strides:s,pad:r};return On.runKernelFunc((t=>{const e=Ar(i.shape,n,s,1,r);return t.conv3dDerFilter(i,a,e)}),o,null,"Conv3DBackpropFilterV2",l)}}),Pl=Gn({conv3DBackpropInput_:function(t,e,n,s,r){Ie(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=vr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];Ie(5===i.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+i.length+".")),Ie(5===a.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank)),Ie(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),Ie(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Ie(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a},h={pad:r},d=On.runKernelFunc((t=>{const e=Ar(i,n.shape,s,1,r);return t.conv3dDerInput(a,n,e)}),c,null,"Conv3DBackpropInputV2",h);return o?vr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Wl={kernelName:z,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i}=n;Ie(Mr(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=e;return{x:()=>Pl(a.shape,t,o,r,i),filter:()=>Bl(a,t,o.shape,r,i)}}},Ul=Gn({sin_:function(t){const e=Un(t,"x","sin"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.sin(e);return n([e]),s}),n,null,Vt)}}),Vl={kernelName:B,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(ji(Ul(Es(n,"float32"))),t)}}},Gl=Gn({sinh_:function(t){const e=Un(t,"x","sinh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.sinh(e);return n([e]),s}),n,null,Gt)}}),Hl={kernelName:P,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(Gl(Es(n,"float32")),t)}}},jl=Gn({cumsum_:function(t,e=0,n=!1,s=!1){const r=Un(t,"x","cumsum"),i={x:r},a={axis:e,exclusive:n,reverse:s};return On.runKernelFunc(((t,i)=>{const a=br([e],r.rank);let o=r;null!=a&&(o=kr(r,a));const l=wr(1,r.rank)[0];let u=t.cumsum(o,l,n,s);if(i([r]),null!=a){const t=xr(a);u=kr(u,t)}return u}),i,null,W,a)}}),ql={kernelName:W,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const e=br([r],s.rank);let n=jl(t,r,i,!a);return null!=e&&(n=kr(n,e)),n}}}},Kl=Gn({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s){let r=t;3===t.rank&&(r=vr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;3===i.rank&&(i=vr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={x:r,dy:i};return On.runKernelFunc((t=>t.depthwiseConv2DDerFilter(r,i,s)),a,null,"DepthwiseConv2dNativeBackpropFilter")}}),Xl=Gn({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s){let r=e,i=!1;3===e.rank&&(i=!0,r=vr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a={dy:r},o=On.runKernelFunc((t=>t.depthwiseConv2DDerInput(r,n,s)),a,null,"DepthwiseConv2dNativeBackpropInput");return i?vr(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Yl={kernelName:U,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;Ie(Mr(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;Ie(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Ie(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Ie(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ie(Lr(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=a&&Ie(Re(i),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c=Rr(l.shape,u.shape,r,o,i,a,!0);return{x:()=>Xl(l.shape,t,u,c),filter:()=>Kl(l,t,u.shape,c)}}},Jl={kernelName:V,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,i={x:s,filter:r,dy:t},a={x:s,filter:r,dy:t};return{x:()=>On.runKernel(G,i,n),filter:()=>On.runKernel(H,a,n)}}},Zl={kernelName:j,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{const e=oi(t,Es(s,"float32")),i=ci(n.shape,r);return i.length>0?vr(_i(e,i),n.shape):e},b:()=>{let e=Ri(t,Es(n,"float32"));const i=ci(s.shape,r);i.length>0&&(e=vr(_i(e,i),s.shape));const a=Gi(s);return ji(oi(e,Es(a,"float32")))}}}},Ql={kernelName:q,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s=e=>e.eluDer(t,n),r={dy:t,y:n};return{x:()=>On.runKernelFunc(s,r,null,"EluGrad")}}},tu={kernelName:K,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Ri(pi(ji(Gi(n))),2/Math.sqrt(Math.PI));return{x:()=>Ri(t,s)}}},eu={kernelName:X,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,n)}}},nu={kernelName:Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,pi(n))}}},su={kernelName:Z,gradFunc:t=>({x:()=>Yi(t)})},ru={kernelName:Q,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{const e=oi(t,Es(s,"float32")),i=ci(n.shape,r);return i.length>0?vr(_i(e,i),n.shape):e},b:()=>{let e=Ri(t,Es(n,"float32"));const i=ci(s.shape,r);i.length>0&&(e=vr(_i(e,i),s.shape));const a=Gi(s);return ji(oi(e,Es(a,"float32")))}}}},iu=Gn({rsqrt_:function(t){const e=Un(t,"x","rsqrt"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.rsqrt(e);return n([e]),s}),n,null,Bt)}}),au={kernelName:tt,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=e,l=null==o?ur(1):o,u=ci(i.shape,r.shape),c=[];if(1===i.rank){for(let t=0;t<r.shape.length-1;++t)c.push(r.shape[t]);c.push(1)}const h=Fi(r,i),d=Ri(t,l),p=iu(dr(a,ur(s))),f=Ri(Ri(Ri(p,p),p),ur(-.5));return{x:()=>1===i.rank?vr(Ri(Ri(t,gi(vr(p,[1,1,1,i.shape[0]]),c)),l),r.shape):vr(Ri(Ri(t,p),l),r.shape),mean:()=>{let t=Ri(Ri(p,ur(-1)),d);return 1===i.rank&&(t=_i(t,u)),vr(t,i.shape)},variance:()=>{let t=Ri(Ri(f,h),d);return 1===i.rank&&(t=_i(t,u)),vr(t,i.shape)},scale:()=>{const e=Ri(h,p);let n=Ri(t,e);return 1===i.rank&&(n=_i(n,u)),vr(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=_i(e,u)),vr(e,i.shape)}}}},ou=Gn({unsortedSegmentSum_:function(t,e,n){const s=Un(t,"x","unsortedSegmentSum"),r=Un(e,"segmentIds","unsortedSegmentSum","int32");Ie(Re(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return On.runKernelFunc(((t,e)=>{const i=t.unsortedSegmentSum(s,r,n);return e([r]),i}),i,null,oe,a)}}),lu={kernelName:et,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:i}=n,a=_e(i,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),c=u.length,h=uu(0,l),d=uu(l+1,l+1+c),p=cu([o,[n],u]),f=vr(t,p),g=vr(r,[n]),m=cu([[l],h,d]),y=kr(f,m);let b=ou(y,g,s.shape[a]);const x=xr(m);return b=kr(b,x),b},indices:()=>r}}};function uu(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function cu(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const hu={kernelName:nt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Yi(n),b:()=>Yi(s)}}},du={kernelName:st,gradFunc:t=>({x:()=>Es(t,"float32")})},pu={kernelName:at,gradFunc:t=>({x:()=>Yi(t)})},fu={kernelName:ot,gradFunc:t=>({x:()=>Yi(t)})},gu={kernelName:lt,gradFunc:t=>({x:()=>Yi(t)})},mu={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,dr(n,1))}}},yu={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,Es(n,"float32"))}}},bu={kernelName:dt,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=pi(s);return Fi(t,Ri(_i(t,r,!0),e))}}}},xu=Gn({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return On.runKernelFunc((o=>o.LRNGrad(n,t,e,s,r,i,a)),o,null,"LRNBackprop",l)}}),wu={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>xu(s,r,t,i,a,o,l)}}};function vu(t,e,n,s,r){return e.rank<n.rank&&(e=vr(e,mr(e.shape,s))),t.rank<n.rank&&(t=vr(t,mr(t.shape,s))),{x:()=>{const s=Ri(t,Es(di(n,e),t.dtype));return null==r?s:kr(s,r)}}}const ku={kernelName:pt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,[i,a]=e,o=_e(r,i.shape),l=br(o,i.rank),u=vu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=kr(t)),t}}}},Iu=Gn({less_:function(t,e){let n=Un(t,"a","less"),s=Un(e,"b","less");[n,s]=Nn(n,s),hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.less(n,s)),r,null,"Less")}}),Cu={kernelName:ft,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ri(t,Es(Si(n,s),"float32")),b:()=>Ri(t,Es(Iu(n,s),"float32"))}}},$u=Gn({maxPool3dBackprop_:function(t,e,n,s,r,i=[1,1,1],a,o){const l=Un(t,"dy","maxPool3dBackprop"),u=Un(e,"input","maxPool3dBackprop"),c=Un(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=vr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=vr(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=vr(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),Ie(5===h.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+".")),Ie(5===d.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+".")),Ie(5===p.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+".")),Ie(Lr(r,i),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),null!=o&&Ie(Re(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const g={dy:h,input:d,output:p},m={filterSize:s,strides:r,dilations:i,pad:a,dimRoundingMode:o},y=On.runKernelFunc((t=>{const e=Nr(d.shape,s,r,i,a,o);return t.maxPool3dBackprop(h,d,p,e)}),g,null,"MaxPool3DBackprop",m);return f?vr(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Su={kernelName:yt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>$u(t,s,r,i,a,c,l,u)}}},Eu=Gn({maxPoolBackprop_:function(t,e,n,s,r,i,a){const o=Un(t,"dy","maxPoolBackprop"),l=Un(e,"input","maxPoolBackprop"),u=Un(n,"output","maxPoolBackprop");Ie(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Ie(4===o.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+".")),Ie(4===l.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+".")),null!=a&&Ie(Re(i),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return On.runKernelFunc((t=>{const e=Er(l.shape,s,r,1,i,a);return t.maxPoolBackprop(o,l,u,e)}),c,null,mt,h)}}),Nu={kernelName:gt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Eu(t,s,r,i,a,o)}}},Ru={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[i,a]=e,o=_e(r,i.shape),l=br(o,i.rank),u=vu(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=kr(t)),t}}}},Au={kernelName:xt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ri(t,Es(oo(n,s),"float32")),b:()=>Ri(t,Es($i(n,s),"float32"))}}},Tu={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{const e=ci(n.shape,r);return e.length>0?vr(_i(t,e),n.shape):t},b:()=>{const e=Ri(t,ji(bi(oi(n,s)))),i=ci(s.shape,r);return i.length>0?vr(_i(e,i),s.shape):e}}}},Du={kernelName:wt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{const e=Ri(t,Es(s,"float32")),i=ci(n.shape,r);return i.length>0?vr(_i(e,i),n.shape):e},b:()=>{const e=Ri(t,Es(n,"float32")),i=ci(s.shape,r);return i.length>0?vr(_i(e,i),s.shape):e}}}},Fu={kernelName:vt,gradFunc:t=>({x:()=>ji(t)})},_u={kernelName:Et,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Bi(n.shape,"float32")}}},Ou={kernelName:St,gradFunc:t=>({x:()=>Yi(t)})},Mu={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,i=r.map((t=>t[0]));return{x:()=>da(t,i,s.shape)}}},Lu={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,i=n,a=s,o=hi(i.shape,a.shape);return{a:()=>{const e=Es(a,"float32");let n=Ri(t,Ri(e,uo(i,Fi(e,ur(1)))));const s=ci(i.shape,o);return s.length>0&&(n=_i(n,s)),vr(n,i.shape)},b:()=>{const e=$i(i,0),n=Aa(e,Ti(i),Yi(i));let s=Ri(t,Ri(r,n));const l=ci(a.shape,o);return l.length>0&&(s=_i(s,l)),vr(s,a.shape)}}}},zu={kernelName:Rt,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=$i(n,0);return{x:()=>Aa(r,t,Ri(t,s)),alpha:()=>{let e=Aa(r,Yi(t),Ri(t,n));const i=ci(s.shape,t.shape);return i.length>0&&(e=_i(e,i)),vr(e,s.shape)}}}},Bu={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,ji(Gi(n)))}}},Pu={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Ri(oo(n,6),za(n));return{x:()=>Ri(t,Es(s,"float32"))}}},Wu={kernelName:Dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,Es(za(n),"float32"))}}},Uu={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>vr(t,n.shape)}}},Vu={kernelName:Ot,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeBilinearBackprop(t,s,r)},i={images:s};return{images:()=>On.runKernelFunc(r,i,null,"ResizeBilinearGrad",n)}}},Gu={kernelName:_t,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeNearestNeighborBackprop(t,s,r)},i={images:s};return{images:()=>On.runKernelFunc(r,i,null,"ResizeNearestNeighborGrad",n)}}},Hu={kernelName:Lt,gradFunc:(t,e,n)=>{const{dims:s}=n,r=_e(s,t.shape);return{x:()=>la(t,r)}}},ju={kernelName:zt,gradFunc:t=>({x:()=>Yi(t)})},qu={kernelName:Bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ji(oi(t,Ri(uo(n,1.5),2)))}}},Ku=Gn({logicalNot_:function(t){const e=Un(t,"x","logicalNot","bool"),n={x:e};return On.runKernelFunc((t=>t.logicalNot(e)),n,null,ht)}}),Xu={kernelName:Pt,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Es(Yi(n),"float32"),t:()=>Ri(t,Es(n,t.dtype)),e:()=>Ri(t,Es(Ku(n),t.dtype))}}},Yu={kernelName:Wt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=$i(n,ur(0)),s=ur(Vo),r=ur(Go),i=Ri(t,r),a=Ri(Ri(t,s),pi(Es(n,"float32")));return Aa(e,i,a)}}}},Ju={kernelName:jt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,Ri(n,Fi(ur(1),n)))}}},Zu={kernelName:Ht,gradFunc:t=>({x:()=>Yi(t)})},Qu=Gn({cos_:function(t){const e=Un(t,"x","cos"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.cos(e);return n([e]),s}),n,null,B)}}),tc={kernelName:Vt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(Qu(Es(n,"float32")),t)}}},ec=Gn({cosh_:function(t){const e=Un(t,"x","cosh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.cosh(e);return n([e]),s}),n,null,P)}}),nc={kernelName:Gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(ec(Es(n,"float32")),t)}}},sc={kernelName:Ut,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:i}=n,a=s.shape,[o,l]=Js(s,r,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>Zi(t,u)}}},rc={kernelName:Jt,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,i=Ri(t,s);return{logits:()=>Fi(i,Ri(_i(i,[r],!0),s))}}},ic={kernelName:qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,ha(n))}}},ac=Gn({batchToSpaceND_:function(t,e,n){const s=Un(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));Ie(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),Ie(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),Ie(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const i={x:s},a={blockShape:e,crops:n};return On.runKernelFunc((t=>t.batchToSpaceND(s,e,n)),i,null,R,a)}}),oc={kernelName:Xt,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>ac(t,s,r)}}},lc={kernelName:Yt,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>Xr(t,s)}}},uc=[fl,gl,ml,yl,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},bl,xl,wl,vl,kl,Il,Cl,Sl,Nl,Rl,Tl,Dl,Fl,_l,Ol,Ml,zl,Ll,Wl,Vl,Hl,ql,Yl,Jl,Zl,Ql,tu,eu,nu,ru,su,au,lu,hu,du,pu,fu,gu,mu,yu,bu,wu,ku,ku,Cu,Su,Nu,Ru,Au,Tu,Du,Fu,_u,Ou,Mu,Mu,Lu,zu,Bu,Pu,Wu,Uu,Vu,Gu,Hu,ju,qu,Xu,Yu,Ju,Zu,tc,nc,sc,rc,ic,oc,oc,lc,lc,{kernelName:Kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,Ri(va(Es(n,"float32")),2))}}},{kernelName:Zt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=ur(2);return{a:()=>Ri(t,Ri(r,Fi(n,s))),b:()=>Ri(t,Ri(r,Fi(s,n)))}}},{kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(t,Ri(Es(n,"float32"),2))}}},{kernelName:ue,gradFunc:t=>({x:()=>Yi(t)})},{kernelName:te,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=hi(n.shape,s.shape);return{a:()=>{let e=t;const s=ci(n.shape,r);return s.length>0&&(e=_i(e,s)),vr(e,n.shape)},b:()=>{let e=t;const n=ci(s.shape,r);return n.length>0&&(e=_i(e,n)),vr(ji(e),s.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:i}=n;_e(i,s.shape).forEach((t=>{r[t]=1}));const a=vr(t,r),o=Ri(a,Pi(s.shape,"float32"));return{x:()=>o}}},{kernelName:ee,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oi(t,Gi(Qu(n)))}}},{kernelName:ne,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ri(Fi(ur(1),Gi(n)),t)}}},{kernelName:se,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Yi(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=dr(e,da(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)e=dr(e,da(t,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)e=dr(e,da(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+s.rank+" tensors yet.");for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)e=dr(e,da(t,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:re,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,i=xr(r);return{x:()=>kr(t,i)}}},{kernelName:ae,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Ia(t,r)}}},{kernelName:oe,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Ni(e,Yi(e)),s=Ci(t,n);let r=Si(e,ur(0,"int32"));const i=s.rank-r.rank;for(let t=0;t<i;++t)r=fi(r,t+1);r=Mi(r,Pi(s.shape,"bool"));const a=Yi(s);return Aa(r,s,a)}(t,n)}}},{kernelName:le,gradFunc:t=>({x:()=>Yi(t)})}];for(const t of uc)be(t);bn.prototype.abs=function(){return this.throwIfDisposed(),hr(this)};const cc=Gn({acos_:function(t){const e=Un(t,"x","acos"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.acos(e);return n([e]),s}),n,null,g)}});bn.prototype.acos=function(){return this.throwIfDisposed(),cc(this)};const hc=Gn({acosh_:function(t){const e=Un(t,"x","acosh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.acosh(e);return n([e]),s}),n,null,m)}});bn.prototype.acosh=function(){return this.throwIfDisposed(),hc(this)};const dc=Gn({mod_:function(t,e){let n=Un(t,"a","mod"),s=Un(e,"b","mod");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.mod(n,s);return e([n,s]),r}),r,null,"Mod")}}),pc=Gn({addStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","addStrict"),s=Un(e,"b","addStrict");return Ce(n.shape,s.shape,"Error in addStrict: "),dr(n,s)}}),fc=Gn({divStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","div"),s=Un(e,"b","div");return Ce(n.shape,s.shape,"Error in divideStrict: "),oi(n,s)}}),gc=Gn({maximumStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","maximumStrict"),s=Un(e,"b","maximumStrict");return Ce(n.shape,s.shape,"Error in maximumStrict: "),Ni(n,s)}}),mc=Gn({minimumStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","minimumStrict"),s=Un(e,"b","minimumStrict");return Ce(n.shape,s.shape,"Error in minimumStrict: "),Vi(n,s)}}),yc=Gn({modStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","modStrict"),s=Un(e,"b","modStrict");return Ce(n.shape,s.shape,"Error in modStrict: "),dc(n,s)}}),bc=Gn({mulStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","mul"),s=Un(e,"b","mul");return Ce(n.shape,s.shape,"Error in multiplyStrict: "),Ri(n,s)}}),xc=Gn({powStrict_:function(t,e){return er("strict variants of ops have been deprecated and will be removed in future"),Ce(t.shape,e.shape,"Error in powStrict: "),uo(t,e)}}),wc=Gn({squaredDifferenceStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","squaredDifferenceStrict"),s=Un(e,"b","squaredDifferenceStrict");return Ce(n.shape,s.shape,"Error in squaredDifferenceStrict: "),bo(n,s)}}),vc=Gn({subStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","subStrict"),s=Un(e,"b","subStrict");return Ce(n.shape,s.shape,"Error in subStrict: "),Fi(n,s)}});bn.prototype.addStrict=function(t){return this.throwIfDisposed(),pc(this,t)},bn.prototype.add=function(t){return this.throwIfDisposed(),dr(this,t)},bn.prototype.all=function(t,e){return this.throwIfDisposed(),Ir(this,t,e)},bn.prototype.any=function(t,e){return this.throwIfDisposed(),Cr(this,t,e)},bn.prototype.argMax=function(t){return this.throwIfDisposed(),$r(this,t)};const kc=Gn({argMin_:function(t,e=0){let n=Un(t,"x","argMin");const s={x:n},r={axis:e};return On.runKernelFunc(((t,s)=>{s([n]),null==e&&(e=0);let r=_e(e,n.shape);const i=br(r,n.rank);return null!=i&&(n=kr(n,i),r=wr(r.length,n.rank)),t.argMin(n,r[0])}),s,null,x,r)}});bn.prototype.argMin=function(t){return this.throwIfDisposed(),kc(this,t)},bn.prototype.asScalar=function(){return this.throwIfDisposed(),Ie(1===this.size,(()=>"The array must have only 1 element.")),vr(this,[])},bn.prototype.asType=function(t){return this.throwIfDisposed(),Es(this,t)},bn.prototype.as1D=function(){return this.throwIfDisposed(),vr(this,[this.size])},bn.prototype.as2D=function(t,e){return this.throwIfDisposed(),vr(this,[t,e])},bn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),vr(this,[t,e,n])},bn.prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),vr(this,[t,e,n,s])},bn.prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),vr(this,[t,e,n,s,r])};const Ic=Gn({asin_:function(t){const e=Un(t,"x","asin"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.asin(e);return n([e]),s}),n,null,w)}});bn.prototype.asin=function(){return this.throwIfDisposed(),Ic(this)};const Cc=Gn({asinh_:function(t){const e=Un(t,"x","asinh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.asinh(e);return n([e]),s}),n,null,v)}});bn.prototype.asinh=function(){return this.throwIfDisposed(),Cc(this)};const $c=Gn({atan_:function(t){const e=Un(t,"x","atan"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.atan(e);return n([e]),s}),n,null,k)}});bn.prototype.atan=function(){return this.throwIfDisposed(),$c(this)};const Sc=Gn({atan2_:function(t,e){let n=Un(t,"a","atan2"),s=Un(e,"b","atan2");[n,s]=Nn(n,s);const r={a:n,b:s};return On.runKernelFunc(((t,e)=>{const r=t.atan2(n,s);return e([n,s]),r}),r,null,C)}});bn.prototype.atan2=function(t){return this.throwIfDisposed(),Sc(this,t)};const Ec=Gn({atanh_:function(t){const e=Un(t,"x","atanh"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.atanh(e);return n([e]),s}),n,null,I)}});bn.prototype.atanh=function(){return this.throwIfDisposed(),Ec(this)},bn.prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Br(this,t,e,n,s)},bn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),ac(this,t,e)},bn.prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),Ur(this,t,e,n,s,r)},bn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ra(this,t)},bn.prototype.cast=function(t){return this.throwIfDisposed(),Es(this,t)};const Nc=Gn({ceil_:function(t){const e=Un(t,"x","ceil"),n={x:e};return On.runKernelFunc((t=>t.ceil(e)),n,null,D)}});bn.prototype.ceil=function(){return this.throwIfDisposed(),Nc(this)},bn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),jr(this,t,e)},bn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof bn&&(t=[t]),Xr([this,...t],e)},bn.prototype.conv1d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ei(this,t,e,n,s,r,i)},bn.prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),si(this,t,e,n,s,r)},bn.prototype.conv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ti(this,t,e,n,s,r,i)},bn.prototype.cos=function(){return this.throwIfDisposed(),Qu(this)},bn.prototype.cosh=function(){return this.throwIfDisposed(),ec(this)},bn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),jl(this,t,e,n)};const Rc=Gn({depthToSpace_:function(t,e,n="NHWC"){const s=Un(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];Ie(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),Ie(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),Ie(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return On.runKernelFunc((t=>t.depthToSpace(s,e,n)),o,null,"DepthToSpace",l)}});bn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Rc(this,t,e)},bn.prototype.depthwiseConv2D=function(t,e,n,s,r,i){return er("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ii(this,t,e,n,s,r,i)},bn.prototype.depthwiseConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ii(this,t,e,n,s,r,i)};const Ac=Gn({dilation2d_:function(t,e,n,s,r=[1,1],i="NHWC"){const a=Un(t,"x","dilation2d"),o=Un(e,"filter","dilation2d");Ie(3===a.rank||4===a.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+a.rank+".")),Ie(3===o.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+".")),Ie("NHWC"===i,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+i));let l=a,u=!1;3===a.rank&&(l=vr(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=On.runKernel(V,c,h);return u?vr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});bn.prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),Ac(this,t,e,n,s,r)};const Tc=Gn({divNoNan_:function(t,e){let n=Un(t,"a","div"),s=Un(e,"b","div");[n,s]=Nn(n,s);const r=oi(n,s),i=Yi(r),a=di(s,i);return Aa(a,i,r)}});bn.prototype.divNoNan=function(t){return this.throwIfDisposed(),Tc(this,t)},bn.prototype.divStrict=function(t){return this.throwIfDisposed(),fc(this,t)},bn.prototype.div=function(t){return this.throwIfDisposed(),oi(this,t)};const Dc=Gn({dot_:function(t,e){const n=Un(t,"t1","dot"),s=Un(e,"t2","dot");Ie(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(Ie(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const t=vr(n,[1,-1]),e=vr(s,[-1,1]),r=Ga(t,e);return vr(r,[])}if(1===n.rank&&2===s.rank){const t=vr(n,[1,-1]),e=vr(s,[s.shape[0],s.shape[1]]),r=Ga(t,e);return vr(r,[r.size])}if(2===n.rank&&1===s.rank){const t=vr(s,[-1,1]),e=Ga(n,t);return vr(e,[e.size])}{const t=vr(s,[s.shape[0],s.shape[1]]);return Ga(n,t)}}});bn.prototype.dot=function(t){return this.throwIfDisposed(),Dc(this,t)},bn.prototype.elu=function(){return this.throwIfDisposed(),li(this)};const Fc=Gn({equalStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","equalStrict"),s=Un(e,"b","equalStrict");return Ce(n.shape,s.shape,"Error in equalStrict: "),di(n,s)}}),_c=Gn({greaterEqualStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","greaterEqualStrict"),s=Un(e,"b","greaterEqualStrict");return Ce(n.shape,s.shape,"Error in greaterEqualStrict: "),Si(n,s)}}),Oc=Gn({greaterStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","greaterStrict"),s=Un(e,"b","greaterStrict");return Ce(n.shape,s.shape,"Error in greaterStrict: "),$i(n,s)}}),Mc=Gn({lessEqualStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","lessEqualStrict"),s=Un(e,"b","lessEqualStrict");return Ce(n.shape,s.shape,"Error in lessEqualStrict: "),oo(n,s)}}),Lc=Gn({lessStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","lessStrict"),s=Un(e,"b","lessStrict");return Ce(n.shape,s.shape,"Error in lessStrict: "),Iu(n,s)}}),zc=Gn({notEqualStrict_:function(t,e){er("strict variants of ops have been deprecated and will be removed in future");const n=Un(t,"a","notEqualStrict"),s=Un(e,"b","notEqualStrict");return Ce(n.shape,s.shape,"Error in notEqualStrict: "),qi(n,s)}});bn.prototype.equalStrict=function(t){return this.throwIfDisposed(),Fc(this,t)},bn.prototype.equal=function(t){return this.throwIfDisposed(),di(this,t)};const Bc=Gn({erf_:function(t){let e=Un(t,"x","erf");Ie("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Es(e,"float32"));const n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.erf(e);return n([e]),s}),n,null,K)}});bn.prototype.erf=function(){return this.throwIfDisposed(),Bc(this)},bn.prototype.exp=function(){return this.throwIfDisposed(),pi(this)},bn.prototype.expandDims=function(t){return this.throwIfDisposed(),fi(this,t)};const Pc=Gn({expm1_:function(t){const e=Un(t,"x","expm1"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.expm1(e);return n([e]),s}),n,null,Y)}});bn.prototype.expm1=function(){return this.throwIfDisposed(),Pc(this)},bn.prototype.fft=function(){return this.throwIfDisposed(),Da(this)},bn.prototype.flatten=function(){return this.throwIfDisposed(),vr(this,[this.size])},bn.prototype.floor=function(){return this.throwIfDisposed(),bi(this)},bn.prototype.floorDiv=function(t){return this.throwIfDisposed(),ai(this,t)},bn.prototype.gather=function(t,e){return this.throwIfDisposed(),Ci(this,t,e)},bn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),_c(this,t)},bn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Si(this,t)},bn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Oc(this,t)},bn.prototype.greater=function(t){return this.throwIfDisposed(),$i(this,t)},bn.prototype.ifft=function(){return this.throwIfDisposed(),_a(this)},bn.prototype.irfft=function(){return this.throwIfDisposed(),Oa(this)};const Wc=Gn({isFinite_:function(t){const e=Un(t,"x","isFinite"),n={x:e};return On.runKernelFunc((t=>t.isFinite(e)),n,null,at)}});bn.prototype.isFinite=function(){return this.throwIfDisposed(),Wc(this)};const Uc=Gn({isInf_:function(t){const e=Un(t,"x","isInf"),n={x:e};return On.runKernelFunc((t=>t.isInf(e)),n,null,ot)}});bn.prototype.isInf=function(){return this.throwIfDisposed(),Uc(this)};const Vc=Gn({isNaN_:function(t){const e=Un(t,"x","isNaN"),n={x:e};return On.runKernelFunc((t=>t.isNaN(e)),n,null,lt)}});bn.prototype.isNaN=function(){return this.throwIfDisposed(),Vc(this)},bn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ai(this,t)},bn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Mc(this,t)},bn.prototype.lessEqual=function(t){return this.throwIfDisposed(),oo(this,t)},bn.prototype.lessStrict=function(t){return this.throwIfDisposed(),Lc(this,t)},bn.prototype.less=function(t){return this.throwIfDisposed(),Iu(this,t)};const Gc=Gn({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const i=Un(t,"x","localResponseNormalization");Ie(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Ie(Re(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=vr(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:s,beta:r},c=On.runKernelFunc(((t,i)=>{const o=t.localResponseNormalization4D(a,e,n,s,r);return i([a,o]),o}),l,null,"LRN",u);return o?vr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});bn.prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),Gc(this,t,e,n,s)};const Hc=Gn({logSigmoid_:function(t){const e=Un(t,"x","logSigmoid");return lr((t=>({value:ji(ba(ji(t))),gradFunc:e=>Ri(e,ha(ji(t)))})))(e)}});bn.prototype.logSigmoid=function(){return this.throwIfDisposed(),Hc(this)},bn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Oi(this,t)},bn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),wo(this,t,e)},bn.prototype.log=function(){return this.throwIfDisposed(),Ti(this)},bn.prototype.log1p=function(){return this.throwIfDisposed(),xo(this)},bn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Mi(this,t)},bn.prototype.logicalNot=function(){return this.throwIfDisposed(),Ku(this)};const jc=Gn({logicalOr_:function(t,e){const n=Un(t,"a","logicalOr","bool"),s=Un(e,"b","logicalOr","bool");hi(n.shape,s.shape);const r={a:n,b:s};return On.runKernelFunc((t=>t.logicalOr(n,s)),r,null,"LogicalOr")}});bn.prototype.logicalOr=function(t){return this.throwIfDisposed(),jc(this,t)};const qc=Gn({logicalXor_:function(t,e){const n=Un(t,"a","logicalXor","bool"),s=Un(e,"b","logicalXor","bool");return hi(n.shape,s.shape),Mi(jc(t,e),Ku(Mi(t,e)))}});bn.prototype.logicalXor=function(t){return this.throwIfDisposed(),qc(this,t)},bn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Ga(this,t,e,n)},bn.prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Li(this,t,e,n,s)},bn.prototype.max=function(t,e){return this.throwIfDisposed(),Di(this,t,e)},bn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),gc(this,t)},bn.prototype.maximum=function(t){return this.throwIfDisposed(),Ni(this,t)},bn.prototype.mean=function(t,e){return this.throwIfDisposed(),Wi(this,t,e)},bn.prototype.min=function(t,e){return this.throwIfDisposed(),Ui(this,t,e)},bn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),mc(this,t)},bn.prototype.minimum=function(t){return this.throwIfDisposed(),Vi(this,t)},bn.prototype.modStrict=function(t){return this.throwIfDisposed(),yc(this,t)},bn.prototype.mod=function(t){return this.throwIfDisposed(),dc(this,t)},bn.prototype.mulStrict=function(t){return this.throwIfDisposed(),bc(this,t)},bn.prototype.mul=function(t){return this.throwIfDisposed(),Ri(this,t)},bn.prototype.neg=function(){return this.throwIfDisposed(),ji(this)},bn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),ho(this,t,e,n)},bn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),zc(this,t)},bn.prototype.notEqual=function(t){return this.throwIfDisposed(),qi(this,t)},bn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Ki(this,t,e,n)},bn.prototype.onesLike=function(){return this.throwIfDisposed(),Ji(this)},bn.prototype.pad=function(t,e){return this.throwIfDisposed(),Zi(this,t,e)};const Kc=Gn({pool_:function(t,e,n,s,r,i){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const a=Un(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=vr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Ie(Lr(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const u=Er(o.shape,e,i,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),i=t.concat(s,r),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=r.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([u.inHeight,u.inWidth],c,h),g=d?s:"valid",m=d?o:Al(o,c,p),y=("avg"===n?()=>Br(m,e,i,g):()=>Li(m,e,i,g))(),b=d?y:ac(y,c,f);return l?vr(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});bn.prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),Kc(this,t,e,n,s,r)},bn.prototype.powStrict=function(t){return this.throwIfDisposed(),xc(this,t)},bn.prototype.pow=function(t){return this.throwIfDisposed(),uo(this,t)},bn.prototype.prelu=function(t){return this.throwIfDisposed(),Qi(this,t)};const Xc=Gn({prod_:function(t,e=null,n=!1){let s=Un(t,"x","prod");const r={x:s},i={axis:e,keepDims:n};return On.runKernelFunc((t=>{"bool"===s.dtype&&(s=Es(s,"int32"));const r=_e(e,s.shape),i=br(r,s.rank);let a=r,o=s;null!=i&&(o=kr(s,i),a=wr(a.length,s.rank));let l=t.prod(o,a);if(n){const t=mr(l.shape,r);l=vr(l,t)}return l}),r,null,"Prod",i)}});bn.prototype.prod=function(t,e){return this.throwIfDisposed(),Xc(this,t,e)};const Yc=Gn({reciprocal_:function(t){const e=Un(t,"x","reciprocal"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.reciprocal(e);return n([e]),s}),n,null,Tt)}});bn.prototype.reciprocal=function(){return this.throwIfDisposed(),Yc(this)},bn.prototype.relu=function(){return this.throwIfDisposed(),oa(this)},bn.prototype.relu6=function(){return this.throwIfDisposed(),La(this)},bn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),vr(this,t.shape)},bn.prototype.reshape=function(t){return this.throwIfDisposed(),vr(this,t)},bn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),io(this,t,e)},bn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),ao(this,t,e)},bn.prototype.reverse=function(t){return this.throwIfDisposed(),la(this,t)},bn.prototype.rfft=function(){return this.throwIfDisposed(),Fa(this)};const Jc=Gn({round_:function(t){const e=Un(t,"x","round"),n={x:e};return On.runKernelFunc((t=>t.round(e)),n,null,zt)}});bn.prototype.round=function(){return this.throwIfDisposed(),Jc(this)},bn.prototype.rsqrt=function(){return this.throwIfDisposed(),iu(this)},bn.prototype.selu=function(){return this.throwIfDisposed(),ua(this)},bn.prototype.separableConv2d=function(t,e,n,s,r,i){return this.throwIfDisposed(),ca(this,t,e,n,s,r,i)},bn.prototype.sigmoid=function(){return this.throwIfDisposed(),ha(this)};const Zc=Gn({sign_:function(t){const e=Un(t,"x","sign"),n={x:e};return On.runKernelFunc((t=>t.sign(e)),n,null,Ht)}});bn.prototype.sign=function(){return this.throwIfDisposed(),Zc(this)},bn.prototype.sin=function(){return this.throwIfDisposed(),Ul(this)},bn.prototype.sinh=function(){return this.throwIfDisposed(),Gl(this)},bn.prototype.slice=function(t,e){return this.throwIfDisposed(),da(this,t,e)},bn.prototype.softmax=function(t){return this.throwIfDisposed(),ya(this,t)},bn.prototype.softplus=function(){return this.throwIfDisposed(),ba(this)},bn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Al(this,t,e)},bn.prototype.split=function(t,e){return this.throwIfDisposed(),wa(this,t,e)},bn.prototype.sqrt=function(){return this.throwIfDisposed(),va(this)},bn.prototype.square=function(){return this.throwIfDisposed(),Gi(this)},bn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),bo(this,t)},bn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),wc(this,t)},bn.prototype.squeeze=function(t){return this.throwIfDisposed(),ka(this,t)},bn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof bn?[this,t]:[this,...t];return Ia(n,e)},bn.prototype.step=function(t){return this.throwIfDisposed(),za(this,t)};const Qc=Gn({stridedSlice_:function(t,e,n,s,r=0,i=0,a=0,o=0,l=0){let u=Un(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return On.runKernelFunc((t=>{null==s&&(s=new Array(e.length));const c=zs(a);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=zs(o),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=vr(u,p);const{begin:f,end:g,strides:m}=Vs(u.shape,c,h,e,n,s,r,i,a);e=f,n=g,s=m;const y=zs(l);y.forEach((t=>{n[t]=e[t]+1,s[t]=1}));const b=Bs(e,n,s),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(s.every((t=>1===t)))return vr(da(u,e,b),x);const w=t.stridedSlice(u,e,n,s);return vr(w,x)}),c,null,"StridedSlice",h)}});bn.prototype.stridedSlice=function(t,e,n,s,r,i,a,o){return this.throwIfDisposed(),Qc(this,t,e,n,s,r,i,a,o)},bn.prototype.subStrict=function(t){return this.throwIfDisposed(),vc(this,t)},bn.prototype.sub=function(t){return this.throwIfDisposed(),Fi(this,t)},bn.prototype.sum=function(t,e){return this.throwIfDisposed(),_i(this,t,e)};const th=Gn({tan_:function(t){const e=Un(t,"x","tan"),n={x:e};return On.runKernelFunc(((t,n)=>{const s=t.tan(e);return n([e]),s}),n,null,ee)}});bn.prototype.tan=function(){return this.throwIfDisposed(),th(this)},bn.prototype.tanh=function(){return this.throwIfDisposed(),Ca(this)},bn.prototype.tile=function(t){return this.throwIfDisposed(),gi(this,t)},bn.prototype.toBool=function(){return this.throwIfDisposed(),Es(this,"bool")},bn.prototype.toFloat=function(){return this.throwIfDisposed(),Es(this,"float32")},bn.prototype.toInt=function(){return this.throwIfDisposed(),Es(this,"int32")};const eh=Gn({topk_:function(t,e=1,n=!0){const s=Un(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got `+e);const i={x:s},a={k:e,sorted:n},[o,l]=On.runKernelFunc((t=>t.topk(s,e,n)),i,null,"TopK",a);return{values:o,indices:l}}});bn.prototype.topk=function(t,e){return this.throwIfDisposed(),eh(this,t,e)},bn.prototype.transpose=function(t){return this.throwIfDisposed(),kr(this,t)};const nh=Gn({unique_:function(t,e=0){const n=Un(t,"x","unique",null);Ie(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[i,a]=On.runKernel(ie,s,r);return{values:i,indices:a}}});let sh;function rh(){return null==sh&&(sh=On.backend.epsilon()),sh}bn.prototype.unique=function(t){return this.throwIfDisposed(),nh(this,t)},bn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ou(this,t,e)},bn.prototype.unstack=function(t){return this.throwIfDisposed(),Na(this,t)},bn.prototype.where=function(t,e){return this.throwIfDisposed(),Aa(t,this,e)},bn.prototype.zerosLike=function(){return this.throwIfDisposed(),Yi(this)};class ih extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ih.prototype)}}class ah extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ah.prototype)}}class oh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,oh.prototype)}}class lh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,lh.prototype)}}class uh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uh.prototype)}}function ch(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function hh(t,e){if(!t)throw new uh(e)}function dh(t,e){let n=0;for(const s of t)s===e&&n++;return n}function ph(t){return 1===t.length?t[0]:t}function fh(t){return Array.isArray(t)?t:[t]}function gh(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function mh(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let yh={};function bh(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function xh(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>xh(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?xh(e):t[n]=e.value)}}}function wh(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let i;if(r in n)i=n[r];else if(r in yh)i=yh[r];else if(i=e[r],null==i)throw new oh(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new oh(s+": Improper config format: "+JSON.stringify(i)+".\n'className' and 'config' must set.");const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in yh?[o,l]=yh.className:a in e&&([o,l]=e[a]),null==o)throw new oh(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(yh))t[e]=yh[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},yh);for(const t of Object.keys(n))yh[t]=n[t];xh(i.config);const s=l(o,i.config,n,r);return yh=Object.assign({},e),s}{const t=Object.assign({},yh);for(const t of Object.keys(n))yh[t]=n[t];const e=new o(i.config);return yh=Object.assign({},t),e}}}function vh(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function kh(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Ih(t){if(null==t)throw new oh("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Ch(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new oh(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function $h(t,e,n=0,s=1/0){return hh(n>=0),hh(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function Sh(t,e){Array.isArray(t)?(Ie(t.length>0,(()=>e+" is unexpectedly an empty array.")),t.forEach(((t,n)=>Sh(t,`element ${n+1} of ${e}`)))):Ie(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got `+Eh(t)+"."))}function Eh(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Eh(t))).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}function Nh(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Rh(t,e){return rr((()=>va(_i(Ri(t,t),e,!0))))}class Ah extends Zs{getConfig(){return{}}}class Th extends Ah{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rr((()=>{const e=Rh(t,this.axis),n=jr(e,0,this.maxValue);return Ri(t,oi(n,dr(rh(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Th.className="MaxNorm",tr(Th);class Dh extends Ah{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rr((()=>oi(t,dr(rh(),Rh(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Dh.className="UnitNorm",tr(Dh);class Fh extends Ah{apply(t){return oa(t)}}Fh.className="NonNeg",tr(Fh);class _h extends Ah{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return rr((()=>{const e=Rh(t,this.axis),n=dr(Ri(this.rate,jr(e,this.minValue,this.maxValue)),Ri(1-this.rate,e));return Ri(t,oi(n,dr(rh(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_h.className="MinMaxNorm",tr(_h);const Oh={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Mh(t){return bh(t)}function Lh(t,e={}){return wh(t,Qs.getMap().classNameMap,e,"constraint")}function zh(t){return null==t?null:"string"==typeof t?Lh({className:t in Oh?Oh[t]:t,config:{}}):t instanceof Ah?t:Lh(t)}const Bh=["channelsFirst","channelsLast"],Ph=["valid","same","causal"],Wh=["max","avg"],Uh=["sum","mul","concat","ave"],Vh=new Map;function Gh(t){Ch(Bh,"DataFormat",t)}function Hh(t){Ch(Ph,"PaddingMode",t)}function jh(t){Ch(Wh,"PoolMode",t)}const qh=[];function Kh(t,e){qh.push(t);try{const t=e();return qh.pop(),t}catch(t){throw qh.pop(),t}}function Xh(t){if(!Zh(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===qh.length?"":qh.join("/")+"/")+t}function Yh(t){if(!Zh(t))throw new Error("Not a valid tensor name: '"+t+"'");Vh.has(t)||Vh.set(t,0);const e=Vh.get(t);if(Vh.set(t,Vh.get(t)+1),e>0){const n=`${t}_${e}`;return Vh.set(n,1),n}return t}const Jh=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Zh(t){return!!t.match(Jh)}function Qh(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function td(t){return ia(t=Array.isArray(t)?new Float32Array(t):t)}function ed(t){return Ui(td(t)).dataSync()[0]}function nd(t){return Di(td(t)).dataSync()[0]}function sd(t,e){if(e<t)throw new oh(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function rd(t,e){return t.asType(e)}function id(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function ad(t,e,n){return rr((()=>{switch(t.rank){case 1:return pa(t,e,n);case 2:return fa(t,[e,0],[n,t.shape[1]]);case 3:return ga(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return ma(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return da(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return da(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new oh("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}))}function od(t,e,n){return rr((()=>{switch(t.rank){case 1:return pa(t,e,n);case 2:return fa(t,[0,e],[t.shape[0],n]);case 3:return ga(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return ma(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new oh("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function ld(t,e,n,s){return rr((()=>{switch(t.rank){case 1:return pa(t,e,n);case 2:switch(s){case 1:return ad(t,e,n);case 2:return od(t,e,n);default:throw new oh("The axis is not within the rank of the tensor "+s)}case 3:switch(s){case 1:return ad(t,e,n);case 2:return ga(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return od(t,e,n);default:throw new oh("The axis is not within the rank of the tensor "+s)}case 4:switch(s){case 1:return ad(t,e,n);case 2:return ma(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return ma(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return od(t,e,n);default:throw new oh("The axis is not within the rank of the tensor "+s)}default:throw new oh("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}}))}function ud(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Xr(t,e)}function cd(t,e){switch(t.rank){case 1:return Yr([t,e]);case 2:return Jr([t,e],0);case 3:return Zr([t,e],0);case 4:return Qr([t,e],0);default:throw new oh("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function hd(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new oh(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return gi(t,e)}function dd(t,e=0,n=1,s,r){return sa(t,e,n,s,r)}function pd(t,e,n,s){if(t.rank<2||e.rank<2)throw new lh(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new lh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape);if(2===t.rank&&2===e.rank)return Ha({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?md(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),i=r.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...r,...u];return Ha({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?md(t.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function fd(t,e,n){return rr((()=>(e=Array.isArray(e)?ia(e,"int32"):e.toInt(),Ci(t,e,n))))}function gd(t){return Ri(t,t)}function md(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new oh("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new oh("Unsupported input rank by biasAdd: "+e.rank)}function yd(t,e,n){return rr((()=>(null==n&&(n="channelsLast"),Gh(n),t.add(md(t.rank,e,n)))))}function bd(t,e,n,s){return rr((()=>Ta(t,e,n,s)))}function xd(t,e,n=!1){return n?t():e()}const wd=["fanIn","fanOut","fanAvg"],vd=["normal","uniform","truncatedNormal"];class kd extends Zs{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Id extends kd{apply(t,e){return Bi(t,e)}}Id.className="Zeros",tr(Id);class Cd extends kd{apply(t,e){return Pi(t,e)}}Cd.className="Ones",tr(Cd);class $d extends kd{constructor(t){if(super(),"object"!=typeof t)throw new oh("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new oh("config must have value set but got "+t);this.value=t.value}apply(t,e){return rr((()=>Ri(ur(this.value),Pi(t,e))))}getConfig(){return{value:this.value}}}$d.className="Constant",tr($d);class Sd extends kd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return ra(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Sd.className="RandomUniform",tr(Sd);class Ed extends kd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lh(`randomNormal does not support dType ${e}.`);return dd(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ed.className="RandomNormal",tr(Ed);class Nd extends kd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lh(`truncatedNormal does not support dType ${e}.`);return Ea(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Nd.className="TruncatedNormal",tr(Nd);class Rd extends kd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return rr((()=>{if(2!==t.length||t[0]!==t[1])throw new oh("Identity matrix initializer can only be used for 2D square matrices.");return Ri(this.gain,mi(t[0]))}))}getConfig(){return{gain:this.gain}}}Rd.className="Identity",tr(Rd);class Ad extends kd{constructor(t){if(super(),t.scale<0)throw new oh("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Ch(wd,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Ch(vd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(Gh(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Qh(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=Qh(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=Qh(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new lh(`${this.getClassName()} does not support dType ${e}.`);return Ea(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return ra(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ad.className="VarianceScaling",tr(Ad);class Td extends Ad{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}Td.className="GlorotUniform",tr(Td);class Dd extends Ad{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}Dd.className="GlorotNormal",tr(Dd);class Fd extends Ad{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}Fd.className="HeNormal",tr(Fd);class _d extends Ad{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}_d.className="HeUniform",tr(_d);class Od extends Ad{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}Od.className="LeCunNormal",tr(Od);class Md extends Ad{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ad.className}}Md.className="LeCunNormal",tr(Md);class Ld extends kd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new lh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return rr((()=>{if(t.length<2)throw new lh("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=dd(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=vo.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Ri(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ld.className="Orthogonal",tr(Ld);const zd={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bd(t,e={}){return wh(t,Qs.getMap().classNameMap,e,"initializer")}function Pd(t){return bh(t)}function Wd(t){if("string"==typeof t){const e=t in zd?zd[t]:t;if("GlorotNormal"===e)return new Dd;if("GlorotUniform"===e)return new Td;if("HeNormal"===e)return new Fd;if("HeUniform"===e)return new _d;if("LeCunNormal"===e)return new Od;if("LeCunUniform"===e)return new Md;{const t={};return t.className=e,t.config={},Bd(t)}}return t instanceof kd?t:Bd(t)}let Ud=0;function Vd(){return Ud++}const Gd={};function Hd(t=""){return t in Gd||(Gd[t]=0),Gd[t]+=1,t+Gd[t].toString()}function jd(t){return Array.isArray(t)&&Array.isArray(t[0])}function qd(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Kd(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new oh("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function Xd(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new oh("Expected exactly 1 Shape; got "+t.length)}return t}function Yd(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Jd{constructor(t,e="float32",n="Variable",s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Vd(),n=null==n?"Variable":n,this.originalName=Xh(n),this.name=Yh(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return On.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Zd(t){return t.map((t=>t.read()))}function Qd(t){t.forEach((t=>{t[0].write(t[1])}))}class tp{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ep{constructor(t,e,n,s,r,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=Vd(),null!=i&&(this.originalName=Xh(i),this.name=Yh(this.originalName)),this.rank=e.length}}let np=0;class sp{constructor(t,e){this.callArgs=e,this.id=np++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rp=0;class ip extends Zs{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rp++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=gh(t)+"_"+Hd(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new ah(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new oh(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ph(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ph(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ih("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new ih("Layer "+this.name+" is not connected, no input to return.");return ph(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ih("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new ih("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ph(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=fh(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=fh(this.inputSpec);if(t.length!==e.length)throw new oh(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new oh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new oh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new oh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new oh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),i=r.axes[e],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new oh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],i=s.shape[t];if(null!=e&&null!=i&&e!==i)throw new oh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=fh(t);let s=!0;for(const t of n)if(!(t instanceof ep)){s=!1;break}let r=!0;for(const t of n)if(t instanceof ep){r=!1;break}if(s===r)throw new oh("Arguments to apply() must be all SymbolicTensors or all Tensors");return Kh(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of fh(t))e.push(n.shape);this.build(ph(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=fh(s),i=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(s=ph(i),null!=this.activityRegularizer)throw new lh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=fh(t);const e=[];for(const n of t)e.push(n.shape);return ph(e)}(t),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new ep(i,n,this,fh(t),e,this.name,s))):new ep(i,s,this,fh(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new lh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ih(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new ih(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ah(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yd(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Zd(t?this.trainableWeights:this.weights)}setWeights(t){rr((()=>{const e=this.weights;if(e.length!==t.length)throw new oh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=Zd(e);for(let r=0;r<s.length;++r){const i=s[r],a=e[r],o=t[r];if(!Ne(i.shape,o.shape))throw new oh(`Layer weight shape ${i.shape} not compatible with provided weight shape `+o.shape);n.push([a,o])}Qd(n)}))}addWeight(t,e,n,s,r,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new oh(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Wd("zeros"));const o=s.apply(e,n),l=new Jd(o,n,t,i,a);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=fh(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,i,a=null){const o=fh(t);e=fh(e),n=fh(n),s=fh(s),r=qd(r),i=qd(i);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new sp({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function ap(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=ap(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class op extends ip{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Hd("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new oh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new oh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new oh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new ep(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new oh("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function lp(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const i=t[r];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];ir(s)}}function up(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var cp;op.className="InputLayer",tr(op),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(cp||(cp={}));class hp{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class dp{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class pp extends hp{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=rr((()=>dr(this.totals[t],Ri(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:rr((()=>{const n=Ri(oi(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),ar(e[t])})))}}class fp extends hp{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];t.push(a.data()),e.push(s),n.push(i)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class gp extends hp{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ue(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=Qe();return(...r)=>{const i=Qe();return i-s<e||(s=i,n=t(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await lp(n),s.push(this.yield(t,e,n))),s.push(Do()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await lp(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await lp(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Do()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await lp(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await lp(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Do()):Ue(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await lp(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await lp(t),await this.trainEnd(t))}}function mp(t,e){return null==t&&(t={}),t instanceof hp?[t]:Array.isArray(t)&&t[0]instanceof hp?t:fh(t).map((t=>new gp(t,e)))}class yp{constructor(){}static registerCallbackConstructor(t,e){Ie(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, but got "+t)),yp.checkForDuplicate(e),null==yp.constructors[t]&&(yp.constructors[t]=[]),yp.constructors[t].push(e)}static checkForDuplicate(t){for(const e in yp.constructors)yp.constructors[+e].forEach((e=>{if(e===t)throw new oh("Duplicate callback constructor.")}))}static clear(){yp.constructors={}}static createCallbacks(t){const e=[];for(const n in yp.constructors){const s=+n;t>=s&&e.push(...yp.constructors[s])}return e.map((t=>new t))}}function bp(t,e,n,s,r,i,a,o,l){const u=new fp,c=[new pp,...yp.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new dp(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function xp(t,e={},n=!1){return wh(t,Qs.getMap().classNameMap,e,"layer",n)}function wp(t,e){return rr((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=_i(gd(t),e,!0),s=yi(n.shape,rh()),r=va(Ni(n,s));return oi(t,r)}))}function vp(t,e){return rr((()=>Wi(gd(Fi(e,t)),-1)))}function kp(t,e){return rr((()=>Wi(hr(Fi(e,t)),-1)))}function Ip(t,e){return rr((()=>{const n=Fi(t,e),s=jr(hr(t),rh(),Number.MAX_VALUE),r=hr(oi(n,s));return Ri(100,Wi(r,-1))}))}function Cp(t,e,n=!1){return rr((()=>{if(n)e=ya(e);else{const t=_i(e,e.shape.length-1,!0);e=oi(e,t)}return e=jr(e,rh(),1-rh()),ji(_i(Ri(t.toFloat(),Ti(e)),e.shape.length-1))}))}function $p(t,e,n=!1){return rr((()=>{const s=bi(function(t){const e=[Qh(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=jr(e,rh(),1-rh())).shape;return Cp(Ki(s,r[r.length-1]).reshape(r),e,n)}))}function Sp(t,e){return rr((()=>{let n;return n=jr(e,rh(),1-rh()),n=Ti(oi(n,Fi(1,n))),Wi(function(t,e){if(!Ne(t.shape,e.shape))throw new oh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return rr((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function Ep(t,e){return rr((()=>{const n=wp(t,-1),s=wp(e,-1),r=Ri(n,s);return ji(_i(r,-1))}))}yp.constructors={};const Np={meanSquaredError:vp,meanAbsoluteError:kp,meanAbsolutePercentageError:Ip,meanSquaredLogarithmicError:function(t,e){return rr((()=>{const n=jr(e,rh(),Number.MAX_VALUE),s=Ti(dr(1,n)),r=jr(t,rh(),Number.MAX_VALUE),i=Ti(dr(1,r));return Wi(gd(Fi(s,i)),-1)}))},squaredHinge:function(t,e){return rr((()=>{const n=Ni(0,Fi(1,Ri(t,e)));return Wi(gd(n),-1)}))},hinge:function(t,e){return rr((()=>{const n=Ni(0,Fi(1,Ri(t,e)));return Wi(n,-1)}))},categoricalHinge:function(t,e){return rr((()=>{const n=_i(Ri(t,e),-1),s=Di(Ri(Fi(1,t),e),-1);return Ni(0,dr(1,Fi(s,n)))}))},logcosh:function(t,e){return rr((()=>{const n=Math.log(2),s=Fi(e,t),r=Fi(dr(s,ba(Ri(-2,s))),n);return Wi(r,-1)}))},categoricalCrossentropy:Cp,sparseCategoricalCrossentropy:$p,binaryCrossentropy:Sp,kullbackLeiblerDivergence:function(t,e){return rr((()=>{const n=jr(t,rh(),1),s=jr(e,rh(),1);return _i(Ri(t,Ti(oi(n,s))),-1)}))},poisson:function(t,e){return rr((()=>{const n=Ti(dr(rh(),e));return Wi(Fi(e,Ri(t,n)),-1)}))},cosineProximity:Ep};function Rp(t){if("string"==typeof t){if(t in Np)return Np[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new oh(e)}return t}function Ap(t,e){return rr((()=>{const n=Ri(.5,Ji(e)),s=rd($i(e,n),t.dtype);return Wi(di(t,s),-1)}))}function Tp(t,e){return rr((()=>rd(di($r(t,-1),$r(e,-1)),"float32")))}function Dp(t,e){return Sp(t,e)}function Fp(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),di(t,e).asType("float32")}const _p=Cp,Op=$p,Mp={binaryAccuracy:Ap,categoricalAccuracy:Tp,precision:function(t,e){return rr((()=>{const n=function(t,e){return rr((()=>Mi(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return rr((()=>Mi(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(s);return Aa($i(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:_p,sparseCategoricalCrossentropy:Op,mse:vp,MSE:vp,mae:kp,MAE:kp,mape:Ip,MAPE:Ip,cosine:Ep};function Lp(t){if("string"==typeof t&&t in Mp)return Mp[t];if("string"!=typeof t&&null!=t)return t;throw new oh("Unknown metric "+t)}function zp(t){if(hh(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Np))if(Np[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Mp))if(Mp[n]===t){e=n;break}return void 0!==e?e:t.name}}function Bp(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Pp(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Pp(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Pp(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Pp(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Wp(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function Up(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}Wp([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function Vp(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];i.push(`${n}[${s}][${r}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];Wp([`${a} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<i.length;++t)Wp(["","","",i[t]],e,s)}function Gp(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Hp(t,e){if(null===t)return null;if("string"==typeof t)return mh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Gp(e,r,s)?n.push(s):n.push(Hp(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=mh(n);e[t]=Hp(s,t)}}return e}}function jp(t,e){if(null==t)return null;if("string"==typeof t)return gh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];Gp(e,r,s)?n.push(s):n.push(jp(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[gh(n)]="name"!==n&&"className"!==n||"string"!=typeof s?jp(s,n):s}return e}}class qp{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof qp)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new oh(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Es(e,t.dtype)}catch(n){throw new oh(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ep){if(null==this.id2Value[t.id])throw new oh("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new oh("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof ep){if(null==this.id2Value[t.id])throw new oh("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new oh("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ir(this.id2Mask)}}const Kp={},Xp={};function Yp(t,e,n,s){const r=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==Kp[c]){const t=function(t,e){Ie(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=Zp(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of t){const{sorted:t,recipientMap:a}=Zp(i,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Jp(s)}}(a,e);h=t.sorted,d=t.recipientCounts,Kp[c]=h,Xp[c]=d}h=Kp[c],d={},r||Object.assign(d,Xp[c]);const p=new qp(e);for(let t=0;t<h.length;++t){if(null!=s){const t=sr().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const i=h[t],a=i.sourceLayer;if(a instanceof op)continue;const u=[],c=[],f=[];let g=!1;for(const t of i.inputs){const n=p.getValue(t),s=p.getMask(t);u.push(n),c.push(s),null!=s&&(g=!0),r||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=fh(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=Qp(i),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],m[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=m[t])}r||ir(f)}return p.disposeMasks(),i?l:l[0]}function Jp(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Zp(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),s.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:s,recipientMap:r}}function Qp(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class tf extends ip{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Hd(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],kh(this.inputs).length!==this.inputs.length)throw new oh("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((t=>t.name)));kh(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;hh(0===n,"input layer has >1 nodes"),hh(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof op))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},i={},a=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new ah(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(tf.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(s,e,n,r,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=a.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];i=Math.max(i,a),s[t.outboundLayer.id]=i,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],a=t.nodeIndices[s],o=r.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const t in e){const s=e[t];s in h||(h[s]=[]),h[s].push(n[t])}const d={};for(const t in s){const e=s[t];e in d||(d[e]=[]),d[e].push(r[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(vh);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],s=i[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof tf&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(vh);const f=this.inputs.slice(),g=[];for(const t of p)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ah("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+g);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((t=>t.name));for(const t of m){const e=m.filter((e=>e===t)).length;if(1!==e)throw new ah(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new oh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new oh("Duplicate weight name: "+e.originalName);n[e.originalName]=e,s++}const r=[];for(const s in t){let i=s;if(null==n[s]){const t=s.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])r.push([n[i],t[s]]);else if(e)throw new oh("Provided weight data has no target variable: "+s);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new oh(`${t.length} of ${s} weights are not set: `+t)}Qd(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.6.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=jp(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return rr((()=>{t=fh(t);const n=new qp;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Yp(this.outputs,n,e)}))}computeMask(t,e){return rr((()=>{let n;return t=fh(t),n=null==e?ch(null,t.length):fh(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=qd(t);if(e.length!==this.inputLayers.length)throw new oh(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(vh);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=qd(e.computeOutputShape(ph(s))),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${i}_${t}`]=r[t]}}const r=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;i.push(r)}for(let t=0;t<i.length;t++){const e=i[t];hh(e in n),r.push(n[e])}return ph(r)}runInternalGraph(t,e){null==e&&(e=ch(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=t[s],a=e[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(vh);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=fh(e.call(t,u)),l=fh(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=fh(e.call(s,u)),l=fh(e.computeMask(s,a));if(e.activityRegularizer)throw new lh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],i=l[t];n[e.id]=[s,i]}}}}const r=[],i=[],a=[];for(const t of this.outputs){hh(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];a.push(e.shape),r.push(e),i.push(s)}return[r,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof tf?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=tf.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new oh(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new oh("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new oh("No such layer: "+t)}calculateLosses(){return rr((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=tf.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=tf.nodeKey(t,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+s.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),a={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[tf.nodeKey(r,i)];null==l&&(l=0),t.push([r.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],i=tf.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,a,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],i=tf.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,a,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let s;for(const i of e){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(t,e);const c=r[o];if(c.inboundNodes.length<=l)return void a(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(ph(n),s)}function l(t){const n=t.name,i=xp(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new oh("Corrupted configuration, expected array for nodeData: "+t);a(i,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Ih(i);)for(const t of c){const e=r[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],s=t[2];hh(e in r);const i=r[e].inboundNodes[n].outputTensors;h.push(i[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];hh(e in r);const i=r[e].inboundNodes[n].outputTensors;d.push(i[s])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new oh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){rr((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function ef(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function nf(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=rr((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());ir(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),ia(r,"float32")}return null}function sf(t,e){return Ri(t,e)}function rf(t,e){let n,s;const r=e;n=r.xs,s=r.ys,Ie(null!=n&&null!=s,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e));const i=af("input",t.inputNames,n),a=af("output",t.outputNames,s),o=i[0].shape[0];Ie(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")")),Ie(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")"));for(let e=0;e<i.length;e++)Ie(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)Ie(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function af(t,e,n){if(n instanceof bn)return[n];if(Array.isArray(n))return Ie(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new oh(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function of(t){return"function"==typeof t.iterator}function lf(t){Ie(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got "+t))}function uf(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>ad(t,e,n-e))):ad(t,e,n-e)}function cf(t,e){return rr((()=>null==t?null:Array.isArray(t)?t.map((t=>cf(t,e))):fd(t,"int32"===e.dtype?e:e.toInt())))}function hf(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function df(t){const e=[];t instanceof bn&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(id(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function pf(t,e){if(null==t)return;const n=[];if(e instanceof bn)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof bn)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function ff(t){return Array.isArray(t)}function gf(t){return!function(t){return t instanceof bn}(t)&&!ff(t)}function mf(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(ff(t)&&t.length>0)e=!0;else if(gf(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new oh(`Error when checking model ${r} expected no data, but got `+t)}return[]}if(null==t)return e.map((t=>null));let i;if(gf(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new oh(`No data provided for "${n}". Need data for each key in: `+e);i.push(t[n])}}else if(ff(t)){if((t=t).length!==e.length)throw new oh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);i=t}else{if(t=t,e.length>1)throw new oh(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);i=[t]}if(i=df(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new oh(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+a.shape);for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l>=0&&o!==l)throw new oh(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${a.shape}].`)}}return i}function yf(t,e,n,s=!0,r=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new oh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new oh(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new oh(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(a.shape));for(let i=0;i<n[t].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new oh(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class bf extends tf{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new oh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}s("_".repeat(e)),Wp(i,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?Up(o[t],n,s):Vp(o[t],n,a,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Yd(t.collectedTrainableWeights):Yd(t.trainableWeights),e}(t),u=Yd(t.nonTrainableWeights);s("Total params: "+(l+u)),s("Trainable params: "+l),s("Non-trainable params: "+u),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Ao.adagrad(.01),Adadelta:()=>Ao.adadelta(1,.95,rh()),Adam:()=>Ao.adam(.001,.9,.999,rh()),Adamax:()=>Ao.adamax(.002,.9,.999,rh(),0),RMSProp:()=>Ao.rmsprop(.001,.9,0,rh()),SGD:()=>Ao.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new oh("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof cr))throw new oh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new oh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Rp(t)))}else{const n=Rp(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new oh(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Rp(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Kh("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Kh("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Sp?-1!==["accuracy","acc"].indexOf(a)?s=Ap:-1!==["crossentropy","ce"].indexOf(a)&&(s=Dp):this.lossFunctions[t]===$p?-1!==["accuracy","acc"].indexOf(a)?s=Fp:-1!==["crossentropy","ce"].indexOf(a)&&(s=Op):-1!==["accuracy","acc"].indexOf(a)?s=Tp:-1!==["crossentropy","ce"].indexOf(a)&&(s=_p),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const t=Lp(a);i=t,n=""+zp(a)}let e;Kh(n,(()=>{e=i})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;lf(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const i=r[0].concat(r[1]);this.makeTestFunction();const a=this.testFunction;return ph(this.testLoop(a,i,s,n.verbose,n.steps))}finally{pf(r[0],t),pf(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let i=[];if(n.verbose>0)throw new lh("Verbose mode is not implemented yet.");Ie(!s||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await a.next();if(i=rr((()=>{if(e.value){const{xs:n,ys:s}=rf(t,e.value),a=n.concat(s),u=rr((()=>r(a)));if(ir(a),0===l)for(let t=0;t<u.length;++t)i.push(ur(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=rr((()=>dr(i[t],Ri(c,e)))),l>0&&ir(n)}ir(u),o+=c,++l}return i})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=oi(i[t],o),ir(e)}return ph(i)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new oh(`If ${s} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new oh("Either the input data should have a defined shape, or "+s+" shoud be specified.");r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new oh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),i=new qp;if(t instanceof bn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new oh(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new oh("No value is provided for the model's input "+e.name);i.add(e,n)}const a=Yp(r,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=ch(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((t=>t.name));for(let s=0;s<t.length;++s){const a=i.indexOf(t[s]);if(-1!==a&&(e[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new oh("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return rr((()=>{const s=this.checkNumSamples(t);if(n)throw new lh("Verbose predictLoop() is not implemented yet.");const r=hf(s,e),i=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)rr((()=>{const n=r[e][0],s=r[e][1],i=uf(t,n,s),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new qp(a);return Yp(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return ph(i.map((t=>Xr(t,0))))}))}predict(t,e={}){const n=df(t);yf(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return lf(s),this.predictLoop(n,s)}finally{pf(n,t)}}predictOnBatch(t){yf(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new ah("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===$p?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=kh(t.map((t=>t.shape[0])));s.sort();const r=kh(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new oh("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((t=>t.shape))));if(r.length>1)throw new oh("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((t=>t.shape))));if(s.length>0&&r.length>0&&!Ne(s,r))throw new oh(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=mf(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=mf(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[vp,Sp,Cp];for(let r=0;r<t.length;++r){const i=t[r],a=e[r],o=n[r];if(null!=a){if(a===Cp&&1===i.shape[i.shape.length-1])throw new oh(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new oh(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new oh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=ef(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await nf(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,s=0,r){return rr((()=>{const i=this.checkNumSamples(e,n,r,"steps"),a=[];if(s>0)throw new lh("Verbose mode is not implemented yet.");if(null!=r)throw new lh("steps mode in testLoop() is not implemented yet");{const s=hf(i,n),r=ia(sd(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=ad(r,i,o-i),u=cf(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(ur(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=dr(a[t],Ri(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=oi(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;dh(t,s)>1&&(r+="_"+dh(t.slice(0,n),s)),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new qp(t),o=Yp(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=sf(n,r[t]));const i=Wi(n);e.push(i),l=0===t?n:dr(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=Wi(e(s[r],o[r]))}ar(n),i.push(n)}return l=Wi(l),this.calculateLosses().forEach((t=>{l=dr(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>rr((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:s[t]});const a=new qp(i),o=Yp(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],i=Wi(s(r[t],o[t]));n=0===t?i:dr(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],i=Wi(n(r[s],o[s]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,i,a,o,l,u,c;t.isTraining=!0;try{const h=null==s.batchSize?32:s.batchSize;lf(h);const d=!1,p=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,d,h);r=p[0],i=p[1],c=p[2];let f,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new lh("validationData including sample weights is not supported yet."):new oh("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+s.validationData+" is invalid.");a=s.validationData[0],o=s.validationData[1];const e=!0,n=await t.standardizeUserData(a,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];l=uf(r,t,e),r=uf(r,0,t),u=uf(i,t,e),i=uf(i,0,t),f=l.concat(u)}else null!=s.validationSteps&&(g=!0);const m=r.concat(i).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,w;g?(t.makeTestFunction(),x=t.testFunction,w=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],w=b.slice());const v=mp(s.callbacks,s.yieldEvery);return await async function(t,e,n,s,r,i,a,o,l,u,c,h,d,p,f){null==r&&(r=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=t.checkNumSamples(n,r,p,"steps_per_epoch");let y;null!=m&&(y=sd(0,m)),null==a&&(a=1);const{callbackList:b,history:x}=bp(o,a,i,d,m,p,r,g,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let a=d;a<i;++a){await b.onEpochBegin(a);const i={};{if("batch"===c)throw new lh("batch shuffling is not implemneted yet");c&&we(y);const a=ia(y),o=hf(m,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),rr((()=>{const d=o[c][0],p=o[c][1],f=ad(a,d,p-d);h.batch=c,h.size=p-d;const m=cf(n,f),y=e(m);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];h[e]=n,ar(n)}if(c===o.length-1&&g){const e=t.testLoop(l,u,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];ar(r),i["val_"+n]=r}}})),await b.onBatchEnd(c,h),up(h),t.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(a,i),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,m,b,h,s.epochs,s.verbose,v,x,f,s.shuffle,w,s.initialEpoch,null)}finally{t.isTraining=!1,pf(r,e),pf(i,n),pf(l,a),pf(u,o),null!=c&&ir(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(Ie(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Ie(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),Ie(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),Ie(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(of(n.validationData))Ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const t=function(t){if(3===t.length)throw new lh("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=mp(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=bp(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(g=await e.iterator());!s||c<n.batchesPerEpoch;){const e=await g.next();if(s&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=rf(t,e.value),i={};i.batch=h,i.size=s[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=ef(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await nf(r[t],null,e[t]))}const u=s.concat(r).concat(a),p=o(u);ir(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,ar(n)}await d.onBatchEnd(h,i),up(i),h++,c++}if(s?c>=n.batchesPerEpoch:e.done){if(r){let e;e=of(n.validationData)?fh(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):fh(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return ir(i),ph(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=sr().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-sr().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=gh(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>gh(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=gh(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[gh(zp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>gh(zp(t))));{const t={};for(const e in this.metrics)t[e]=gh(zp(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=xp(Hp(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=mh(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>mh(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=mh(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>mh(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=mh(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,ns.getSaveHandlers(n));if(0===e.length)throw new oh(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new oh(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new oh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Xn(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.6.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Xn(await this.optimizer.getWeights(),t);s.specs.push(...n),s.data=Qn([s.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Bp(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,t.save(r)}setUserDefinedMetadata(t){Bp(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}bf.className="Model",tr(bf);class xf extends bf{}xf.className="Functional",tr(xf);class wf extends bf{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Hd("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new oh("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof wf||t instanceof bf;let n;if(e){if(n=t,1!==n.outputs.length)throw new oh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new oh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new oh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new oh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new op({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new oh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new oh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=ap(this.outputs[0])}this.inboundNodes=[],new sp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ch(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Xd(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bf({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new ah("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new ah("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new ah("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new ah("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new oh("Legacy serialization format not supported yet.");r=e}else Ie(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof wf))throw new lh("Sequential.fromConfig called on non-Sequential input: "+a);for(const t of r){const e=xp(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new oh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new oh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}wf.className="Sequential",tr(wf);class vf extends Zs{getConfig(){return{}}}class kf extends vf{apply(t,e=1){return function(t,e=1){if(1!==e)throw new lh(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return li(t)}(t,e)}}kf.className="elu",tr(kf);class If extends vf{apply(t){return ua(t)}}If.className="selu",tr(If);class Cf extends vf{apply(t){return oa(t)}}Cf.className="relu",tr(Cf);class $f extends vf{apply(t){return rr((()=>Vi(6,oa(t))))}}$f.className="relu6",tr($f);class Sf extends vf{apply(t){return t}}Sf.className="linear",tr(Sf);class Ef extends vf{apply(t){return ha(t)}}Ef.className="sigmoid",tr(Ef);class Nf extends vf{apply(t){return function(t){return rr((()=>{const e=dr(.5,Ri(.2,t));return jr(e,0,1)}))}(t)}}Nf.className="hardSigmoid",tr(Nf);class Rf extends vf{apply(t){return ba(t)}}Rf.className="softplus",tr(Rf);class Af extends vf{apply(t){return function(t){return rr((()=>oi(t,hr(t).add(1))))}(t)}}Af.className="softsign",tr(Af);class Tf extends vf{apply(t){return Ca(t)}}Tf.className="tanh",tr(Tf);class Df extends vf{apply(t,e=-1){return ya(t,e)}}Df.className="softmax",tr(Df);class Ff extends vf{apply(t,e=-1){return Oi(t,e)}}Ff.className="logSoftmax",tr(Ff);class _f extends vf{apply(t,e=1){return rr((()=>ha(t.mul(e)).mul(t)))}}function Of(t){return t.getClassName()}function Mf(t,e={}){return wh(t,Qs.getMap().classNameMap,e,"activation")}function Lf(t){if(null==t){return Mf({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Mf(e)}return t instanceof vf?t:Mf(t)}_f.className="swish",tr(_f);class zf extends Zs{}class Bf extends zf{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return rr((()=>{let e=Bi([1]);return this.hasL1&&(e=dr(e,_i(Ri(this.l1,hr(t))))),this.hasL2&&(e=dr(e,_i(Ri(this.l2,gd(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Bf.className="L1L2",tr(Bf);const Pf={l1l2:"L1L2"};function Wf(t){return bh(t)}function Uf(t,e={}){return wh(t,Qs.getMap().classNameMap,e,"regularizer")}function Vf(t){return null==t?null:"string"==typeof t?Uf({className:t in Pf?Pf[t]:t,config:{}}):t instanceof zf?t:Uf(t)}class Gf extends ip{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Kd(t);let n=oa(t);return null!=this.maxValue&&(n=jr(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Gf.className="ReLU",tr(Gf);class Hf extends ip{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Kd(t);return Ai(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Hf.className="LeakyReLU",tr(Hf);class jf extends ip{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Wd(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Vf(t.alphaRegularizer),this.alphaConstraint=zh(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new oh("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Xd(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new tp({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Kd(t),Qi(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Pd(this.alphaInitializer),alphaRegularizer:Wf(this.alphaRegularizer),alphaConstraint:Mh(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}jf.className="PReLU",tr(jf);class qf extends ip{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new lh(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Kd(t);return li(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}qf.className="ELU",tr(qf);class Kf extends ip{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Kd(t);return n.mul(rd(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Kf.className="ThresholdedReLU",tr(Kf);class Xf extends ip{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Df).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Kd(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Yf(t,e,n){if("number"==typeof t)return ch(t,e);if(t.length!==e)throw new oh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const i=t[r];if((s=i)!==parseInt(s.toString(),10))throw new oh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+i)}return t;var s}function Jf(t,e,n,s,r=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((i+s-1)/s)}function Zf(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+nd([n-e,0]);else{if("same"!==s)throw new oh(`Unsupport padding mode: ${s}.`);t*=e}return t}function Qf(t,e){return rr((()=>(Gh(e),"channelsFirst"===e?kr(t,[0,2,3,1]):t)))}function tg(t,e){return rr((()=>(Gh(e),"channelsFirst"===e?kr(t,[0,2,3,4,1]):t)))}function eg(t,e,n,s=[1,1],r="valid",i,a,o=null){return rr((()=>{if(null==i&&(i="channelsLast"),Gh(i),3!==t.rank&&4!==t.rank)throw new oh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new oh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Qf(t,i);if("causal"===r)throw new lh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Va({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=kr(l,[0,3,1,2])),l}))}Xf.className="Softmax",tr(Xf);class ng extends ip{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ng.verifyArgs(e),this.rank=t,Sh(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new lh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Yf(e.kernelSize,t,"kernelSize"),this.strides=Yf(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Hh(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gh(this.dataFormat),this.activation=Lf(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Wd(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zh(e.biasConstraint),this.biasRegularizer=Vf(e.biasRegularizer),this.activityRegularizer=Vf(e.activityRegularizer),this.dilationRate=Yf(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new oh("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new oh("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new oh("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(hh("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!$h(t.kernelSize,"number",1,3))throw new oh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Of(this.activation),useBias:this.useBias,biasInitializer:Pd(this.biasInitializer),biasRegularizer:Wf(this.biasRegularizer),activityRegularizer:Wf(this.activityRegularizer),biasConstraint:Mh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class sg extends ng{constructor(t,e){super(t,e),this.kernel=null,sg.verifyArgs(e),this.filters=e.filters,Sh(this.filters,"filters"),this.kernelInitializer=Wd(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zh(e.kernelConstraint),this.kernelRegularizer=Vf(e.kernelRegularizer)}build(t){t=Xd(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new oh("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return rr((()=>{let e;t=Kd(t);const n=null==this.bias?null:this.bias.read(),s=Nh(this.activation.getClassName());if(null!=s&&2===this.rank)e=eg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",i,a=1){return rr((()=>{if(null==i&&(i="channelsLast"),Gh(i),3!==t.shape.length)throw new oh("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new oh("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new oh("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===i&&(t=kr(t,[0,2,1])),"causal"===r)throw new lh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ei(t,e,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=yd(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=eg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new lh("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",i,a){return rr((()=>{if(null==i&&(i="channelsLast"),Gh(i),4!==t.rank&&5!==t.rank)throw new oh("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new oh("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=tg(t,i);if("causal"===r)throw new lh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ri(o,e,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=yd(o,n)),"channelsFirst"===i&&(o=kr(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Xd(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=Jf(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:Pd(this.kernelInitializer),kernelRegularizer:Wf(this.kernelRegularizer),kernelConstraint:Mh(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new oh("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class rg extends sg{constructor(t){super(2,t),rg.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!$h(t.kernelSize,"number",1,2))throw new oh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}rg.className="Conv2D",tr(rg);class ig extends sg{constructor(t){super(3,t),ig.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new oh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}ig.className="Conv3D",tr(ig);class ag extends rg{constructor(t){if(super(t),this.inputSpec=[new tp({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new oh("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=Xd(t)).length)throw new oh("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new oh("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tp({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return rr((()=>{let e=Kd(t);if(4!==e.shape.length)throw new oh("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,Zf(a,c,l,this.padding),Zf(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=kr(e,[0,2,3,1]));let p=si(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=kr(p,[0,3,1,2])),null!=this.bias&&(p=yd(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Xd(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=Zf(e[s],o,i,this.padding),e[r]=Zf(e[r],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}ag.className="Conv2DTranspose",tr(ag);class og extends sg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new oh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new oh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new oh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wd(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Vf(e.depthwiseRegularizer),this.depthwiseConstraint=zh(e.depthwiseConstraint),this.pointwiseInitializer=Wd(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Vf(e.pointwiseRegularizer),this.pointwiseConstraint=zh(e.pointwiseConstraint)}build(t){if((t=Xd(t)).length<this.rank+2)throw new oh(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new oh("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new tp({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return rr((()=>{let e;if(t=Kd(t),1===this.rank)throw new lh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=kr(t,[0,2,3,1])),e=ca(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=yd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=kr(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Pd(this.depthwiseInitializer),t.pointwiseInitializer=Pd(this.pointwiseInitializer),t.depthwiseRegularizer=Wf(this.depthwiseRegularizer),t.pointwiseRegularizer=Wf(this.pointwiseRegularizer),t.depthwiseConstraint=Mh(this.depthwiseConstraint),t.pointwiseConstraint=Mh(this.pointwiseConstraint),t}}og.className="SeparableConv";class lg extends og{constructor(t){super(2,t)}}lg.className="SeparableConv2D",tr(lg);class ug extends sg{constructor(t){super(1,t),ug.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!$h(t.kernelSize,"number",1,1))throw new oh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ug.className="Conv1D",tr(ug);class cg extends ip{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return rr((()=>{if(t=Kd(t),"channelsLast"===this.dataFormat){const e=ld(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ld(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ld(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ld(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}cg.className="Cropping2D",tr(cg);class hg extends ip{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return rr((()=>{let e=Kd(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=kr(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r=e.resizeNearestNeighbor([t,s]);return kr(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return e.resizeNearestNeighbor([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}hg.className="UpSampling2D",tr(hg);class dg extends ng{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wd(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zh(t.depthwiseConstraint),this.depthwiseRegularizer=Vf(t.depthwiseRegularizer)}build(t){if((t=Xd(t)).length<4)throw new oh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new oh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rr((()=>{let e=function(t,e,n=[1,1],s="valid",r,i){return rr((()=>{null==r&&(r="channelsLast"),Gh(r);let a=Qf(t,r);if(4!==t.rank)throw new oh("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new oh("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return a=ii(a,e,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=kr(a,[0,3,1,2])),a}))}(t=Kd(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=yd(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Xd(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Jf(e,this.kernelSize[0],this.padding,this.strides[0]),i=Jf(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,i]:[t[0],r,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Pd(this.depthwiseInitializer),t.depthwiseRegularizer=Wf(this.depthwiseRegularizer),t.depthwiseConstraint=Mh(this.depthwiseRegularizer),t}}function pg(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new oh("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function fg(t,e,n,s=!1,r,i,a=!1,o=!1){return rr((()=>{const l=e.shape.length;if(l<3)throw new oh(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(sd(2,l));if(e=kr(e,u),null!=i)throw new lh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=fi(r,-1)),r=kr(r,u)),s&&(e=la(e,0),null!=r&&(r=la(r,0)));const c=[];let h,d=n;const p=e.shape[0],f=Na(e);let g,m;null!=r&&(g=Na(r));for(let e=0;e<p;++e){const n=f[e],s=rr((()=>t(n,d)));if(null==r)h=s[0],d=s[1];else{const t=rr((()=>{const t=g[e],n=Ji(t).sub(t);return{output:s[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}o&&c.push(h)}return o&&(m=Ia(c,1)),[h,m,d]}))}dg.className="DepthwiseConv2D",tr(dg);class gg extends ip{constructor(t){let e;if(super(t),null==t.cell)throw new oh("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Ig({cells:t.cell}):t.cell,null==e.stateSize)throw new oh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new tp({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?sd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){jd(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return rr((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new lh("Constants support is not implemented in RNN yet.");jd(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new tp({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Ne(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new oh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=r.map((t=>new tp({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){rr((()=>{if(!this.stateful)throw new ih("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new oh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Bi([n,t]))):this.states_=[Bi([n,this.cell.stateSize])];else if(null==t)ir(this.states_),null!=this.keptStates&&(ir(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Bi([n,t]))):this.states_[0]=Bi([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new oh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):ir(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,r];if(!Ne(s.shape,i))throw new oh(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>ar(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=pg(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new tp({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof ep){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return rr((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=Kd(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new oh(`RNN Layer has ${i} state(s) but was passed `+r.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=fg(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return rr((()=>{let e=Bi(t.shape);return e=_i(e,[1,2]),e=id(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?hd(e,[1,t]):e)):this.cell.stateSize>1?[hd(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===gg.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=xp(e.cell,n);return new t(Object.assign(e,{cell:s}))}}gg.className="RNN",tr(gg);class mg extends ip{}class yg extends mg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Sh(this.units,"units"),this.activation=Lf(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Wd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vf(t.kernelRegularizer),this.recurrentRegularizer=Vf(t.recurrentRegularizer),this.biasRegularizer=Vf(t.biasRegularizer),this.kernelConstraint=zh(t.kernelConstraint),this.recurrentConstraint=zh(t.recurrentConstraint),this.biasConstraint=zh(t.biasConstraint),this.dropout=ed([1,nd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ed([1,nd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Xd(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rr((()=>{if(2!==(t=t).length)throw new oh(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>Ji(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>Ji(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=pd(null!=i?Ri(t,i):t,this.kernel.read()),null!=this.bias&&(r=yd(r,this.bias.read())),null!=a&&(n=Ri(n,a));let o=dr(r,pd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Of(this.activation),useBias:this.useBias,kernelInitializer:Pd(this.kernelInitializer),recurrentInitializer:Pd(this.recurrentInitializer),biasInitializer:Pd(this.biasInitializer),kernelRegularizer:Wf(this.kernelRegularizer),recurrentRegularizer:Wf(this.recurrentRegularizer),biasRegularizer:Wf(this.biasRegularizer),activityRegularizer:Wf(this.activityRegularizer),kernelConstraint:Mh(this.kernelConstraint),recurrentConstraint:Mh(this.recurrentConstraint),biasConstraint:Mh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}yg.className="SimpleRNNCell",tr(yg);class bg extends gg{constructor(t){t.cell=new yg(t),super(t)}call(t,e){return rr((()=>{null!=this.cell.dropoutMask&&(ir(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ir(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}bg.className="SimpleRNN",tr(bg);class xg extends mg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new oh("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Sh(this.units,"units"),this.activation=Lf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Lf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Wd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Vf(t.kernelRegularizer),this.recurrentRegularizer=Vf(t.recurrentRegularizer),this.biasRegularizer=Vf(t.biasRegularizer),this.kernelConstraint=zh(t.kernelConstraint),this.recurrentConstraint=zh(t.recurrentConstraint),this.biasConstraint=zh(t.biasConstraint),this.dropout=ed([1,nd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ed([1,nd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Xd(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return rr((()=>{if(2!==(t=t).length)throw new oh("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>Ji(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>Ji(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Ri(t,r[0]));let u=pd(t,this.kernel.read());this.useBias&&(u=yd(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ri(s,i[0]));const c=this.recurrentKernel.read(),[h,d]=wa(c,[2*this.units,this.units],c.rank-1),p=pd(s,h),[f,g,m]=wa(u,3,u.rank-1),[y,b]=wa(p,2,p.rank-1);a=this.recurrentActivation.apply(dr(f,y)),o=this.recurrentActivation.apply(dr(g,b));const x=pd(Ri(o,s),d);l=this.activation.apply(dr(m,x));const w=dr(Ri(a,s),Ri(dr(1,ji(a)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Of(this.activation),recurrentActivation:Of(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pd(this.kernelInitializer),recurrentInitializer:Pd(this.recurrentInitializer),biasInitializer:Pd(this.biasInitializer),kernelRegularizer:Wf(this.kernelRegularizer),recurrentRegularizer:Wf(this.recurrentRegularizer),biasRegularizer:Wf(this.biasRegularizer),activityRegularizer:Wf(this.activityRegularizer),kernelConstraint:Mh(this.kernelConstraint),recurrentConstraint:Mh(this.recurrentConstraint),biasConstraint:Mh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}xg.className="GRUCell",tr(xg);class wg extends gg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xg(t),super(t)}call(t,e){return rr((()=>{null!=this.cell.dropoutMask&&(ir(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ir(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}wg.className="GRU",tr(wg);class vg extends mg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Sh(this.units,"units"),this.activation=Lf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Lf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Wd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Vf(t.kernelRegularizer),this.recurrentRegularizer=Vf(t.recurrentRegularizer),this.biasRegularizer=Vf(t.biasRegularizer),this.kernelConstraint=zh(t.kernelConstraint),this.recurrentConstraint=zh(t.recurrentConstraint),this.biasConstraint=zh(t.biasConstraint),this.dropout=ed([1,nd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ed([1,nd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Xd(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends kd{apply(e,s){const r=t.apply([n]),i=(new Cd).apply([n]),a=t.apply([2*n]);return cd(cd(r,i),a)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return rr((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new oh("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>Ji(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>Ji(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Ri(t,i[0]));let h=pd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ri(s,a[0])),h=dr(h,pd(s,this.recurrentKernel.read())),this.useBias&&(h=yd(h,this.bias.read()));const[d,p,f,g]=wa(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=dr(Ri(l,r),Ri(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Ri(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Of(this.activation),recurrentActivation:Of(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pd(this.kernelInitializer),recurrentInitializer:Pd(this.recurrentInitializer),biasInitializer:Pd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Wf(this.kernelRegularizer),recurrentRegularizer:Wf(this.recurrentRegularizer),biasRegularizer:Wf(this.biasRegularizer),activityRegularizer:Wf(this.activityRegularizer),kernelConstraint:Mh(this.kernelConstraint),recurrentConstraint:Mh(this.recurrentConstraint),biasConstraint:Mh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}vg.className="LSTMCell",tr(vg);class kg extends gg{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vg(t),super(t)}call(t,e){return rr((()=>{null!=this.cell.dropoutMask&&(ir(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ir(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}kg.className="LSTM",tr(kg);class Ig extends mg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return rr((()=>{let n=(t=t).slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),r.push(i.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;jd(t)&&(t=t[0]),t=t,this.cells.forEach(((n,s)=>{Kh("RNNCell_"+s,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(xp(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Zd(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}Qd(e)}}function Cg(t){const{ones:e,rate:n,training:s=!1,count:r=1}=t,i=()=>bd(e(),n),a=()=>xd(i,e,s);return!r||r<=1?ar(a().clone()):Array(r).fill(void 0).map(a).map((t=>ar(t.clone())))}Ig.className="StackedRNNCells",tr(Ig);var $g,Sg,Eg,Ng;class Rg extends gg{constructor(t){if(t.unroll)throw new lh("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new lh("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new tp({ndim:5})]}call(t,e){return rr((()=>{if(null!=this.cell.dropoutMask&&(ir(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ir(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new oh("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return rr((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=Bi([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){rr((()=>{if(!this.stateful)throw new ih("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new oh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bi(r))):this.states_=[Bi(r)];else if(null==t)ir(this.states_),null!=this.keptStates&&(ir(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bi(r))):this.states_[0]=Bi(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new oh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):ir(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!Ne(n.shape,s))throw new oh(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>ar(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=Jf(l,s[0],r,i[0],a[0]),h=Jf(u,s[1],r,i[1],a[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Rg.className="ConvRNN2D";class Ag extends vg{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,Sh(this.filters,"filters"),this.kernelSize=Yf(n,2,"kernelSize"),this.kernelSize.forEach((t=>Sh(t,"kernelSize"))),this.strides=Yf(s||1,2,"strides"),this.strides.forEach((t=>Sh(t,"strides"))),this.padding=r||"valid",Hh(this.padding),this.dataFormat=i||"channelsLast",Gh(this.dataFormat),this.dilationRate=Yf(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>Sh(t,"dilationRate")))}build(t){var e;t=Xd(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new oh("The channel dimension of the input should be defined. Found "+t[n]);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends kd{apply(t,e){return ud([n.apply([s]),Pi([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return rr((()=>{if(3!==t.length)throw new oh("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,s=t[0],r=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Cg({ones:()=>Ji(s),rate:this.dropout,training:n,count:4}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Ri(e[n],t):t;let l=o(s,a,0),u=o(s,a,1),c=o(s,a,2),h=o(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Cg({ones:()=>Ji(r),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),g=o(r,d,2),m=o(r,d,3);const[y,b,x,w]=wa(this.kernel.read(),4,3),[v,k,I,C]=this.useBias?wa(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,C,this.padding);const[$,S,E,N]=wa(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,$),f=this.recurrentConv(f,S),g=this.recurrentConv(g,E),m=this.recurrentConv(m,N);const R=this.recurrentActivation.apply(dr(l,p)),A=this.recurrentActivation.apply(dr(u,f)),T=dr(Ri(A,i),Ri(R,this.activation.apply(dr(c,g)))),D=Ri(this.recurrentActivation.apply(dr(h,m)),this.activation.apply(T));return[D,D,T]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=ti(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?yd(r,n,this.dataFormat):r}recurrentConv(t,e){return ti(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ag.className="ConvLSTM2DCell",tr(Ag);class Tg extends Rg{constructor(t){const e=new Ag(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Tg.className="ConvLSTM2D",tr(Tg);class Dg extends ip{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return xd((()=>bd(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Dg.className="Dropout",tr(Dg);class Fg extends Dg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Fg.className="SpatialDropout1D",tr(Fg);class _g extends ip{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Sh(this.units,"units"),this.activation=Lf(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Wd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zh(t.kernelConstraint),this.biasConstraint=zh(t.biasConstraint),this.kernelRegularizer=Vf(t.kernelRegularizer),this.biasRegularizer=Vf(t.biasRegularizer),this.activityRegularizer=Vf(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Xd(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Xd(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t),s=Nh(this.activation.getClassName());let r;return null!=s?r=pd(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=pd(n,this.kernel.read()),null!=this.bias&&(r=yd(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:Of(this.activation),useBias:this.useBias,kernelInitializer:Pd(this.kernelInitializer),biasInitializer:Pd(this.biasInitializer),kernelRegularizer:Wf(this.kernelRegularizer),biasRegularizer:Wf(this.biasRegularizer),activityRegularizer:Wf(this.activityRegularizer),kernelConstraint:Mh(this.kernelConstraint),biasConstraint:Mh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}_g.className="Dense",tr(_g);class Og extends ip{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Xd(t);for(const e of t.slice(1))if(null==e)throw new oh(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Qh(t,1)]}call(t,e){return rr((()=>{this.invokeCallHook(t,e);let n=Kd(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new oh(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Qh(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Og.className="Flatten",tr(Og);class Mg extends ip{constructor(t){super(t),this.supportsMasking=!0,this.activation=Lf(t.activation)}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Of(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Mg.className="Activation",tr(Mg);class Lg extends ip{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return rr((()=>{return t=Kd(t),e=t,n=this.n,rr((()=>{if(2!==e.shape.length)throw new oh(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return hd(id(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Lg.className="RepeatVector",tr(Lg);class zg extends ip{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,i=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==i)throw new oh("Can only specifiy one unknown dimension.");i=t}else r*=e}const a=Qh(t);if(null!==i){if(0===r||a%r!=0)throw new oh(n);s[i]=a/r}else if(a!==r)throw new oh(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}zg.className="Reshape",tr(zg);class Bg extends ip{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=sd(1,t.dims.length+1);if(!Ne(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tp({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Xd(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return kr(Kd(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Bg.className="Permute",tr(Bg);class Pg extends ip{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Kd(t);return Cr(qi(n,this.maskValue),-1)}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t),s=Cr(qi(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}Pg.className="Masking",tr(Pg);class Wg extends ip{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(fh(t.inputLength))}this.inputDim=t.inputDim,Sh(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Sh(this.outputDim,"outputDim"),this.embeddingsInitializer=Wd(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Vf(t.embeddingsRegularizer),this.activityRegularizer=Vf(t.activityRegularizer),this.embeddingsConstraint=zh(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return rr((()=>this.maskZero?(t=Kd(t),qi(t,Yi(t))):null))}computeOutputShape(t){if(t=Xd(t),null==this.inputLength)return[...t,this.outputDim];const e=fh(this.inputLength);if(e.length!==t.length-1)throw new oh(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],i=t[s+1];if(null!=r&&null!=i&&r!==i)throw new oh(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==r&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return rr((()=>{this.invokeCallHook(t,e);let n=Kd(t);return"int32"!==n.dtype&&(n=rd(n,"int32")),fd(this.embeddings.read(),n.as1D()).reshape(Xd(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pd(this.embeddingsInitializer),embeddingsRegularizer:Wf(this.embeddingsRegularizer),activityRegularizer:Wf(this.activityRegularizer),embeddingsConstraint:Mh(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Wg.className="Embedding",tr(Wg);class Ug extends ip{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new lh}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],i=e[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new oh("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Xd(t)]),(t=t).length<2)throw new oh(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=kh(e),e.length>1)throw new oh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===kh(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return rr((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=nd(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=id(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],i=t.slice(1).concat([r]);let a=s.reshape([r].concat(Qh(t.slice(1))));a=kr(a,[1,0]),a=a.reshape(i),e.push(a),n=!0}else if(t>1){const r=sd(1,t).concat([0]);e.push(kr(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=kr(s.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(sd(0,r-1));s=kr(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=kh(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return rr((()=>{if(null==e)return null;if(!Array.isArray(e))throw new oh("`mask` should be an Array");if(!Array.isArray(t))throw new oh("`inputs` should be an Array");if(e.length!==t.length)throw new oh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:fi(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Mi(n,e[t]);return n}))}}class Vg extends Ug{constructor(t){super(t)}mergeFunction(t){return rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=dr(e,t[n]);return e}))}}Vg.className="Add",tr(Vg);class Gg extends Ug{constructor(t){super(t)}mergeFunction(t){return rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ri(e,t[n]);return e}))}}Gg.className="Multiply",tr(Gg);class Hg extends Ug{constructor(t){super(t)}mergeFunction(t){return rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=dr(e,t[n]);return Ri(1/t.length,e)}))}}Hg.className="Average",tr(Hg);class jg extends Ug{constructor(t){super(t)}mergeFunction(t){return rr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ni(e,t[n]);return e}))}}jg.className="Maximum",tr(jg);class qg extends Ug{constructor(t){super(t)}mergeFunction(t){return rr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Vi(e,t[n]);return e}))}}qg.className="Minimum",tr(qg);class Kg extends Ug{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new oh("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(Ne(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new oh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return rr((()=>ud(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new oh("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new oh("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new oh("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new oh(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return rr((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(Ji(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(fi(e[n],-1)):s.push(e[n]);const r=Xr(s,this.axis);return Ir(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Xg(t,e){for(;t<0;)t+=e;return t}Kg.className="Concatenate",tr(Kg);class Yg extends Ug{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Ie(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new lh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new oh(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new oh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Xg(e,t[n].shape.length))):[Xg(this.axes,n.shape.length),Xg(this.axes,s.shape.length)],this.normalize&&(n=wp(n,e[0]),s=wp(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new lh("batchDot is not implemented for tensors of 4D or higher rank yet");if(Ie(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length)),Ie(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new lh("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return rr((()=>{let n,a;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,s=i[1]===e.shape.length-1;a=t.matMul(e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Xg(this.axes,t.length),Xg(this.axes,e.length)],n}computeOutputShape(t){Ie(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new lh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Yg.className="Dot",tr(Yg);class Jg extends ip{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t);return xd((()=>dd(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}Jg.className="GaussianNoise",tr(Jg);class Zg extends ip{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rr((()=>{this.invokeCallHook(t,e);const n=Kd(t);return this.rate>0&&this.rate<1?xd((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(dd(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Zg.className="GaussianDropout",tr(Zg);class Qg extends ip{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Kd(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return rr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return xd((()=>{const e=Kd(t),s=-1.7580993408473766;let r=Si(ra(n),this.rate);r=rd(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate;return e.mul(r).add(r.add(-1).mul(s)).mul(i).add(a)}),(()=>Kd(t)),e.training||!1)}return t}))}}function tm(t,e,n,s,r,i=.001){let a;if(2===t.rank)a=Vr(t,e,n,s,r,i);else if(3===t.rank)a=Gr(t,e,n,s,r,i);else{if(4!==t.rank)throw new lh(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=Hr(t,e,n,s,r,i)}return a}Qg.className="AlphaDropout",tr(Qg);class em extends ip{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Wd(t.betaInitializer||"zeros"),this.gammaInitializer=Wd(t.gammaInitializer||"ones"),this.movingMeanInitializer=Wd(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wd(t.movingVarianceInitializer||"ones"),this.betaConstraint=zh(t.betaConstraint),this.gammaConstraint=zh(t.gammaConstraint),this.betaRegularizer=Vf(t.betaRegularizer),this.gammaRegularizer=Vf(t.gammaRegularizer)}build(t){t=Xd(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new oh(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new tp({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return rr((()=>{const n=null!=e.training&&e.training,s=Kd(t),r=s.shape,i=r.length,a=sd(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=ch(1,i);l[o]=r[o];const u=a.slice();u.sort();const c=!Ne(u,sd(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return tm(s,t,e,n,r,this.epsilon)}return tm(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,s,r=.001){return Ne(s.slice().sort(),sd(0,t.rank-1))?function(t,e,n,s,r=.001){return rr((()=>{const i=Hi(t,s),a=i.mean,o=i.variance;return[tm(t,a,o,n,e,r),a,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return rr((()=>{const i=Hi(t,s),a=i.mean,o=i.variance,l=[];for(const e of sd(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[tm(t,u,c,d,h,r),a,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{rr((()=>{const s=1-n,r=t.read(),i=r.sub(e).mul(s);t.write(r.sub(i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pd(this.betaInitializer),gammaInitializer:Pd(this.gammaInitializer),movingMeanInitializer:Pd(this.movingMeanInitializer),movingVarianceInitializer:Pd(this.movingVarianceInitializer),betaRegularizer:Wf(this.betaRegularizer),gammaRegularizer:Wf(this.gammaRegularizer),betaConstraint:Mh(this.betaConstraint),gammaConstraint:Mh(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}em.className="BatchNormalization",tr(em);class nm extends ip{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Wd(t.betaInitializer||"zeros"),this.gammaInitializer=Wd(t.gammaInitializer||"ones"),this.betaRegularizer=Vf(t.betaRegularizer),this.gammaRegularizer=Vf(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Xd(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==kh(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Kd(t),s=n.shape,r=s.length;return rr((()=>{let{mean:t,variance:e}=Hi(n,this.axis,!0);const i=ch(1,r);for(const t of this.axis)i[t]=s[t];const a=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),c.push(1)):(u.push(1),c.push(s[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),tm(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pd(this.betaInitializer),gammaInitializer:Pd(this.gammaInitializer),betaRegularizer:Wf(this.betaRegularizer),gammaRegularizer:Wf(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}nm.className="LayerNormalization",tr(nm);class sm extends ip{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new oh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new oh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new oh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new tp({ndim:4})]}computeOutputShape(t){let e,n;return t=Xd(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return rr((()=>function(t,e,n){return rr((()=>{if(4!==t.rank)throw new oh("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new oh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new oh(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],Zi(t,s)}))}(Kd(t),this.padding,this.dataFormat)))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function rm(t,e,n,s,r,i){return rr((()=>{let a;Gh(r),jh(i),Hh(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=Qf(t,r);const o="same"===s?"same":"valid";return a="max"===i?Li(t,e,n,o):Br(t,e,n,o),"channelsFirst"===r&&(a=kr(a,[0,3,1,2])),a}))}function im(t,e,n,s,r,i){return rr((()=>{let a;Gh(r),jh(i),Hh(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),t=tg(t,r);const o="same"===s?"same":"valid";return a="max"===i?zi(t,e,n,o):Pr(t,e,n,o),"channelsFirst"===r&&(a=kr(a,[0,4,1,2,3])),a}))}sm.className="ZeroPadding2D",tr(sm);class am extends ip{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new oh("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(Sh(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new oh("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}Sh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Hh(this.padding),this.inputSpec=[new tp({ndim:3})]}computeOutputShape(t){const e=Jf((t=Xd(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return rr((()=>{this.invokeCallHook(t,e),t=id(Kd(t),2);const n=this.poolingFunction(Kd(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ka(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class om extends am{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),rm(t,e,n,s,r,"max")}}om.className="MaxPooling1D",tr(om);class lm extends am{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),rm(t,e,n,s,r,"avg")}}lm.className="AveragePooling1D",tr(lm);class um extends ip{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new oh("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];Sh(this.poolSize,"poolSize"),Sh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gh(this.dataFormat),Hh(this.padding),this.inputSpec=[new tp({ndim:4})]}computeOutputShape(t){t=Xd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Jf(e,this.poolSize[0],this.padding,this.strides[0]),n=Jf(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return rr((()=>(this.invokeCallHook(t,e),this.poolingFunction(Kd(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class cm extends um{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),rm(t,e,n,s,r,"max")}}cm.className="MaxPooling2D",tr(cm);class hm extends um{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),rm(t,e,n,s,r,"avg")}}hm.className="AveragePooling2D",tr(hm);class dm extends ip{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new oh("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Sh(this.poolSize,"poolSize"),Sh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gh(this.dataFormat),Hh(this.padding),this.inputSpec=[new tp({ndim:5})]}computeOutputShape(t){t=Xd(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Jf(e,this.poolSize[0],this.padding,this.strides[0]),n=Jf(n,this.poolSize[1],this.padding,this.strides[1]),s=Jf(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return rr((()=>(this.invokeCallHook(t,e),this.poolingFunction(Kd(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class pm extends dm{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),im(t,e,n,s,r,"max")}}pm.className="MaxPooling3D",tr(pm);class fm extends dm{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return Gh(r),Hh(s),im(t,e,n,s,r,"avg")}}fm.className="AveragePooling3D",tr(fm);class gm extends ip{constructor(t){super(t),this.inputSpec=[new tp({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new lh}}class mm extends gm{constructor(t){super(t||{})}call(t,e){return rr((()=>{const e=Kd(t);return Wi(e,1)}))}}mm.className="GlobalAveragePooling1D",tr(mm);class ym extends gm{constructor(t){super(t||{})}call(t,e){return rr((()=>{const e=Kd(t);return Di(e,1)}))}}ym.className="GlobalMaxPooling1D",tr(ym);class bm extends ip{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gh(this.dataFormat),this.inputSpec=[new tp({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new lh}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class xm extends bm{call(t,e){return rr((()=>{const e=Kd(t);return"channelsLast"===this.dataFormat?Wi(e,[1,2]):Wi(e,[2,3])}))}}xm.className="GlobalAveragePooling2D",tr(xm);class wm extends bm{call(t,e){return rr((()=>{const e=Kd(t);return"channelsLast"===this.dataFormat?Di(e,[1,2]):Di(e,[2,3])}))}}wm.className="GlobalMaxPooling2D",tr(wm);class vm extends ip{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=xp(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class km extends vm{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Xd(t)).length<3)throw new oh("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Xd(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return rr((()=>fg(((t,n)=>[Kd(this.layer.call(t,e)),[]]),t=Kd(t),[],!1,null,null,!1,!0)[1]))}}km.className="TimeDistributed",tr(km);class Im extends vm{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=xp(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=xp(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Ch(Uh,"BidirectionalMergeMode",r),t.weights)throw new lh("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),e=r[0]):e=r[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):ph(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=pg(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new oh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const s=n.map((t=>new tp({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),a.push(...s)}if(null!=s)throw new lh("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof ep;for(const t of i)if(t instanceof ep!==o)throw new oh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return rr((()=>{const n=e.initialState;let s,r,i,a;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=la(r,1)),"concat"===this.mergeMode?a=ud([s,r]):"sum"===this.mergeMode?a=dr(s,r):"ave"===this.mergeMode?a=Ri(.5,dr(s,r)):"mul"===this.mergeMode?a=Ri(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Kh(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Kh(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=xp(e.layer);if(delete e.layer,null!=e.numConstants)throw new lh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}function Cm(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Nm(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const a=Cm(t[i],e,n,s);r[i]=a}return s.delete(t),r}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,r.value),r.value}function $m(t,e=Em){return Sm(t,e)}function Sm(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Nm(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=Sm(t.map((t=>t[i])),e,n);r[i]=s}return n.delete(s),r}throw new Error("Can't recurse into non-iterable type: "+s)}return r.value}function Em(t){return null===t?null:Nm(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Nm(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof bn))}function Rm(t){return Cm(t,Am)}function Am(t){return t instanceof bn?{value:t.clone(),recurse:!1}:Nm(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Im.className="Bidirectional",tr(Im),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}($g||($g={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Sg||(Sg={}));class Tm{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Dm extends Tm{constructor(){super(Dm.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Dm.INITIAL_CAPACITY=32;class Fm{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Um(this,t)}filter(t){return new Pm(this,t)}map(t){return new Wm(this,t)}mapAsync(t){return new Vm(this,t)}serialMapAsync(t){return new Vm(this,t).serial()}flatmap(t){return new Hm(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Bm(this,t,e)}columnMajorBatch(t,e=!0,n=Em){return this.rowMajorBatch(t,e).map((t=>$m(t,n)))}concatenate(t,e){return new jm(new _m([this,t]),e)}take(t){return t<0||null==t?this:new zm(this,t)}skip(t){return t<0||null==t?this:new Lm(this,t)}prefetch(t){return new qm(this,t)}shuffle(t,e){return new Km(this,t,e)}serial(){return new Mm(this)}}class _m extends Fm{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Rm(t),done:!1}}}class Om extends Fm{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class Mm extends Fm{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Lm extends Fm{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;ir(t.value)}return this.upstream.next()}}class zm extends Fm{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Bm extends Fm{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Pm extends Fm{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;ir(t.value)}}}class Wm extends Fm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=An(t.value),n=this.transform(t.value),s=An(n);for(const t of e)Rn(t,s)||t.dispose();return{value:n,done:!1}}}class Um extends Fm{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Vm extends Fm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=An(t.value),n=await this.transform(t.value),s=An(n);for(const t of e)Rn(t,s)||t.dispose();return{value:n,done:!1}}}class Gm extends Fm{constructor(){super(),this.outputQueue=new Dm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Hm extends Gm{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=An(t.value),n=this.transform(t.value),s=An(n);this.outputQueue.pushAll(n);for(const t of e)Rn(t,s)||t.dispose();return!0}}class jm extends Fm{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Ng=Eg||(Eg={}))[Ng.FAIL=0]="FAIL",Ng[Ng.SHORTEST=1]="SHORTEST",Ng[Ng.LONGEST=2]="LONGEST";class qm extends Fm{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Tm(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Km extends qm{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=ta.alea(n||Qe().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Xm{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return Ie(t>0,(()=>"batchSize needs to be positive, but it is\n      "+t)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Ym((async()=>(await n.iterator()).columnMajorBatch(t,e,Jm)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Ym((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Ym((async()=>(await e.iterator()).filter((e=>rr((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Ym((async()=>(await e.iterator()).map((e=>rr((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Ym((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Ym((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Ym((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new Om(r)).take(t),new jm(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Ym((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=ta.alea(e||Qe().toString());return Ym((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Ym((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ym(t,e=null){return new class extends Xm{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Jm(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof bn||Be(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof bn?Ia(t):qn(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Zm(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Ie("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the CPU backend."))}))}Xm.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Qm=Za,ty=cl,ey=hl,ny=dl,sy=pl;function ry(t,e,n,s){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return li(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,s);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class iy extends a{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,nr())}write(t,e,n){this.firstUse&&(this.firstUse=!1,u().get("IS_NODE")&&Jo("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){return{dataId:this.write(n,t,e),shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s){this.data.set(t,{values:e,dtype:s,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Qo(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>nn(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ss(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return nr().makeTensorFromDataId(s,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=Qe();return t(),{kernelMs:Qe()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,s){Zm(t,"stridedSlice");const r=Bs(e,n,s);if(r.some((t=>0===t)))return qn([],r);const i=Ss(r,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[t]*s[t]+e[t];i.set(a.get(...r),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Ss([t.size,t.size],t.dtype),s=n.values;for(let n=0;n<e.length;n++)s[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let r=0;for(let n=0;n<t.rank;n++)n!==e&&(s[r++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=da(t,i,a).reshape(s);return o}reverse(t,e){Zm(t,"reverse");const n=Ss(t.shape,t.dtype),s=this.bufferSync(t);for(let r=0;r<n.size;r++){const i=n.indexToLoc(r),a=i.slice();e.forEach((e=>a[e]=t.shape[e]-1-a[e])),n.set(s.get(...a),...i)}return n.toTensor()}neg(t){return Zm(t,"neg"),Ri(ur(-1),t)}addN(t){Zm(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=Ss(t[0].shape,t[0].dtype),s=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=_e([e],t.shape),s=Di(t,n),r=mr(s.shape,n),i=Fi(t,s.reshape(r)),a=pi(i),o=this.sum(a,n).reshape(r);return oi(a,o)}pow(t,e){return Zm([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}batchMatMul(t,e,n,s){Zm([t,e],"matMul");const r=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],a=s?e.shape[1]:e.shape[2],o=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[c,h,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,g]=s?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=i*a,y=Ss([o,i,a],t.dtype),b=y.values,x=this.blockSize;for(let t=0;t<o;t++)for(let e=0;e<i;e+=x)for(let n=0;n<a;n+=x)for(let s=0;s<r;s+=x){const o=Math.min(e+x,i),y=Math.min(n+x,a),w=Math.min(s+x,r);for(let r=e;r<o;r++)for(let e=n;e<y;e++){let n=0;for(let i=s;i<w;i++)n+=l[t*c+r*h+i*d]*u[i*p+e*f+t*g];b[t*m+(r*a+e)]+=n}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){let o=this.batchMatMul(t,e,n,s);return r&&(o=dr(o,r)),i&&(o=ry(this,o,i,a)),o}floorDiv(t,e){return Zm([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){Zm(t,"sum"),yr("sum",e,t.rank);const[n,s]=gr(t.shape,e),r=Bi(n,Sn(t.dtype,"int32")),i=Ee(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=0;for(let t=0;t<i;++t)n+=o[e+t];a[t]=n}return r}prod(t,e){Zm(t,"sum");const[n,s]=gr(t.shape,e),r=Bi(n,Sn(t.dtype,"int32")),i=Ee(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=1;for(let t=0;t<i;++t)n*=o[e+t];a[t]=n}return r}unsortedSegmentSum(t,e,n){Zm(t,"unsortedSegmentSum");const s=[],r=t.rank-e.rank;for(let t=0;t<r;++t)e=e.expandDims(t+1);for(let r=0;r<n;++r){const n=ur(r,"int32"),i=di(n,e).asType("float32").mul(t).sum(0);s.push(i)}return Ia(s)}argMin(t,e){Zm(t,"argMin");const n=[e];yr("argMin",n,t.rank);const[s,r]=gr(t.shape,n),i=Bi(s,"int32"),a=Ee(r),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],s=0;for(let t=0;t<a;++t){const r=l[e+t];r<n&&(n=r,s=t)}o[t]=s}return i}argMax(t,e){Zm(t,"argMax");const n=[e];yr("argMax",n,t.rank);const[s,r]=gr(t.shape,n),i=Bi(s,"int32"),a=Ee(r),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*a;let n=l[e],s=0;for(let t=0;t<a;++t){const r=l[e+t];r>n&&(n=r,s=t)}o[t]=s}return i}cumsum(t,e,n,s){if(Zm(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const r=Sn(t.dtype,"int32"),i=Bi(t.shape,r),a=this.readSync(i.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=s?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=l)for(let e=0;e<l;e++){const s=u(t,e);if(0===e)a[s]=n?0:o[s];else{const r=u(t,e-1);a[s]=n?o[r]+a[r]:o[s]+a[r]}}return i}equal(t,e){return Zm([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return Zm([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return Zm([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return Zm([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return Zm([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return Zm([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return Zm([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return Zm([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){Zm([t,e,n],"select");const s=this.readSync(t.dataId),r=this.readSync(e.dataId),i=this.readSync(n.dataId),a=Bi(e.shape,Sn(e.dtype,n.dtype)),o=this.readSync(a.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:Ee(e.shape.slice(1));for(let t=0;t<s.length;t++)for(let e=0;e<u;e++)1===s[t]?o[l++]=r[t]:o[l++]=i[t];return a}where(t){Zm([t],"where");const e=this.readSync(t.dataId);return sy(t.shape,e)}topk(t,e,n){Zm(t,"topk");const s=this.readSync(t.dataId);return ny(s,t.shape,t.dtype,e,n)}min(t,e){Zm(t,"min"),yr("min",e,t.rank);const[n,s]=gr(t.shape,e),r=Bi(n,t.dtype),i=Ee(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];s<n&&(n=s)}a[t]=n}return r}minimum(t,e){return Zm([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return Zm([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return Zm([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){Zm(t,"all"),yr("all",e,t.rank);const[n,s]=gr(t.shape,e),r=Bi(n,t.dtype),i=Ee(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];n=n&&s}a[t]=n}return r}any(t,e){Zm(t,"any"),yr("any",e,t.rank);const[n,s]=gr(t.shape,e),r=Bi(n,t.dtype),i=Ee(s),a=this.readSync(r.dataId),o=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const e=t*i;let n=o[e];for(let t=0;t<i;++t){const s=o[e+t];n=n||s}a[t]=n}return r}squaredDifference(t,e){return Zm([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}linear(t){return t}relu(t){Zm(t,"relu");const e=Bi(t.shape,t.dtype),n=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t)n[t]=Math.max(0,s[t]);return e}relu6(t){Zm(t,"relu");const e=Bi(t.shape,t.dtype),n=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t)n[t]=Math.min(Math.max(0,s[t]),6);return e}prelu(t,e){return Zm([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>t<0?e*t:t))}eluDer(t,e){Zm([t,e],"eluDer");const n=new Float32Array(e.size),s=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const e=s[t];n[t]=e>=1?r[t]:r[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return Zm([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){let a=this.conv2d(t,e,n);return s&&(a=dr(a,s)),r&&(a=ry(this,a,r,i)),a}conv2d(t,e,n){Zm([t,e],"conv2d");const s=n.filterHeight,r=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,c=Ss(n.outShape,t.dtype),h=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],g=c.strides[0],m=u?c.strides[1]:c.strides[2],y=u?c.strides[2]:1,b=u?1:c.strides[1],x=this.readSync(t.dataId),w=this.readSync(e.dataId),v=c.values;for(let t=0;t<n.batchSize;++t){const u=t*h,c=t*g;for(let t=0;t<n.outHeight;++t){const h=c+t*m,g=t*n.strideHeight-l;for(let t=0;t<s;t++){const s=g+t*i;if(s<0||s>=n.inHeight)continue;const l=t*e.strides[0],c=u+s*d;for(let t=0;t<n.outWidth;++t){const s=h+t*y,i=t*n.strideWidth-o;for(let t=0;t<r;t++){const r=i+t*a;if(r<0||r>=n.inWidth)continue;const o=c+r*p;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[o+t*f];for(let t=0;t<n.outChannels;++t)v[s+t*b]+=e*w[u+t];u+=n.outChannels}}}}}}return c.toTensor()}conv3d(t,e,n){const s=n.filterDepth,r=n.filterHeight,i=n.filterWidth,a=n.dilationDepth,o=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=Ss(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),g=d.values;for(let m=0;m<n.batchSize;++m){const y=m*t.strides[0],b=m*d.strides[0];for(let m=0;m<n.outDepth;++m){const x=b+m*d.strides[1],w=m*n.strideDepth-u;for(let u=0;u<s;u++){const s=w+u*a;if(s<0||s>=n.inDepth)continue;const m=u*e.strides[0],b=y+s*t.strides[1];for(let s=0;s<n.outHeight;++s){const a=x+s*d.strides[2],u=s*n.strideHeight-h;for(let s=0;s<r;s++){const r=u+s*o;if(r<0||r>=n.inHeight)continue;const h=m+s*e.strides[1],d=b+r*t.strides[2];for(let t=0;t<n.outWidth;++t){const s=a+t*n.outChannels,r=t*n.strideWidth-c;for(let t=0;t<i;t++){const i=r+t*l;if(i<0||i>=n.inWidth)continue;const a=h+t*e.strides[2],o=d+i*n.inChannels;let u=a;for(let t=0;t<n.inChannels;++t){const e=p[o+t];for(let t=0;t<n.outChannels;++t)g[s+t]+=e*f[u+t];u+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){Zm([t,e],"conv2dDerInput");const s=Ss(n.inShape,"float32"),r=s.values,i=this.readSync(t.dataId),a=this.readSync(e.dataId),[o,l,u]=e.strides,{batchSize:c,filterHeight:h,filterWidth:d,inChannels:p,inHeight:f,inWidth:g,outChannels:m,outHeight:y,outWidth:b,strideHeight:x,strideWidth:w,dataFormat:v}=n,k=h-1-n.padInfo.top,I=d-1-n.padInfo.left,C="channelsLast"===v,$=s.strides[0],S=C?s.strides[1]:s.strides[2],E=C?s.strides[2]:1,N=C?1:s.strides[1],R=t.strides[0],A=C?t.strides[1]:t.strides[2],T=C?t.strides[2]:1,D=C?1:t.strides[1];for(let t=0;t<c;++t)for(let e=0;e<p;++e)for(let n=0;n<f;++n){const s=n-k,c=Math.max(0,Math.ceil(s/x)),p=Math.min(y,(h+s)/x);for(let f=0;f<g;++f){const g=f-I,y=Math.max(0,Math.ceil(g/w)),v=Math.min(b,(d+g)/w);let k=0;for(let n=c;n<p;++n){const r=n*x-s;for(let s=y;s<v;++s){const c=R*t+A*n+T*s,p=o*(h-1-r)+l*(d-1-(s*w-g))+u*e;for(let t=0;t<m;++t)k+=i[c+D*t]*a[p+t]}}r[$*t+S*n+E*f+N*e]=k}}return s.toTensor()}conv3dDerInput(t,e,n){const s=Ss(n.inShape,"float32"),r=s.values,[i,a,o,l]=s.strides,u=this.readSync(t.dataId),[c,h,d,p]=t.strides,f=this.readSync(e.dataId),[g,m,y,b]=e.strides,{batchSize:x,filterDepth:w,filterHeight:v,filterWidth:k,inChannels:I,inDepth:C,inHeight:$,inWidth:S,outChannels:E,outDepth:N,outHeight:R,outWidth:A,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=w-1-n.padInfo.front,O=v-1-n.padInfo.top,M=k-1-n.padInfo.left;for(let t=0;t<x;++t)for(let e=0;e<I;++e)for(let n=0;n<C;++n){const s=n-_,x=Math.max(0,Math.ceil(s/T)),I=Math.min(N,(w+s)/T);for(let C=0;C<$;++C){const $=C-O,N=Math.max(0,Math.ceil($/D)),_=Math.min(R,(v+$)/D);for(let R=0;R<S;++R){const S=R-M,O=Math.max(0,Math.ceil(S/F)),L=Math.min(A,(k+S)/F);let z=0;for(let n=x;n<I;++n){const r=n*T-s;for(let s=N;s<_;++s){const i=s*D-$;for(let a=O;a<L;++a){const o=c*t+h*n+d*s+p*a,l=g*(w-1-r)+m*(v-1-i)+y*(k-1-(a*F-S))+b*e;for(let t=0;t<E;++t)z+=u[o+t]*f[l+t]}}}r[i*t+a*n+o*C+l*R+e]=z}}}return s.toTensor()}conv2dDerFilter(t,e,n){Zm([t,e],"conv2dDerFilter");const s=n.strideHeight,r=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o="channelsLast"===n.dataFormat,l=Ss(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((c-t)/s)),i=Math.min(n.outHeight,(n.inHeight+c-t)/s);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((u-p)/r)),f=Math.min(n.outWidth,(n.inWidth+u-p)/r);for(let g=0;g<n.inChannels;++g)for(let m=0;m<n.outChannels;++m){let y=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<i;++n){const e=t+n*s-c;for(let t=a;t<f;++t){const s=p+t*r-u;y+=o?h.get(l,e,s,g)*d.get(l,n,t,m):h.get(l,g,e,s)*d.get(l,m,n,t)}}l.set(y,t,p,g,m)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const s=n.strideDepth,r=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=Ss(n.filterShape,"float32"),c=u.values,[h,d,p,f]=u.strides,g=this.readSync(e.dataId),[m,y,b,x]=e.strides,w=this.readSync(t.dataId),[v,k,I,C]=t.strides,$=n.padInfo.front,S=n.padInfo.left,E=n.padInfo.top;for(let t=0;t<a;++t){const e=Math.max(0,Math.ceil(($-t)/s)),a=Math.min(n.outDepth,(n.inDepth+$-t)/s),u=t*h;for(let h=0;h<o;++h){const o=Math.max(0,Math.ceil((E-h)/r)),N=Math.min(n.outHeight,(n.inHeight+E-h)/r),R=h*d+u;for(let u=0;u<l;++u){const l=Math.max(0,Math.ceil((S-u)/i)),d=Math.min(n.outWidth,(n.inWidth+S-u)/i),A=u*p+R;for(let p=0;p<n.inChannels;++p){const R=p*f+A;for(let f=0;f<n.outChannels;++f){let A=0;for(let c=0;c<n.batchSize;++c){const n=c*v,R=c*m;for(let c=e;c<a;++c){const e=(t+c*s-$)*k+n,a=c*y+R;for(let t=o;t<N;++t){const n=(h+t*r-E)*I+e,s=t*b+a;for(let t=l;t<d;++t){const e=t*x+s;A+=w[(u+t*i-S)*C+n+p]*g[e+f]}}}}c[R+f]=A}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){let a=this.depthwiseConv2D(t,e,n);return s&&(a=dr(a,s)),r&&(a=ry(this,a,r,i)),a}depthwiseConv2D(t,e,n){Zm([t,e],"depthwiseConv2D");const s=n.filterHeight,r=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,c=Ss(n.outShape,t.dtype),h=this.readSync(t.dataId),d=this.readSync(e.dataId),p=c.values;for(let f=0;f<n.batchSize;++f){const g=f*t.strides[0],m=f*c.strides[0];for(let f=0;f<n.outHeight;++f){const y=m+f*c.strides[1],b=f*n.strideHeight-o;for(let o=0;o<s;++o){const s=b+o*i;if(s<0||s>=n.inHeight)continue;const f=o*e.strides[0],m=g+s*t.strides[1];for(let t=0;t<n.outWidth;++t){const s=y+t*c.strides[2],i=t*n.strideWidth-l;for(let t=0;t<r;++t){const r=i+t*a;if(r<0||r>=n.inWidth)continue;const o=f+t*e.strides[1],l=m+r*n.inChannels;let c=s,g=o;for(let t=0;t<n.inChannels;++t){const e=h[l+t];for(let t=0;t<u;++t)p[c+t]+=e*d[g+t];c+=u,g+=u}}}}}}return c.toTensor()}depthwiseConv2DDerInput(t,e,n){Zm([t,e],"depthwiseConv2DDerInput");const s=Ss(n.inShape,"float32"),r=s.values,[i,a,o]=s.strides,l=this.readSync(t.dataId),[u,c,h]=t.strides,d=this.readSync(e.dataId),[p,f,g]=e.strides,{batchSize:m,filterHeight:y,filterWidth:b,inChannels:x,inHeight:w,inWidth:v,outChannels:k,outHeight:I,outWidth:C,strideHeight:$,strideWidth:S}=n,E=y-1-n.padInfo.top,N=b-1-n.padInfo.left,R=k/x;for(let t=0;t<m;++t)for(let e=0;e<x;++e)for(let n=0;n<w;++n){const s=n-E,m=Math.max(0,Math.ceil(s/$)),x=Math.min(I,(y+s)/$);for(let w=0;w<v;++w){const v=w-N,k=Math.max(0,Math.ceil(v/S)),I=Math.min(C,(b+v)/S);let E=0;for(let n=m;n<x;++n){const r=n*$-s;for(let s=k;s<I;++s){const i=u*t+c*n+h*s,a=p*(y-1-r)+f*(b-1-(s*S-v))+g*e;for(let t=0;t<R;++t)E+=l[i+(e*R+t)]*d[a+t]}}r[i*t+a*n+o*w+e]=E}}return s.toTensor()}depthwiseConv2DDerFilter(t,e,n){Zm([t,e],"depthwiseConv2DDerFilter");const s=n.strideHeight,r=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=Ss(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),d=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((u-t)/s)),i=Math.min(n.outHeight,(n.inHeight+u-t)/s);for(let p=0;p<a;++p){const a=Math.max(0,Math.ceil((l-p)/r)),f=Math.min(n.outWidth,(n.inWidth+l-p)/r);for(let g=0;g<n.outChannels;++g){const m=Math.trunc(g/c),y=g%c;let b=0;for(let o=0;o<n.batchSize;++o)for(let n=e;n<i;++n){const e=t+n*s-u;for(let t=a;t<f;++t){const s=p+t*r-l;b+=h.get(o,e,s,m)*d.get(o,n,t,g)}}o.set(b,t,p,m,y)}}}return o.toTensor()}tile(t,e){return Zm(t,"tile"),ey(this.bufferSync(t),e)}gather(t,e,n){Zm([t,e],"gather");const s=t.shape.slice(),r=this.readSync(e.dataId);s[n]=r.length;const i=Ss(s,t.dtype),a=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),s=e.slice();s[n]=r[e[n]];const o=a.locToIndex(s);i.values[t]=a.values[o]}return i.toTensor()}batchToSpaceND(t,e,n){Zm([t],"batchToSpaceND");const s=e.reduce(((t,e)=>t*e)),r=_o(t.shape,e,s),i=Oo(r.length,e.length),a=Mo(t.shape,e,s),o=Lo(n,e.length),l=zo(a,n,e.length);return kr(t.reshape(r),i).reshape(a).slice(o,l)}pool3d(t,e,n){Zm(t,"pool3d");const s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),y=Ss(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],k=e.outShape[4];for(let y=0;y<e.batchSize;++y){const I=y*x,C=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const $=x*s-d;let S=$;for(;S<0;)S+=a;const E=Math.min(e.inDepth,u+$),N=I+x*w;for(let s=0;s<e.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const x=Math.min(e.inHeight,c+u),w=N+s*v;for(let s=0;s<e.outWidth;++s){const r=s*i-f;let u=r;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+r),p=w+s*k;let v=g,I=0,$=0;for(let e=S;e<E;e+=a){const s=C+e*t.strides[1];for(let e=d;e<x;e+=o){const r=s+e*t.strides[2];for(let e=u;e<c;e+=l){const s=m[r+e*t.strides[3]+y];if("max"===n&&s>v?v=s:"avg"===n&&(I+=s,$++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[p+y]="avg"===n?I/$:v}}}}return y.toTensor()}avgPool3d(t,e){return Zm(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Zm([t,e],"avgPool3dBackprop");const s=n.strideDepth,r=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,g=d-1-n.padInfo.front,m=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=Ss(e.shape,"float32"),x=1/(a*o*l),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let a=0;a<n.inDepth;++a)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const v=a-g,k=o-y,I=l-m;let C=0;for(let a=0;a<d;a+=u){const o=(v+a)/s;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let s=0;s<p;s+=c){const a=(k+s)/r;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let s=0;s<f;s+=h){const r=(I+s)/i;r<0||r>=n.outWidth||Math.floor(r)!==r||(C+=w.get(t,o,a,r,e))}}}b.set(C*x,t,a,o,l,e)}return b.toTensor()}maxPool3d(t,e){return Zm(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Ss(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=a;const w=Math.min(e.inDepth,u+b);for(let s=0;s<e.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,c+u);for(let r=0;r<e.outWidth;++r){const p=r*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,$=-1;for(let e=x;e<w;e+=a){const n=e-b;for(let s=d;s<v;s+=o){const r=s-u;for(let i=k;i<I;i+=l){const a=i-p,o=g.get(t,e,s,i,m);o>=C&&(C=o,$=n*c*h+r*c+a)}}}n.set($,t,y,s,r,m)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,s){Zm([e,n],"maxPool3dBackprop");const r=this.maxPool3dPositions(e,s),i=s.strideDepth,a=s.strideHeight,o=s.strideWidth,l=s.dilationDepth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterDepth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=h-1-s.padInfo.front,g=p-1-s.padInfo.left,m=d-1-s.padInfo.top,y=Ss(e.shape,"float32"),b=this.bufferSync(r),x=this.bufferSync(t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.inDepth;++n)for(let r=0;r<s.inHeight;++r)for(let w=0;w<s.inWidth;++w){const v=n-f,k=r-m,I=w-g;let C=0;for(let n=0;n<h;n+=l){const r=(v+n)/i;if(!(r<0||r>=s.outDepth||Math.floor(r)!==r))for(let i=0;i<d;i+=u){const l=(k+i)/a;if(!(l<0||l>=s.outHeight||Math.floor(l)!==l))for(let a=0;a<p;a+=c){const u=(I+a)/o;if(u<0||u>=s.outWidth||Math.floor(u)!==u)continue;const c=h*d*p-1-b.get(t,r,l,u,e)===n*d*p+i*p+a?1:0;0!==c&&(C+=x.get(t,r,l,u,e)*c)}}}y.set(C,t,n,r,w,e)}return y.toTensor()}resizeBilinear(t,e,n,s){Zm(t,"resizeBilinear");const[r,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(Ee([r,e,n,o])),c=[s&&e>1?i-1:i,s&&n>1?a-1:a],h=[s&&e>1?e-1:e,s&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let s=0;s<r;s++)for(let r=0;r<e;r++){const e=p*r,c=Math.floor(e),h=e-c,g=Math.min(i-1,Math.ceil(e)),m=s*t.strides[0]+c*t.strides[1],y=s*t.strides[0]+g*t.strides[1];for(let e=0;e<n;e++){const n=f*e,s=Math.floor(n),r=n-s,i=Math.min(a-1,Math.ceil(n)),c=m+s*t.strides[2],p=y+s*t.strides[2],g=m+i*t.strides[2],b=y+i*t.strides[2];for(let t=0;t<o;t++){const e=l[c+t],n=l[p+t],s=e+(l[g+t]-e)*r,i=s+(n+(l[b+t]-n)*r-s)*h;u[d++]=i}}}return qn(u,[r,e,n,o])}resizeBilinearBackprop(t,e,n){Zm([t,e],"resizeBilinearBackprop");const[s,r,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(s*r*i*a),c=[n&&o>1?r-1:r,n&&l>1?i-1:i],h=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let g=0;for(let t=0;t<s;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const s=t*d,o=Math.floor(s),c=Math.min(Math.ceil(s),r-1),h=n+o*e.strides[1],m=n+c*e.strides[1],y=s-o,b=1-y;for(let t=0;t<l;t++){const n=t*p,s=Math.floor(n),r=Math.min(Math.ceil(n),i-1),o=n-s,l=1-o,c=h+s*e.strides[2],d=h+r*e.strides[2],x=m+s*e.strides[2],w=m+r*e.strides[2],v=b*l,k=b*o,I=y*l,C=y*o;for(let t=0;t<a;t++){const e=f[g++];u[c+t]+=e*v,u[d+t]+=e*k,u[x+t]+=e*I,u[w+t]+=e*C}}}}return Sa(u,[s,i,r,a],e.dtype)}resizeNearestNeighbor(t,e,n,s){Zm(t,"resizeNearestNeighbor");const[r,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(r*e*n*o),c=[s&&e>1?i-1:i,s&&n>1?a-1:a],h=[s&&e>1?e-1:e,s&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let c=0;c<r;c++){const r=c*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=r+Math.min(i-1,s?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=p*e,r=h+Math.min(a-1,s?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=l[r+t];u[f++]=e}}}}return qn(u,[r,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Zm([t,e],"resizeNearestNeighborBackprop");const[s,r,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(s*r*i*a),c=this.readSync(t.dataId),h=[n&&o>1?r-1:r,n&&l>1?i-1:i],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],g=1/p,m=1/f,y=2*Math.ceil(g)+2,b=2*Math.ceil(m)+2;for(let h=0;h<s;h++){const s=h*e.strides[0];for(let h=0;h<r;h++){const d=s+h*e.strides[1],x=Math.floor(h*g),w=Math.floor(x-y/2);for(let g=0;g<i;g++){const x=d+g*e.strides[2],v=Math.floor(g*m),k=Math.floor(v-b/2);for(let e=0;e<a;e++){let a=0;for(let u=0;u<y;u++){const d=u+w;if(d<0||d>=o)continue;const m=s+d*t.strides[1],y=d*p;if(h===Math.min(r-1,n?Math.round(y):Math.floor(y)))for(let s=0;s<b;s++){const r=s+k;if(r<0||r>=l)continue;const o=m+r*t.strides[2],u=r*f;g===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(a+=c[o+e])}}u[x+e]=a}}}}return Sa(u,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,s,r){Zm(t,"localResponseNormalization4D");const i=t.shape[3],a=i-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%i;let s=t-n+Math.max(0,n-e);const r=t-n+Math.min(n+e,a);let l=0;for(;s<=r;s++){const t=o[s];l+=t*t}return l}for(let t=0;t<l;t++){const e=c(t),i=o[t]*Math.pow(n+s*e,-r);u[t]=i}return Sa(u,t.shape)}LRNGrad(t,e,n,s,r,i,a){Zm(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let t=0;t<d;t++){const e=t%o,n=t-e+Math.max(0,e-s),d=t-e+Math.min(o,e+s+1);let p=0;for(let t=n;t<d;t++)p+=Math.pow(u[t],2);p=i*p+r;for(let e=n;e<d;e++){let n=-2*i*a*u[e]*c[t]/p;t===e&&(n+=Math.pow(p,-a)),n*=l[t],h[e]+=n}}return Sa(h,t.shape)}multinomial(t,e,n,s){Zm(t,"multinomial");const r=e?t:ya(t),i=r.shape[0],a=r.shape[1],o=Bi([i,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(r.dataId);for(let t=0;t<i;++t){const e=t*a,r=new Float32Array(a-1);r[0]=u[e];for(let t=1;t<r.length;++t)r[t]=r[t-1]+u[e+t];const i=ta.alea(s.toString()),o=t*n;for(let t=0;t<n;++t){const e=i();l[o+t]=r.length;for(let n=0;n<r.length;n++)if(e<r[n]){l[o+t]=n;break}}}return o}oneHot(t,e,n,s){Zm(t,"oneHot");const r=new Float32Array(t.size*e);r.fill(s);const i=this.readSync(t.dataId);for(let s=0;s<t.size;++s)i[s]>=0&&i[s]<e&&(r[s*e+i[s]]=n);return $a(r,[t.size,e],"int32")}nonMaxSuppression(t,e,n,s,r){Zm(t,"nonMaxSuppression");const i=this.readSync(t.dataId),a=this.readSync(e.dataId);return Qm(i,a,n,s,r)}depthToSpace(t,e,n){Ie("NHWC"===n,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n)),Ie(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const s=t.shape[0],r=t.shape[1],i=t.shape[2],a=t.shape[3],o=r*e,l=i*e,u=a/(e*e),c=this.readSync(t.dataId),h=new Float32Array(s*o*l*u);let d=0;for(let t=0;t<s;++t)for(let n=0;n<o;++n){const s=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const l=Math.floor(n/e),p=(o*e+n%e)*u;for(let e=0;e<u;++e){const n=e+p+a*(l+i*(s+r*t));h[d++]=c[n]}}}return Sa(h,[s,o,l,u])}broadcastedBinaryOp(t,e,n,s){const r=hi(t.shape,e.shape),i=Ss(r,n),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=ui(t.shape,r),u=ui(e.shape,r),c=i.values;if(l.length+u.length===0)for(let t=0;t<c.length;++t)c[t]=s(a[t%a.length],o[t%o.length]);else{const n=this.bufferSync(t),r=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=i.indexToLoc(h),p=d.slice(-t.rank);l.forEach((t=>p[t]=0));const f=n.locToIndex(p),g=d.slice(-e.rank);u.forEach((t=>g[t]=0));const m=r.locToIndex(g);c[h]=s(a[f],o[m])}}return i.toTensor()}split(t,e,n){return ty(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,s,r,i){const[a,o,l,u]=t.shape,c=e.shape[0],[h,d]=s,p=Ss([c,h,d,u],"float32"),f=this.readSync(e.dataId),g=this.readSync(n.dataId),m=this.readSync(t.dataId),y=t.strides,b=p.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],s=f[e+1],c=f[e+2],x=f[e+3],w=g[t];if(w>=a)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,k=d>1?(x-s)*(l-1)/(d-1):0;for(let e=0;e<h;e++){const a=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(a<0||a>o-1)for(let n=0;n<d;n++)for(let s=0;s<u;s++){const r=s+n*b[2]+e*b[1]+t*b[0];p.values[r]=i}else if("bilinear"===r){const n=Math.floor(a),r=Math.ceil(a),o=a-n;for(let a=0;a<d;a++){const c=d>1?s*(l-1)+a*k:.5*(s+x)*(l-1);if(c<0||c>l-1){for(let n=0;n<u;n++){const s=n+a*b[2]+e*b[1]+t*b[0];p.values[s]=i}continue}const h=Math.floor(c),f=Math.ceil(c),g=c-h;for(let s=0;s<u;s++){let i=s+h*y[2]+n*y[1]+w*y[0];const l=m[i];i=s+f*y[2]+n*y[1]+w*y[0];const u=m[i];i=s+h*y[2]+r*y[1]+w*y[0];const c=m[i];i=s+f*y[2]+r*y[1]+w*y[0];const d=l+(u-l)*g,x=c+(m[i]-c)*g;i=s+a*b[2]+e*b[1]+t*b[0],p.values[i]=d+(x-d)*o}}}else for(let n=0;n<d;++n){const r=d>1?s*(l-1)+n*k:.5*(s+x)*(l-1);if(r<0||r>l-1){for(let s=0;s<u;s++){const r=s+n*b[2]+e*b[1]+t*b[0];p.values[r]=i}continue}const o=Math.round(r),c=Math.round(a);for(let s=0;s<u;s++){const r=s+o*y[2]+c*y[1]+w*y[0],i=s+n*b[2]+e*b[1]+t*b[0];p.values[i]=m[r]}}}}return p.toTensor()}sparseToDense(t,e,n,s){const{sliceRank:r,numUpdates:i,sliceSize:a,strides:o,outputSize:l}=Uo(0,t,n);return this.scatter(t,e,n,l,a,i,r,o,s,!1)}gatherND(t,e){const n=e.shape,s=n[n.length-1],[r,i,a,o]=Bo(t,e);if(0===i)return qn([],r,t.dtype);const l=new fn([i,a],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let r=0;for(let t=0;t<s;t++){const i=u[e*s+t];r+=i*o[t],n.push(i)}if(r<0||r>=t.size/a)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<a;t++)l.values[e*a+t]=c[r*a+t]}return l.toTensor().reshape(r)}scatterND(t,e,n){const{sliceRank:s,numUpdates:r,sliceSize:i,strides:a,outputSize:o}=Uo(0,t,n),l=ur(0);return this.scatter(t,e,n,o,i,r,s,a,l,!0)}fill(t,e,n){const s=Le(n=n||Ve(e),Ee(t));return s.fill(e),nr().makeTensor(s,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=Le(t.dtype,Ee(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return ul(t,e,n)}scatter(t,e,n,s,r,i,a,o,l,u){const c=[s/r,r],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===s)return qn([],n,e.dtype);const p=new fn(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=h[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[t*r+n]:p.values[l*r+n]=0===e.rank?d[0]:d[t*r+n]}return p.toTensor().reshape(n)}}function ay(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}or("cpu",(()=>new iy),1);const oy={kernelName:f,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let s=new Float32Array(Ee(e.shape));if("complex64"!==e.dtype)s=ay(n.data.get(e.dataId).values);else{const t=n.data.get(e.dataId),r=t.complexTensorInfos.real,i=t.complexTensorInfos.imag,a=n.data.get(r.dataId).values,o=n.data.get(i.dataId).values;for(let t=0;t<a.length;t++){const e=a[t],n=o[t];s[t]=Math.hypot(e,n)}}return n.makeOutput(s,e.shape,"float32")}};function ly(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(Zm(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=Ee(a.shape),c=n||a.dtype,h=Le(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],r);return o.makeTensorInfo(a.shape,c,h)}}function uy(t,e,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(Zm(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=e(l,u,r);return o.makeTensorInfo(a.shape,u,c)}}const cy=ly(g,(t=>Math.acos(t))),hy={kernelName:g,backendName:"cpu",kernelFunc:cy},dy=ly(m,(t=>Math.acosh(t))),py={kernelName:m,backendName:"cpu",kernelFunc:dy};function fy(t){return(e,n,s,r,i)=>{const a=hi(e,n),o=a.length,l=je(a),u=Me(i,Ee(a)),c=e.length,h=n.length,d=je(e),p=je(n),f=ui(e,a),g=ui(n,a);if(f.length+g.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=rn(e,o,l),i=n.slice(-c);f.forEach((t=>i[t]=0));const a=sn(i,c,d),m=n.slice(-h);g.forEach((t=>m[t]=0));const y=sn(m,h,p);u[e]=t(s[a],r[y])}return[u,a]}}function gy(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const my={kernelName:_,backendName:"cpu",kernelFunc:gy};function yy(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const by={kernelName:st,backendName:"cpu",kernelFunc:yy};function xy(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const wy={kernelName:At,backendName:"cpu",kernelFunc:xy};function vy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return yy({inputs:{x:r},backend:n});const t=Bi(r.shape),e=vy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=gy({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),s}if("complex64"===r.dtype){const t=xy({inputs:{input:r},backend:n}),e=vy({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!ze(r.dtype,i)){const t=yy({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(r.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(r.shape,"int32",e)}if("bool"===i){const t=n.data.get(r.dataId).values,e=qe([0],r.dtype),[s,i]=fy(((t,e)=>t!==e?1:0))(r.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const ky={kernelName:T,backendName:"cpu",kernelFunc:vy};function Iy(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;Zm([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c=s||i.dtype,[h,d]=e(i.shape,a.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:t,backend:r})=>{const{a:i,b:a}=t,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const t=vy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=vy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,y,b]=n(i.shape,a.shape,l,u,f,g),x=o.makeTensorInfo(b,"float32",m),w=o.makeTensorInfo(b,"float32",y),v=gy({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=e(i.shape,a.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function Cy(t){return(e,n,s,r,i,a)=>{const o=hi(e,n),l=Ee(o),u=o.length,c=je(o),h=Me("float32",l),d=Me("float32",l),p=ui(e,o),f=ui(n,o),g=Qo(s,r),m=Qo(i,a),y=e.length,b=je(e),x=n.length,w=je(n);if(p.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%g.length,s=e%m.length,r=t(g[2*n],g[2*n+1],m[2*s],m[2*s+1]);h[e]=r.real,d[e]=r.imag}else for(let e=0;e<h.length;e++){const n=rn(e,u,c),s=n.slice(-y);p.forEach((t=>s[t]=0));const r=sn(s,y,b),i=n.slice(-x);f.forEach((t=>i[t]=0));const a=sn(i,x,w),o=t(g[2*r],g[2*r+1],m[2*a],m[2*a+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const $y=fy(((t,e)=>t+e)),Sy=Cy(((t,e,n,s)=>({real:t+n,imag:e+s}))),Ey=Iy(y,$y,Sy),Ny={kernelName:y,backendName:"cpu",kernelFunc:Ey},Ry=ly(w,(t=>Math.asin(t))),Ay={kernelName:w,backendName:"cpu",kernelFunc:Ry},Ty=ly(v,(t=>Math.asinh(t))),Dy={kernelName:v,backendName:"cpu",kernelFunc:Ty},Fy=ly(k,(t=>Math.atan(t))),_y={kernelName:k,backendName:"cpu",kernelFunc:Fy},Oy=ly(I,(t=>Math.atanh(t))),My={kernelName:I,backendName:"cpu",kernelFunc:Oy};function Ly(t,e,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ss(r.outShape,n),m=g.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*y,g=e*s[0];for(let e=0;e<r.inChannels;++e)for(let y=0;y<r.outHeight;++y){const w=y*a-d,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(r.inWidth,h+a);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const r=g+n*s[1];for(let n=c;n<d;n+=u){const a=t[r+n*s[2]+e];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,w++)}if(isNaN(y))break}m[I+n*x+e]="avg"===i?b/w:y}}}return g}function zy(t,e,n,s,r=!1,i=!1){const a=Ss(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=Ss(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const m=n*o-p;let y=m;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+m);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(s.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const a=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(t,n,o,e);u>w&&(w=u,v=r?i?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}const By={kernelName:$,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Zm(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;Ie(Lr(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Er(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Ne(u.inShape,u.outShape))c=yy({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=je(r.shape),s=Ly(t,r.shape,r.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Py={kernelName:S,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;Zm([r,i],"avgPoolBackprop");const{filterSize:o,strides:l,pad:u}=s,c=Er(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Ss(a.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,C=Ss(r.shape,"float32",I);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,i=s-x;let a=0;for(let n=0;n<y;n+=g){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=m){const r=(i+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=C.get(t,s,r,e))}}v.set(a*k,t,n,s,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Wy={kernelName:tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:i,offset:a,mean:o,variance:l}=e;Ie(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ie(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ie(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Zm([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let t=0;t<c.length;++t)g[t]=f[w++]+(c[t]-h[v++])*p[k++]/Math.sqrt(d[I++]+u),w>=m&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function Uy(t){return(e,n,s)=>{const r=Me(n,e.length);for(let n=0;n<e.length;++n)r[n]=t(e[n],s);return r}}const Vy=Uy((t=>Math.ceil(t))),Gy=uy(D,Vy),Hy={kernelName:D,backendName:"cpu",kernelFunc:Gy},jy=ly(F,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),qy={kernelName:F,backendName:"cpu",kernelFunc:jy};function Ky(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Xy={kernelName:it,backendName:"cpu",kernelFunc:Ky};function Yy(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=Ee(r.shape),o=Fe(i,a),l=Ee(o);Ie(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const Jy={kernelName:Ft,backendName:"cpu",kernelFunc:Yy};function Zy(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,i=_e(r,e[0].shape)[0];let a=Kr(e.map((t=>t.shape)),i);if(0===Ee(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>Ee(t.shape)>0));if(1===o.length)return o[0];if(qr(o.map((t=>t.shape)),i),"complex64"===o[0].dtype){const t=o.map((t=>xy({inputs:{input:t},backend:n}))),e=o.map((t=>Ky({inputs:{input:t},backend:n}))),s=Zy({inputs:t,backend:n,attrs:{axis:r}}),i=Zy({inputs:e,backend:n,attrs:{axis:r}}),a=gy({inputs:{real:s,imag:i},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}const l=o.map((t=>{const e=Ee(t.shape.slice(i));return Yy({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));a=Kr(l.map((t=>t.shape)),1);const u=Me(o[0].dtype,Ee(a));if(1===l[0].shape[0]){let t=0;l.forEach((e=>{const s=n.data.get(e.dataId).values,r=Ee(e.shape);u.set(s,t),t+=r}))}else{let t=0;l.forEach((e=>{const s=n.data.get(e.dataId).values;let r=0;for(let n=0;n<e.shape[0];++n){const i=n*a[1]+t;for(let t=0;t<e.shape[1];++t)u[i+t]=s[r++]}t+=e.shape[1]}))}const c=Kr(o.map((t=>t.shape)),i),h=n.makeTensorInfo(c,e[0].dtype,u);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const Qy={kernelName:O,backendName:"cpu",kernelFunc:Zy},tb=ly(B,(t=>Math.cos(t))),eb={kernelName:B,backendName:"cpu",kernelFunc:tb},nb=ly(P,(t=>Math.cosh(t))),sb={kernelName:P,backendName:"cpu",kernelFunc:nb},rb={kernelName:V,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:$,outShape:S}=Sr(s.shape,r.shape,i,a,"NHWC",o),E=Ee(S),N=S.length,R=Le(s.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let i=0;i<b;++i){const a=i*v-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const i=n+e*C;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=a+n*$;if(p>=0&&p<g){const a=sn([t,i,p,o],c,je(s.shape)),f=sn([e,n,o],d,je(r.shape)),g=u[a]+h[f];g>l&&(l=g)}}}R[sn([t,e,i,o],N,je(S))]=l}}}return{dataId:l.write(qe(R,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}},ib={kernelName:H,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Xe(s.shape,u.data.get(s.dataId).values),h=Xe(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:$}=Sr(s.shape,r.shape,a,o,"NHWC",l);Ie(i.rank===$.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${$.length}, but got `+i.rank));const S=Xe($,u.data.get(i.dataId).values),E=Ze(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<v;++e){const s=n+e*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*C;if(u>=0&&u<f){const r=c[t][s][u][i]+h[e][n][i];r>a&&(a=r,o=e,l=n)}}}E[o][l][i]+=S[t][e][s][i]}}}return{dataId:u.write(qe(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ab={kernelName:G,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,c=Xe(s.shape,u.data.get(s.dataId).values),h=Xe(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:$}=Sr(s.shape,r.shape,a,o,"NHWC",l);Ie(i.rank===$.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${$.length}, but got `+i.rank));const S=Xe($,u.data.get(i.dataId).values),E=Ze(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<m;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<v;++e){const s=n+e*I;if(s>=0&&s<p)for(let n=0;n<k;++n){const u=r+n*C;if(u>=0&&u<f){const r=c[t][s][u][i]+h[e][n][i];r>a&&(a=r,o=s,l=u)}}}E[t][o][l][i]+=S[t][e][s][i]}}}return{dataId:u.write(qe(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ob=fy(((t,e)=>t/e)),lb=Iy(j,ob),ub={kernelName:j,backendName:"cpu",kernelFunc:lb},cb=ly(q,(t=>t>=0?t:Math.exp(t)-1)),hb={kernelName:q,backendName:"cpu",kernelFunc:cb},db=Ho,pb=jo,fb=qo,gb=Ko,mb=Xo,yb=Yo,bb=ly(K,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+db*n);return e*(1-((((yb*s+mb)*s+gb)*s+fb)*s+pb)*s*Math.exp(-n*n))})),xb={kernelName:K,backendName:"cpu",kernelFunc:bb},wb=Uy((t=>Math.exp(t))),vb=uy(X,wb),kb={kernelName:X,backendName:"cpu",kernelFunc:vb},Ib=Uy((t=>Math.expm1(t))),Cb=uy(Y,Ib),$b={kernelName:Y,backendName:"cpu",kernelFunc:Cb},Sb=fy(((t,e)=>t*e)),Eb=Cy(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),Nb=Iy(wt,Sb,Eb),Rb={kernelName:wt,backendName:"cpu",kernelFunc:Nb};function Ab(t,e,n,s,r){const i=Xs(s,e,n),a=Ee(n),o=je(s);if(i){const n=Ys(e,o);return t.subarray(n,n+a)}const l=Me(r,a);for(let r=0;r<a;++r){const i=sn(rn(r,n.length,je(n)).map(((t,n)=>t+e[n])),s.length,o);l[r]=t[i]}return l}function Tb(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:i,size:a}=s;Zm(r,"slice");const[o,l]=Js(r,i,a);Ls(r,o,l);const u=Ab(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Db={kernelName:Ut,backendName:"cpu",kernelFunc:Tb},Fb=fy(((t,e)=>t-e)),_b=Cy(((t,e,n,s)=>({real:t-n,imag:e-s}))),Ob=Iy(te,Fb,_b),Mb={kernelName:te,backendName:"cpu",kernelFunc:Ob};function Lb(t,e,n){const s=t.shape,r=s[0],i=s[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=Ee(u),h=Me("float32",c),d=Me("float32",c);for(let t=0;t<r;t++){const s=Tb({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),r=Tb({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=gy({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=zb(a,e,n),p=Qo(u,c);for(let e=0;e<i;e++){const n=sl(p,e);h[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=gy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function zb(t,e,n){const s=Ee(t.shape),r=n.data.get(t.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((l=s)&l-1)){const r=Bb(i,a,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(l,"float32",r.real),e=n.makeTensorInfo(l,"float32",r.imag),i=n.makeTensorInfo([],"float32",(o=s,"string"=="float32"?en(o):qe([o],"float32"))),a=yy({inputs:{x:i},backend:n}),u=ub.kernelFunc({inputs:{a:t,b:i},backend:n}),c=ub.kernelFunc({inputs:{a:e,b:a},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return r}return tl(function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let i=0,a=0;for(let s=0;s<e;s++){const o=al(r*s,e,n),l=sl(t,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),rl(s,i,a,r)}return s}(Qo(i,a),s,e));var o,l}function Bb(t,e,n,s,r){if(1===n)return{real:t,imag:e};const i=Qo(t,e),a=n/2,o=el(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=gy({inputs:{real:h,imag:d},backend:r}),f=nl(i),g=f.real,m=f.imag,y=[g.length],b=r.makeTensorInfo(y,"float32",g),x=r.makeTensorInfo(y,"float32",m),w=gy({inputs:{real:b,imag:x},backend:r}),v=Bb(l,u,a,s,r),k=v.real,I=v.imag,C=[k.length],$=r.makeTensorInfo(C,"float32",k),S=r.makeTensorInfo(C,"float32",I),E=gy({inputs:{real:$,imag:S},backend:r}),N=Bb(g,m,a,s,r),R=N.real,A=N.imag,T=[R.length],D=r.makeTensorInfo(T,"float32",R),F=r.makeTensorInfo(T,"float32",A),_=gy({inputs:{real:D,imag:F},backend:r}),O=il(n,s),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),B=gy({inputs:{real:L,imag:z},backend:r}),P=Nb({inputs:{a:B,b:_},backend:r}),W=Ey({inputs:{a:E,b:P},backend:r}),U=Ob({inputs:{a:E,b:P},backend:r}),V=xy({inputs:{input:W},backend:r}),G=xy({inputs:{input:U},backend:r}),H=Ky({inputs:{input:W},backend:r}),j=Ky({inputs:{input:U},backend:r}),q=Zy({inputs:[V,G],backend:r,attrs:{axis:0}}),K=Zy({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Pb={kernelName:"FFT",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=Ee(s.shape),i=s.shape[s.shape.length-1],a=Yy({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=Lb(a,!1,n),l=Yy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},Wb={kernelName:J,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,i=Me(s.dtype,Ee(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[a,t,s,o][2],d=Math.round(l-h),p=e+n+r+o;let f=c[p];d>=0&&d<l&&(f=c[e+n+d*u+o]),i[p]=f}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ub=Uy((t=>Math.floor(t))),Vb=uy(Z,Ub),Gb={kernelName:Z,backendName:"cpu",kernelFunc:Vb},Hb={kernelName:rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=Ee(s.shape),i=s.shape[s.shape.length-1],a=Yy({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=Lb(a,!0,n),l=Yy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},jb=ly(at,(t=>Number.isFinite(t)?1:0),"bool"),qb={kernelName:at,backendName:"cpu",kernelFunc:jb},Kb=ly(ot,(t=>Math.abs(t)===1/0?1:0),"bool"),Xb={kernelName:ot,backendName:"cpu",kernelFunc:Kb},Yb=ly(lt,(t=>Number.isNaN(t)?1:0),"bool"),Jb={kernelName:lt,backendName:"cpu",kernelFunc:Yb},Zb=Uy((t=>Math.log(t))),Qb=uy(ut,Zb),tx={kernelName:ut,backendName:"cpu",kernelFunc:Qb},ex=ly(ct,(t=>Math.log1p(t))),nx={kernelName:ct,backendName:"cpu",kernelFunc:ex},sx=ly(ht,(t=>t?0:1),"bool"),rx={kernelName:ht,backendName:"cpu",kernelFunc:sx};function ix(t,e,n,s){const r=Me(s,Ee(n));for(let n=0;n<r.length;++n){const s=n*e;let i=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>i&&(i=e)}r[n]=i}return r}function ax(t,e,n,s,r){const i=e.length,a=Ee(e),o=je(e),l=je(r),u=Me(n,Ee(r));for(let e=0;e<a;++e){const n=rn(e,i,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[sn(r,i,l)]=t[e]}return u}const ox={kernelName:pt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:r,keepDims:i}=e,a=n;let o=s.shape;const l=o.length,u=_e(r,o);let c=u;const h=br(c,l);let d=a.data.get(s.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=ax(d,o,s.dtype,h,t),c=wr(c.length,l),o=t}Zm(s,"max"),yr("max",c,l);const[p,f]=gr(o,c),g=ix(d,Ee(f),p,s.dtype),m=a.write(g,p,s.dtype);let y=p;return i&&(y=mr(p,u)),{dataId:m,shape:y,dtype:s.dtype}}},lx={kernelName:gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Zm(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;Ie(Lr(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Er(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Ne(u.inShape,u.outShape))c=yy({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=je(r.shape),s=Ly(t,r.shape,r.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},ux={kernelName:mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;Zm([i,a],"maxPoolBackprop");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Er(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Ss(d.outShape,o.dtype,zy(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ss(o.shape,"float32"),C=n.data.get(r.dataId).values,$=Ss(r.shape,"float32",C);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-k,i=s-v;let a=0;for(let n=0;n<x;n+=y){const s=(r+n)/g;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=b){const o=(i+r)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(t,s,o,e)===n*w+r?1:0;0!==l&&(a+=$.get(t,s,o,e)*l)}}I.set(a,t,n,s,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},cx={kernelName:bt,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Zm(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Er(s.shape,r,i,[1,1],a),[h,d]=function(t,e,n,s,r){const i=Ly(t,0,n,je(e),r,"max"),a=zy(t,e,n,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},hx=Qa,dx={kernelName:Ct,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;Zm(s,"NonMaxSuppressionPadded");const c=u.data.get(s.dataId).values,h=u.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=hx(c,h,i,a,o,l);return[d,p]}},px=to,fx={kernelName:$t,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e;Zm(s,"NonMaxSuppressionWithScore");const c=u.data.get(s.dataId).values,h=u.data.get(r.dataId).values,d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=px(c,h,d,p,f,g);return[m,y]}},gx=fy(((t,e)=>t!==e?1:0)),mx=Iy(kt,gx,null,"bool"),yx={kernelName:kt,backendName:"cpu",kernelFunc:mx},bx={kernelName:Nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:i,constantValue:a}=s;Zm(r,"pad");const o=i.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(r.dataId).values,c=Ee(r.shape),h=r.shape.length,d=je(r.shape),p=Ee(o),f=o.length,g=je(o),m=Me(r.dtype,p);0!==a&&m.fill(a);for(let t=0;t<c;t++)m[sn(rn(t,h,d).map(((t,e)=>t+l[e])),f,g)]=u[t];return{dataId:n.write(m,o,r.dtype),shape:o,dtype:r.dtype}}},xx=ly(Tt,(t=>1/t)),wx={kernelName:Tt,backendName:"cpu",kernelFunc:xx},vx={kernelName:ce,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=Me(s.dtype,Ee(s.shape)),[u,c,h,d]=s.shape,[p,f]=Fo(a,c,h),g=Math.sin(r),m=Math.cos(r),y=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,t,s,a],b=o[2],x=o[1];let w=(b-p)*m-(x-f)*g,v=(b-p)*g+(x-f)*m;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<h&&v>=0&&v<c&&(k=y[e+v*(h*d)+w*d+a]),l[e+n+r+a]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},kx=ly(zt,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),Ix={kernelName:zt,backendName:"cpu",kernelFunc:kx},Cx=Uy((t=>1/Math.sqrt(t))),$x=uy(Bt,Cx),Sx={kernelName:Bt,backendName:"cpu",kernelFunc:$x},Ex=Vo,Nx=Go,Rx=ly(Wt,(t=>t>=0?Nx*t:Ex*(Math.exp(t)-1))),Ax={kernelName:Wt,backendName:"cpu",kernelFunc:Rx},Tx=ly(jt,(t=>1/(1+Math.exp(-t)))),Dx={kernelName:jt,backendName:"cpu",kernelFunc:Tx},Fx=ly(Ht,(t=>t<0?-1:t>0?1:0)),_x={kernelName:Ht,backendName:"cpu",kernelFunc:Fx},Ox=ly(Vt,(t=>Math.sin(t))),Mx={kernelName:Vt,backendName:"cpu",kernelFunc:Ox},Lx=ly(Gt,(t=>Math.sinh(t))),zx={kernelName:Gt,backendName:"cpu",kernelFunc:Lx},Bx=Math.log(1.1920928955078125e-7)+2,Px=ly(qt,(t=>{const e=t>-Bx,n=t<Bx,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),Wx={kernelName:qt,backendName:"cpu",kernelFunc:Px};function Ux(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:i}=n;Zm(r,"transpose");const a=r.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=r.shape[i[t]];const l=ax(s.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const Vx={kernelName:re,backendName:"cpu",kernelFunc:Ux},Gx={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:i,paddings:a}=s;Zm([r],"spaceToBatchND");const o=Ee(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<r.shape.length;++t)l.push([0,0]);const u=bx.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=_o(u.shape,i,o,!1),h=Oo(c.length,i.length,!1),d=Mo(u.shape,i,o,!1),p=Yy({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Ux({inputs:{x:p},backend:n,attrs:{perm:h}}),g=Yy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}},Hx=ly(Kt,(t=>Math.sqrt(t))),jx={kernelName:Kt,backendName:"cpu",kernelFunc:Hx},qx={kernelName:Qt,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Zm(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];i[t]=e*e}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Kx=fy(((t,e)=>{const n=t-e;return n*n})),Xx=Iy(Zt,Kx),Yx={kernelName:Zt,backendName:"cpu",kernelFunc:Xx},Jx=ly(ue,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Zx={kernelName:ue,backendName:"cpu",kernelFunc:Jx},Qx=ly(ee,(t=>Math.tan(t))),tw={kernelName:ee,backendName:"cpu",kernelFunc:Qx},ew=ly(ne,(t=>Math.tanh(t)));function nw(t,e,n,s){const r=_e(e,n)[0],i=[1,n[0],1];for(let t=0;t<r;t++)i[0]*=n[t];i[1]=n[r];for(let t=r+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[r]),l=new fn(i,s,t),u=[],c=1===i[0]&&1===i[2];for(let e=0;e<n[r];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)t.push(l.get(n,e,s));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new fn(h,s);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,t,s),n,e,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const sw=[oy,hy,py,Ny,Ay,Dy,_y,My,By,Py,Wy,ky,Hy,qy,my,Qy,eb,sb,rb,ab,ib,ub,hb,xb,kb,$b,Pb,Wb,Gb,by,Hb,Xy,qb,Xb,Jb,tx,nx,rx,lx,ux,cx,ox,Rb,dx,fx,yx,bx,wy,wx,Jy,vx,Ix,Sx,Ax,Dx,_x,Mx,zx,Db,Wx,Gx,jx,qx,Yx,Zx,Mb,tw,{kernelName:ne,backendName:"cpu",kernelFunc:ew},Vx,{kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;Zm(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=nw(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}}];for(const t of sw)ye(t);const rw={},iw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function aw(t){if(!(t in rw)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete rw[t]}),!1),1===t?e.getContext("webgl",iw)||e.getContext("experimental-webgl",iw):e.getContext("webgl2",iw)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;rw[t]=e}const e=rw[t];return e.isContextLost()?(delete rw[t],aw(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),rw[t])}var ow,lw,uw;function cw(t,e){return[e,t]}function hw(t){const e=Ee(t);return Ae(Math.ceil(e/4))}function dw(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function pw(t,e){const n=t;let s,r,i,a,o,l,c,h,d,p;return 2===u().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,r=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,c=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function fw(t,e){const n=e();return u().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}function gw(t){return!!(u().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function mw(t,e){return Cw(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(ow||(ow={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(lw||(lw={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(uw||(uw={}));const yw=/ERROR: [0-9]+:([0-9]+):/g;function bw(t,e){if(fw(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function xw(t,e,n,s,r,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(fw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),fw(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,i,a))),fw(t,(()=>t.enableVertexAttribArray(o))),!0)}function ww(t,e,n,s){fw(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),fw(t,(()=>t.activeTexture(t.TEXTURE0+n))),fw(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),fw(t,(()=>t.uniform1i(n,s)))}function vw(t,e,n){fw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),fw(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function kw(t,e){fw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),fw(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function Iw(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function Cw(t,e,n){const s=fw(t,(()=>e()));if(null==s)throw new Error(n);return s}function $w(t,e=2){return Ee(t.slice(0,t.length-e))}function Sw(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ew(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[$w(t),...Sw(t)]),e}function Nw(t){return t%2==0}function Rw(t,e){if(Ne(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(Nw(n)&&Nw(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Nw(t[0])&&Nw(e[0])}let Aw,Tw;function Dw(t,e){return null!=t.getExtension(e)}function Fw(t){try{if(null!=aw(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _w(t){const e=pw(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function Ow(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Ie("complex64"!==t.dtype,(()=>e+" does not support complex64 tensors in the WebGL backend."))}))}const Mw=u();Mw.registerFlag("HAS_WEBGL",(()=>Mw.getNumber("WEBGL_VERSION")>0)),Mw.registerFlag("WEBGL_VERSION",(()=>Fw(2)?2:Fw(1)?1:0)),Mw.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Mw.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Mw.get("WEBGL_VERSION"))),Mw.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Mw.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Mw.registerFlag("WEBGL_PACK",(()=>Mw.getBool("HAS_WEBGL"))),Mw.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_CLIP",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),Mw.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_PACK_REDUCE",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_CONV_IM2COL",(()=>Mw.getBool("WEBGL_PACK"))),Mw.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==Aw){const e=aw(t);Aw=e.getParameter(e.MAX_TEXTURE_SIZE)}return Aw}(Mw.getNumber("WEBGL_VERSION")))),Mw.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==Tw){const e=aw(t);Tw=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tw)}(Mw.getNumber("WEBGL_VERSION")))),Mw.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=Mw.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=aw(t);return e=Dw(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Dw(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),Mw.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Mw.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}())),Mw.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=aw(t);if(1===t){if(!Dw(e,"OES_texture_float"))return!1}else if(!Dw(e,"EXT_color_buffer_float"))return!1;return _w(e)}(Mw.getNumber("WEBGL_VERSION")))),Mw.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Mw.getBool("WEBGL_FORCE_F16_TEXTURES")&&Mw.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Mw.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=aw(t);if(1!==t){if(Dw(e,"EXT_color_buffer_float"))return _w(e);const t="EXT_color_buffer_half_float";if(Dw(e,t)){const n=e.getExtension(t);return function(t,e){const n=pw(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),i}(e,n)}return!1}return!!Dw(e,"OES_texture_float")&&!!Dw(e,"WEBGL_color_buffer_float")&&_w(e)}(Mw.getNumber("WEBGL_VERSION")))),Mw.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=Mw.getNumber("WEBGL_VERSION"))&&null!=aw(t).fenceSync;var t})),Mw.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Mw.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Mw.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));const{simpleAbsImpl:Lw,addImpl:zw,ceilImpl:Bw,expImpl:Pw,expm1Impl:Ww,floorImpl:Uw,logImpl:Vw,maxImpl:Gw,multiplyImpl:Hw,rsqrtImpl:jw,sliceImpl:qw,subImpl:Kw,transposeImpl:Xw,uniqueImpl:Yw}=r;class Jw{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class Zw{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T"+e));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>"v"+t)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}class Qw{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function tv(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function ev(t,e){return 1===e?[t]:tv(t,e)}function nv(){let t,e,n,s,r,i,a,o,l,c;return 2===u().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}function sv(t,e,n="index"){const s=je(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function rv(t){const e=je(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const iv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:av}=s;function ov(t,e,n,s){const r=[];t.forEach((t=>{const e=Ee(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`))}));const i=r.join("\n"),a=t.map((t=>function(t,e,n=!1){let s="";s+=n?uv(t):lv(t);const r=t.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=av(t.shapeInfo.logicalShape,e.logicalShape),l=mv(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+h[e+u])).join(", ");let p="return outputValue;";const f=1===Ee(t.shapeInfo.logicalShape),g=1===Ee(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&Ne(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=mv(l),c=av(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${p[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords."+p[e+h])).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),o=e.texShape,l=nv(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cv}\n    ${hv}\n    ${dv}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ne(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let i=r,a="",o="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],a=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+a,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return Ne(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=sv(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=sv(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=sv(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=sv(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(d+=pv),[d,u,h,i,c,a,n].join("\n")}function lv(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${fv(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${gv(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],i=s[1];if(1===i&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=fv(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&Ne(e,r)){const t=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:a}=Oe(e),o=i;if(o.length<e.length){const e=["row","col"];return`\n      ${lv(yv(t,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${bv(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${gv(t)}\n      }\n    `;const l=r[0],u=r[1],c=fv(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=Oe(e),l=a;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${lv(yv(t,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${bv(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${gv(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],d=t.shapeInfo.flatOffset;if(h===r&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${fv(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],i=e[2]*r,a=e[1]*i,{newShape:o,keptDims:l}=Oe(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${lv(yv(t,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${bv(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${r}, 1)));\n        ${gv(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${fv(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=Oe(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${lv(yv(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${bv(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${gv(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${fv(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=Oe(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lv(yv(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${bv(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${gv(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${fv(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function uv(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${nv().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=nv();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=r[0],a=r[1],o=nv();if(null!=r&&Ne(e,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${uv(yv(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${bv(r,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${nv().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${r}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${nv().texture2D}(${s}, uv);\n    }\n  `}(t)}}const cv="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hv="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dv="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pv="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function fv(t){return"offset"+t}function gv(t){const e=t.name,n=Ee(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function mv(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function yv(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function bv(t,e){return e.map((e=>t[e])).join(", ")}class xv{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Ie(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=mv(o),u=ev("coords",o);let c,h;if(1===i){h=o+1;const t=mv(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),g=ev("sourceLocR",h-1).concat("inIdx.r"),m=ev("sourceLocG",h-1).concat("inIdx.g"),y=ev("sourceLocB",h-1).concat("inIdx.b"),b=ev("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class wv{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vv{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kv{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=hi(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Iv="return a + b;",Cv="return a - b;",$v="return a * b;",Sv="return (a < 0.) ? b * a : a;";class Ev{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=hi(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Nv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class Rv{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=hi(e,n);const r=this.outputShape.length;let i="";if(s)if(0===r||1===Ee(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${mv(r)} coords = getOutputCoords();\n        `,1===r)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=ev("coords",r);i+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class Av{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Tv{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Dv{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class Fv{constructor(t){this.outputShape=[],this.outputShape=Kr(t,1),this.variableNames=t.map(((t,e)=>"T"+e));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class _v{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Kr(t,e);const n=this.outputShape,s=n.length,r=mv(s),i=ev("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>"T"+e));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${Ov(a,l,e)}),\n            vec2(${Ov(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${Ov(a,l,p)}),\n          vec2(${Ov(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Ov(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}class Mv{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lv{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zv{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bv{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Pv{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wv{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Uv{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,g=f?1:2,m=f?2:3,y=f?3:1;let b="",x="";n&&(b=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Vv{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gv{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let g="",m="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,m="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${r}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${m}\n        setOutput(result);\n      }\n    `}}class Hv{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const r=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<f;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*c};\n          xC = xCCorner + ${n*h};\n        `,1===u){if(n<p&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${r} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${r} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${r} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<p)){const e=o%2==0?ke(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${e};\n\n                  if(xR >= 0 && xR < ${r} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${r} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${r} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<p&&(g+=`\n              if(xR >= 0 && xR < ${r}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<p&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<p&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<p&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<p&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<p;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let m="",y="";n&&(m=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class jv{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class qv{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${Kv(s,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?"end + pow2 < "+i:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${mv(s)} coords = getOutputCoords();\n        int end = ${Xv(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${Xv(s,"coords")} = idx;\n          val += getX(${Kv(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Kv(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function Xv(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Yv{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ow.DENSE;const e=hw(t),n=nv();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${sv(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Jv{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ow.DENSE;const e=hw(t),n=nv();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${sv(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Zv{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Qv{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class tk{constructor(t){this.variableNames=["A"],this.outTexUsage=lw.DOWNLOAD;const e=nv();this.outputShape=t,this.userCode=`\n      ${iv}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class ek{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=lw.DOWNLOAD;const e=nv();this.outputShape=t,this.userCode=`\n      ${iv}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class nk{constructor(t,e,n=!1){this.variableNames=["A"];const s=nv(),[r,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${rv(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class sk{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=nv(),[r,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${rv(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${s.output} = ${o};\n      }\n    `}}class rk{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?s+".0":"1.0";this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class ik{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class ak{constructor(t,e,n){this.variableNames=["A","indices"];const s=t.slice();s[n]=e,this.outputShape=s,this.rank=s.length;const r=mv(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<t.length;n++)n===e?r.push(`int(getIndices(${s[n]}))`):r.push(""+s[n]);return r.join()}(t,n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class ok{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=mv(e.length),r=mv(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function lk(t,e,n,s,r,i){!function(t,e){const n=u().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return Cw(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return fw(t,(()=>t.bindTexture(o,a))),fw(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),fw(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),fw(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),fw(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),fw(t,(()=>t.texImage2D(o,0,s,e,n,0,r,i,null))),fw(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function uk(t){return t.internalFormatFloat}function ck(t){return t.internalFormatHalfFloat}function hk(t){return t.downloadTextureFormat}function dk(t){return t.internalFormatPackedFloat}function pk(t){return t.internalFormatPackedHalfFloat}class fk{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=u().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){rw[t]=e}(e,t)):this.gl=aw(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===u().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=mw(this.gl,t),Dw(this.gl,e))this.textureHalfFloatExtension=mw(this.gl,e);else if(u().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Dw(this.gl,s))this.colorBufferHalfFloatExtension=mw(this.gl,s);else if(u().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Dw(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Dw(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=Cw(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return fw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),fw(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=Cw(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return fw(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),fw(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return Cw(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=pw(this.gl,this.textureHalfFloatExtension)}get debug(){return u().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;fw(t,(()=>t.finish())),fw(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),fw(t,(()=>t.deleteFramebuffer(this.framebuffer))),fw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),fw(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),fw(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=cw(e,n);return lk(t,r,i,uk(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=cw(e,n);return lk(t,r,i,ck(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=cw(e,n);return lk(t,r,i,hk(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){fw(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?fw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):fw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),fw(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,i){let a,o,l;fw(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*s*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(r),fw(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,a))),fw(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=dw(e,n);return lk(t,r,i,pk(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,i]=dw(e,n);return lk(t,r,i,dk(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(kw(this.gl,this.framebuffer),this.outputTexture=null),fw(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,i]=cw(e,n),a=new Uint8Array(e*n*4);return fw(t,(()=>t.readPixels(0,0,r,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,i){return function(t,e,n,s,r,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=dw(t,e);return n*s*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();fw(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const i=16*e*n;return fw(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),fw(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),fw(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(u().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return fw(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=Cw(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(fw(t,(()=>t.shaderSource(n,e))),fw(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=yw.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const s=+n[1],r=t.split("\n"),i=r.length.toString().length+2,a=r.map(((t,e)=>Te((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+Te(u[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=nv();return function(t,e){const n=Cw(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(fw(t,(()=>t.shaderSource(n,e))),fw(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),r=function(t){return Cw(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return fw(e,(()=>e.attachShader(r,s))),fw(e,(()=>e.attachShader(r,n))),function(t,e){if(fw(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&bw(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return fw(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),xw(t,e,"clipSpacePos",n,3,20,0)&&xw(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&fw(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&bw(this.gl,this.program),fw(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Cw(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),fw(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),ww(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=dw(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&bw(this.gl,this.program),Iw(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),fw(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fw(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=mw(this.gl,2===u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await De((()=>this.disposed||this.isQueryAvailable(t,u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||De((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),vw(this.gl,t,this.framebuffer),this.debug&&Iw(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(vw(this.gl,this.outputTexture,this.framebuffer),this.debug&&Iw(this.gl)):kw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;vw(s,t,this.framebuffer),this.debug&&Iw(s),this.outputTexture=t,fw(s,(()=>s.viewport(0,0,e,n))),fw(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),fw(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function gk(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],i=r.shape;if(!Ne(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!Ne(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}class mk{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=r*s,g=nv(),m="channelsLast"===h,y=m?0:1,b=m?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}class yk{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class bk{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class xk{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class wk{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=r-1-t.padInfo.top,o=i-1-t.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vk{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kk{constructor(t,e,n=!1,s=!1,r=!1,i=null,a=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],l=Math.ceil(o/2),u=n?"i * 2, rc.y":"rc.y, i * 2",c=s?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";i&&(p=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,f="result = activation(result);");const g=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(rc.x, ${u});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}class Ik{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class Ck{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class $k{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=ev("rc",e),s=mv(e),r=function(t,e,n){if(1===t)return"rc > "+e[0];let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),i=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)i=e[e.length-1-n]+","+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class Sk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mv(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Ek{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=mv(s),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=ev("rc",s),l=ev("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[r+" rc = outputLoc;",`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===s?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Nk{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,m=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Rk{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class Ak{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=t;this.outputShape=[s,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class Tk{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${sv(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${rv(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Dk{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,i,a]=t.shape,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Fk{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class _k{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class Ok{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,i,a]=t.shape,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Mk{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,i,a,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?i-1:i,s&&n>1?a-1:a],u=[s&&e>1?e-1:e,s&&n>1?n-1:n],c=s?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Lk{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=mv(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class zk{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=ev("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=mv(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:""+s[n]}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Bk{constructor(t,e,n,s,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=mv(r.length),l=mv(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Pk{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,i=t.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Wk{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<e.length;s++)a.push(""+n[s]),s<t&&i.push(""+n[s]);s=i.join(),r=a.join()}const i=mv(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}class Uk{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=mv(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return Vk.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${Vk[e]} = start[${e}] + coords.${Vk[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Vk=["x","y","z","w","u","v"];class Gk{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=mv(this.rank),n=ev("coords",this.rank),s=ev("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class Hk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=mv(n.length),i=mv(n.length);let a="";if(1===s)a="coords * strides + begin";else{let t=0;a=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class jk{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=Kk(e,n),r=Xk(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=qk(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let a;return s===uw.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===uw.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===uw.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===uw.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===uw.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=Kk(n,s),i=Xk(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=qk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=u().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],c=l.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function qk(t,e,n,s,r){const i=function(t,e){switch(t){case uw.PACKED_2X2_FLOAT32:return dk(e);case uw.PACKED_2X2_FLOAT16:return pk(e);case uw.UNPACKED_FLOAT32:return uk(e);case uw.UNPACKED_FLOAT16:return ck(e);case uw.PACKED_4X1_UNSIGNED_BYTE:return hk(e);default:throw new Error("Unknown physical texture type "+t)}}(e,s);let a;if(r){const[e,n]=dw(t[0],t[1]);a=e*n}else{const[e,n]=cw(t[0],t[1]);a=e*n}return a*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,i)}function Kk(t,e){if(t===lw.UPLOAD)return uw.PACKED_2X2_FLOAT32;if(t===lw.RENDER||null==t)return function(t){return u().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?uw.PACKED_2X2_FLOAT32:uw.UNPACKED_FLOAT32:t?uw.PACKED_2X2_FLOAT16:uw.UNPACKED_FLOAT16}(e);if(t===lw.DOWNLOAD||t===lw.PIXELS)return uw.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Xk(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Yk{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=mv(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}class Jk{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Zk="return abs(x);",Qk="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",tI="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",eI="return (x >= 0.0) ? x : (exp(x) - 1.0);",nI=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Vo};\n  float scale = ${Go};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,sI="return -x;",rI="return ceil(x);",iI="return floor(x);",aI="return exp(x);",oI="return exp(x) - 1.0;",lI=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ho};\n  float a1 = ${jo};\n  float a2 = ${qo};\n  float a3 = ${Ko};\n  float a4 = ${Xo};\n  float a5 = ${Yo};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,uI="return x;",cI="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hI="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",dI="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class pI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class fI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=ev("rc",e),s=mv(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const{segment_util:gI}=s,mI=cl,yI=hl,bI=dl,xI=pl,wI={};function vI(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?cI:Qk;if("elu"===t)return e?dI:eI;if("relu6"===t)return e?hI:tI;if("prelu"===t)return e?Nv:Sv;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class kI extends a{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!u().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=aw(u().getNumber("WEBGL_VERSION"));this.binaryCache=((e=u().getNumber("WEBGL_VERSION"))in wI||(wI[e]={}),wI[e]),this.gpgpu=new fk(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new jk(this.gpgpu),this.numMBBeforeWarning=null==u().global.screen?1024:u().global.screen.height*u().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,nr())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((u().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||u().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:lw.UPLOAD,refCount:1}),s}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s){if(u().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:lw.UPLOAD,refCount:1})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensors:r,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new pI(a,uI):new Jk(a,uI);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Qe()),c="complex64"===s?Qo(r.real.dataSync(),r.imag.dataSync()):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Qe()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:i,complexTensors:a,isPacked:o}=e;if(null!=r){let e;e=o?new pI(s,uI):new Jk(s,uI);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!u().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===u().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==i&&u().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...hw(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([a.real.data(),a.imag.data()]);c=Qo(t[0],t[1])}else if(null==h)c=this.getValuesFromTexture(t);else{const t=Ee(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const d=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!gw(n)){if(u().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=Ee(e);if(u().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...hw(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=u().getBool("WEBGL_PACK")&&!0===s,a=i?Ew(e):e,o=i?new ek(a):new tk(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=Se(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=Se(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Qe(),endMs:null}}endTimer(t){return u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Qe(),t)}async getQueryTime(t){if(u().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return u().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=nr().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&Ee(t.shape)<e))}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:nr().keep(t.clone()),imag:nr().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const s=qw(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,s)}if(0===Ee(n))return qn([],n,t.dtype);const{isPacked:s}=this.texData.get(t.dataId),r=Xs(t.shape,e,n);if(s||!r){const s=u().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gk(n):new Uk(n),r=s.getCustomSetupFunc(e);return this.compileAndRun(s,[t],null,r)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const s=this.texData.get(t.dataId),r=this.makeOutput(n,t.dtype),i=this.texData.get(r.dataId);Object.assign(i,s),i.shape=n,i.dtype=t.dtype;let a=Ys(e,t.strides);s.slice&&(a+=s.slice.flatOffset),i.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||t.dataId};const o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),r}stridedSlice(t,e,n,s){const r=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,s)));if(r)return r;const i=Bs(e,n,s);if(i.some((t=>0===t)))return qn([],i);const a=new Hk(e,s,i);return this.compileAndRun(a,[t])}reverse(t,e){const n=u().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zk(t.shape,e):new Lk(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map((t=>Xi(t))),s=t.map((t=>Ei(t)));return Hn(this.concat(n,e),this.concat(s,e))}if(1===t.length)return t[0];if(t.length>u().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),s=this.concat(t.slice(0,n),e),r=this.concat(t.slice(n),e);return this.concat([s,r],e)}if(u().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new _v(t.map((t=>t.shape)),e);return this.compileAndRun(n,t)}const n=Kr(t.map((t=>t.shape)),e),s=t.map((t=>t.as2D(-1,Ee(t.shape.slice(e))))),r=new Fv(s.map((t=>t.shape)));return this.compileAndRun(r,s).reshape(n)}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,sI,t.dtype);const n=new Jk(t.shape,sI);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,s){const r=n?t.shape[2]:t.shape[1],i=s?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],[o,,]=t.shape;if((1===r||1===i)&&a>1e3){n&&(t=kr(t,[0,2,1])),s&&(e=kr(e,[0,2,1]));const r=1===i?t:t.as3D(o,a,1),l=1===i?2:1,u=1===i?e.as3D(o,1,a):e;return this.multiply(r,u).sum(l,!0)}const l=Sn(t.dtype,e.dtype),u=new kk(t.shape,[o,r,i],n,s);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:a}){const o=n?t.shape[2]:t.shape[1],l=s?e.shape[1]:e.shape[2],[u,,]=t.shape,c=Sn(t.dtype,e.dtype),h=null!=r,d=null!=a,p=i?vI(i,!0):null,f=new kk(t.shape,[u,o,l],n,s,h,p,d),g=[t,e];return r&&g.push(r),a&&g.push(a),this.compileAndRun(f,g,c)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),s=this.texData.get(e.dataId),r=new kv("return areal * breal - aimag * bimag;",t.shape,e.shape),i=new kv("return areal * bimag + aimag * breal;",t.shape,e.shape),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,s.complexTensors.real),this.makeComplexComponentTensorInfo(e,s.complexTensors.imag)],o=this.compileAndRun(r,a),l=this.compileAndRun(i,a),u=this.complex(o,l);return o.dispose(),l.dispose(),u}const n=Sn(t.dtype,e.dtype);if(this.shouldExecuteOnCPU([t,e])){const s=this.texData.get(t.dataId),r=this.texData.get(e.dataId),[i,a]=Hw(t.shape,e.shape,s.values,r.values,n);return this.makeOutput(a,n,i)}if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,$v,t.dtype);const s=new Ev($v,t.shape,e.shape);return this.compileAndRun(s,[t,e],t.dtype)}localResponseNormalization4D(t,e,n,s,r){const i=u().getBool("WEBGL_PACK_NORMALIZATION")?new xk(t.shape,e,n,s,r):new yk(t.shape,e,n,s,r);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,s,r,i,a){const o=new bk(e.shape,s,r,i,a);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>nn(t))),s=Ss(t.shape,t.dtype,n);return yI(s,e)}const n=new Yk(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const s=u().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ek(t.shape,e,n):new Sk(t.shape,e,n);return this.compileAndRun(s,[t])}gather(t,e,n){const s=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(s)return s;const r=new ak(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){Ie(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),r=_o(t.shape,e,s),i=Oo(r.length,e.length),a=Mo(t.shape,e,s),o=Lo(n,e.length),l=zo(a,n,e.length);return kr(t.reshape(r),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){Ie(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),r=[[0,0]];r.push(...n);for(let n=1+e.length;n<t.shape.length;++n)r.push([0,0]);const i=t.pad(r),a=_o(i.shape,e,s,!1),o=Oo(a.length,e.length,!1),l=Mo(i.shape,e,s,!1),u=kr(i.reshape(a),o);return vr(u,l)}reduce(t,e,n){const s=t.shape[0],r=t.shape[1],i=wi(r),a=Math.ceil(r/i),o=new Ak({windowSize:i,inSize:r,batchSize:s,outSize:a},e),l=this.compileAndRun(o,[t],n);return 1===l.shape[1]?l:this.reduce(l,e,n)}argReduce(t,e,n=null){let s=t.shape[0],r=t.shape[1];null!=n&&(s=n.shape[0],r=n.shape[1]);const i=wi(r),a={windowSize:i,inSize:r,batchSize:s,outSize:Math.ceil(r/i)},o=new Qw(a,e,null==n),l=[t];null!=n&&l.push(n);const u=this.compileAndRun(o,l,"int32");return 1===u.shape[1]?u:this.argReduce(t,e,u)}argReducePacked(t,e,n=null){const s=null!=n?n.shape:t.shape,r=wi(s[s.length-1]),i=new xv(s,r,e,null==n),a=null==n?[t]:[t,n],o=this.compileAndRun(i,a,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){yr("sum",e,t.rank);const[n,s]=gr(t.shape,e),r=Ee(s),i=t.as2D(-1,r),a=En(t.dtype);return this.reduce(i,"sum",a).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[s,r]=gr(t.shape,e),i=Ee(r),a=t.as2D(-1,i),o=En(t.dtype);return this.reduce(a,"prod",o).reshape(s)}unsortedSegmentSum(t,e,n){let s=0;const r=br([s],t.rank);let i=t;null!=r&&(i=kr(t,r),s=wr(1,t.rank)[0]);const a=gI.computeOutShape(i.shape,s,n),o=Ee([i.shape[s]]),l=i.as2D(-1,o),u=En(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(a);return null!=r&&(c=kr(c,xr(r))),c}segOpCompute(t,e,n,s,r){const i=t.shape[0],a=t.shape[1],o=gI.segOpComputeOptimalWindowSize(a,r),l=new Pk({windowSize:o,inSize:a,batchSize:i,numSegments:r},e),u=this.compileAndRun(l,[t,n],s);return u.shape[1]===r?u:(n=aa(0,r).tile([a/o]),this.segOpCompute(u,e,n,s,r))}argMinMaxReduce(t,e,n){const s=[e];if(yr("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,t.rank),!u().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,r]=gr(t.shape,s),i=Ee(r),a=t.as2D(-1,i);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,s){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const r=t.shape[e];let i=t;for(let e=0;e<=Math.ceil(Math.log2(r))-1;e++){const n=new qv(t.shape,!1,s),r=n.getCustomSetupFunc(e),a=i;i=this.compileAndRun(n,[i],i.dtype,r),a.dispose()}if(n){const e=new qv(t.shape,n,s),r=i;i=this.compileAndRun(e,[i]),r.dispose()}return i}equal(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Ev("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new Ev("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const s=new Ev("return float(a < b);",t.shape,e.shape);return this.compileAndRun(s,[t,e],"bool")}lessEqual(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Ev("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const s=new Ev("return float(a > b);",t.shape,e.shape);return this.compileAndRun(s,[t,e],"bool")}greaterEqual(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Ev("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new Jk(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Ev("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Ev("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const s=new Wk(t.rank,e.shape,e.rank);return this.compileAndRun(s,[t,e,n],Sn(e.dtype,n.dtype))}where(t){Jo("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return xI(t.shape,e)}topk(t,e,n){const s=t.dataSync();return bI(s,t.shape,t.dtype,e,n)}min(t,e){yr("min",e,t.rank);const[n,s]=gr(t.shape,e),r=Ee(s),i=t.as2D(-1,r);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const s=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ev("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(s,[t,e])}mod(t,e){const n=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ev("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const s=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ev("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(s,[t,e])}all(t,e){yr("all",e,t.rank);const[n,s]=gr(t.shape,e),r=Ee(s),i=t.as2D(-1,r);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){yr("any",e,t.rank);const[n,s]=gr(t.shape,e),r=Ee(s),i=t.as2D(-1,r);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const s=new Ev("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Iv);const n=Sn(t.dtype,e.dtype);if(this.shouldExecuteOnCPU([t,e])){const s=this.texData.get(t.dataId),r=this.texData.get(e.dataId),[i,a]=zw(t.shape,e.shape,s.values,r.values,n);return this.makeOutput(a,n,i)}if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Iv,n);const s=new Ev(Iv,t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}packedUnaryOp(t,e,n){const s=new pI(t.shape,e);return this.compileAndRun(s,[t],n)}packedBinaryOp(t,e,n,s,r=!1){const i=new Rv(n,t.shape,e.shape,r);return this.compileAndRun(i,[t,e],s)}complexSeparableBinaryOp(t,e,n){const s=this.texData.get(t.dataId),r=this.texData.get(e.dataId),[i,a]=[[s.complexTensors.real,r.complexTensors.real],[s.complexTensors.imag,r.complexTensors.imag]].map((s=>{const[r,i]=s,a=this.makeComplexComponentTensorInfo(t,r),o=this.makeComplexComponentTensorInfo(e,i),l=new Ev(n,t.shape,e.shape);return this.compileAndRun(l,[a,o],Sn(r.dtype,i.dtype))})),o=this.complex(i,a);return i.dispose(),a.dispose(),o}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>u().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),s=this.addN(t.slice(e));return this.addN([n,s])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>Sn(t,e))),n=t.map((t=>t.shape)),s=u().getBool("WEBGL_PACK")?new Zw(t[0].shape,n):new Jw(t[0].shape,n);return this.compileAndRun(s,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,Cv);const n=Sn(t.dtype,e.dtype);if(this.shouldExecuteOnCPU([t,e])){const s=this.texData.get(t.dataId),r=this.texData.get(e.dataId),[i,a]=Kw(t.shape,e.shape,s.values,r.values,n);return this.makeOutput(a,n,i)}if(u().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,Cv,t.dtype);const s=new Ev(Cv,t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}pow(t,e){const n=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Ev("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),s=Sn(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],s)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Bw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,rI,t.dtype);const e=new Jk(t.shape,rI);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=Uw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,iI,t.dtype);const e=new Jk(t.shape,iI);return this.compileAndRun(e,[t])}sign(t){const e=new Jk(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new Jk(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Jk(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Jk(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new Jk(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Pw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,aI,t.dtype);const e=new Jk(t.shape,aI);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Ww(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,oI,t.dtype);const e=new Jk(t.shape,oI);return this.compileAndRun(e,[t])}softmax(t,e){const n=_e([e],t.shape),s=Di(t,n),r=mr(s.shape,n),i=this.subtract(t,s.reshape(r)),a=this.exp(i),o=this.sum(a,n).reshape(r);return oi(a,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=Vw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new Jk(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new Jk(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new Jk(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=jw(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new Jk(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new Jk(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=u().getBool("WEBGL_PACK")?new pI(t.shape,cI):new Jk(t.shape,Qk),this.compileAndRun(e,[t])}relu6(t){let e;return e=u().getBool("WEBGL_PACK")?new pI(t.shape,hI):new Jk(t.shape,tI),this.compileAndRun(e,[t])}prelu(t,e){const n=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv(Nv,t.shape,e.shape):new Ev(Sv,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,dI,t.dtype);const e=new Jk(t.shape,eI);return this.compileAndRun(e,[t])}eluDer(t,e){const n=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Ev("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Jk(t.shape,nI);return this.compileAndRun(e,[t])}int(t){const e=new Jk(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let s;s=u().getBool("WEBGL_PACK_CLIP")?new Tv(t.shape):new Av(t.shape);const r=s.getCustomSetupFunc(e,n);return this.compileAndRun(s,[t],null,r)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Lw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(u().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Zk,t.dtype);const e=new Jk(t.shape,Zk);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Dv(t.shape),s=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,s)}sigmoid(t){const e=new Jk(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new Jk(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new Jk(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new Jk(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new Jk(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new Jk(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new Jk(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new Jk(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new Jk(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new Jk(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new Jk(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new Jk(t.shape,lI);return this.compileAndRun(e,[t])}step(t,e){const n=new Jk(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,s,r,i){const a=t.shape,o=this.texData.get(t.dataId),l=n.inChannels,c=a[0]*a[1]*a[2],h=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===c||1===h)&&l>1e3,f=a[2]%2!=0&&!!o.isPacked;if(p||!u().getBool("WEBGL_LAZILY_UNPACK")||!u().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=d?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],l=vr(t,[1,o,n.inChannels]),u=vr(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:l,b:u,transposeA:!1,transposeB:!1,bias:s,activation:r,preluActivationWeights:i});return vr(c,n.outShape)}const g=d?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),m={dataId:t.dataId,shape:[1,g,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,Ie(Rw(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const b=vr(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:m,b,transposeA:!1,transposeB:!1,bias:s,activation:r,preluActivationWeights:i}),w=this.texData.get(x.dataId);return Ie(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,nr().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,s,r,i){const{filterWidth:a,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=a*o*l,f=c*u,g=[p,f],m=t.squeeze([0]),y=e.reshape([1,p,-1]),b=new mk(g,m.shape,n),x=this.compileAndRun(b,[m]).reshape([1,g[0],g[1]]),w=null!=s,v=null!=i,k=r?vI(r,!0):null,I=new kk(x.shape,[1,f,n.outChannels],!0,!1,w,k,v),C=[x,y];s&&C.push(s),v&&C.push(i);const $=this.compileAndRun(I,C);return d?$.reshape([1,c,u,n.outChannels]):$.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,s,r,i);if(u().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,s,r,i);const a=null!=s,o=null!=i,l=r?vI(r,!1):null,c=new Uv(n,a,l,o),h=[t,e];return s&&h.push(s),i&&h.push(i),this.compileAndRun(c,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(u().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const s=new Uv(n);return this.compileAndRun(s,[t,e])}conv2dDerInput(t,e,n){const s=new Lv(n);return this.compileAndRun(s,[t,e])}conv2dDerFilter(t,e,n){const s=new Mv(n);return this.compileAndRun(s,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){const a=u().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=r?vI(r,a):null,l=[t,e],c=null!=s,h=null!=i;let d;return c&&l.push(s),h&&l.push(i),a?(d=new Hv(n,c,o,h),this.compileAndRun(d,l)):(d=new Gv(n,c,o,h),this.compileAndRun(d,l))}depthwiseConv2D(t,e,n){let s;return u().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(s=new Hv(n),this.compileAndRun(s,[t,e])):(s=new Gv(n),this.compileAndRun(s,[t,e]))}depthwiseConv2DDerInput(t,e,n){const s=new Wv(n);return this.compileAndRun(s,[t,e])}depthwiseConv2DDerFilter(t,e,n){const s=new Pv(n);return this.compileAndRun(s,[t,e])}conv3d(t,e,n){const s=new Vv(n);return this.compileAndRun(s,[t,e])}conv3dDerInput(t,e,n){const s=new Bv(n);return this.compileAndRun(s,[t,e])}conv3dDerFilter(t,e,n){const s=new zv(n);return this.compileAndRun(s,[t,e])}cast(t,e){return ol(t,e,this)}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let r=0;for(let n=0;n<t.rank;n++)n!==e&&(s[r++]=t.shape[n]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)i[e]=n,o[n]=this.slice(t,i,a).reshape(s);return o}avgPool3d(t,e){const n=new Rk(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const s=new vv(n);return this.compileAndRun(s,[t],e.dtype)}maxPool3d(t,e){const n=new Rk(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,s){const r=new Rk(s,"max",!0),i=this.compileAndRun(r,[e]),a=new vk(s),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}resizeBilinear(t,e,n,s){const r=u().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _k(t.shape,e,n,s):new Fk(t.shape,e,n,s);return this.compileAndRun(r,[t],"float32")}resizeBilinearBackprop(t,e,n){const s=new Dk(t,e,n);return this.compileAndRun(s,[t])}resizeNearestNeighbor(t,e,n,s){const r=new Mk(t.shape,e,n,s);return this.compileAndRun(r,[t])}resizeNearestNeighborBackprop(t,e,n){const s=new Ok(t,e,n);return this.compileAndRun(s,[t])}multinomial(t,e,n,s){const r=e?t:ya(t),i=r.shape[0],a=r.shape[1],o=new Ik(i,a,n),l=o.getCustomSetupFunc(s);return this.compileAndRun(o,[r],"int32",l)}oneHot(t,e,n,s){const r=new Ck(t.size,e,n,s);return this.compileAndRun(r,[t])}diag(t){const e=new Qv(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,s,r,i){const a=new jv(t.shape,e.shape,s,r,i);return this.compileAndRun(a,[t,e,n],"float32")}depthToSpace(t,e,n){Ie(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+e));const s=t.shape[0],r="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],a="NHWC"===n?t.shape[3]:t.shape[1],o=r*e,l=i*e,u=a/(e*e),c=new Zv("NHWC"===n?[s,o,l,u]:[s,u,o,l],e,n);return this.compileAndRun(c,[t])}split(t,e,n){return mI(t,e,n)}scatterND(t,e,n){const{sliceRank:s,numUpdates:r,sliceSize:i,strides:a,outputSize:o}=Uo(0,t,n),l=[o/i,i],u=t.reshape([r,s]),c=e.reshape([r,i]);if(0===o)return ll(qn([]),n);const h=ur(0),d=new Bk(r,s,u.rank,c.rank,a,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,s){const{sliceRank:r,numUpdates:i,strides:a,outputSize:o}=Uo(0,t,n),l=new Bk(i,r,t.rank,e.rank,a,[o,1],!1);return this.compileAndRun(l,[e,t,s]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),s=new rk("return real * expR - imag * expI;",t.shape,e),r=new rk("return real * expI + imag * expR;",t.shape,e),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],a=this.compileAndRun(s,i),o=this.compileAndRun(r,i),l=this.complex(a,o).as2D(t.shape[0],t.shape[1]);return a.dispose(),o.dispose(),l}gatherND(t,e){const n=e.shape,s=n[n.length-1],[r,i,a,o]=Bo(t,e),l=e.reshape([i,s]),u=t.reshape([t.size/a,a]),c=new ok(s,o,[i,a]);return this.compileAndRun(c,[u,l]).reshape(r)}fill(t,e,n){if("string"===(n=n||Ve(e))){const s=Le(n,Ee(t));return s.fill(e),nr().makeTensor(s,t,n,this)}{const s=new ik(t,e),r=s.getCustomSetupFunc(e);return this.compileAndRun(s,[],n,r)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return ul(t,e,n)}makeTensorInfo(t,e,n){const s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return nr().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new fI(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new $k(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[$w(t.shape),...Sw(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[$w(e),...Sw(e)],i=new Tk(r,n),a=this.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,i=Ew(s);let a;return a=n?new Jv(i):new Yv(i),{dtype:r,shape:s,dataId:this.runWebGLProgram(a,[{shape:i,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,r=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===ow.DENSE){const e=hw(t.outputShape);a.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===Ee(i.shape))return a.values=Me(i.dtype,0),i;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&Ee(e.shape)<=u().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Rw(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),o.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:a,isUniform:!1},h=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let i=t.constructor.name;return i+="_"+s+"_"+r,i}(t,l,c),d=this.getAndSaveBinary(h,(()=>function(t,e,n,s){const r=e.userCode,i=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),a=i.map((t=>t.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=ov(i,o,r,e.packedInputs),c=t.createProgram(l);let h=null;const d=t.getUniformLocation(c,"NAN",!1);1===u().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(c,s,r),p["offset"+s]=t.getUniformLocation(c,"offset"+s,r)}return{program:e,source:l,webGLProgram:c,uniformLocations:p,inShapeInfos:a,outShapeInfo:o,infLoc:h,nanLoc:d}}(this.gpgpu,t,l,c))),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,s,r){gk(e.inShapeInfos,n),gk([e.outShapeInfo],[s]);const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===u().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],i=e.uniformLocations[r],a=e.uniformLocations["offset"+r];if(null!=i)if(n.isUniform)if(Ee(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,s)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,l,c,s),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!u().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===r){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,s,r=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,s,r);return nr().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(u().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=rr((()=>{if(!u().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=u().getBool("DEBUG");u().set("DEBUG",!1);const e=this.abs(ur(1e-8)).dataSync()[0];if(u().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let c;l&&(c=Qe());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=u().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?ke(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=Oe(t);t=e.newShape}let s=Ee(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=$w(t);let n=2,r=2;return t.length&&([n,r]=Sw(t)),s=e*(n/2)*(r/2),Ae(s).map((t=>2*t))}return Ae(s)}(n,o),e.texShape=h),null!=r){const t=Ew(n);let i,a=h[1],u=h[0];const d=r instanceof Uint8Array;o?([a,u]=dw(h[0],h[1]),i=new sk(t,[u,a],d)):i=new nk(t,[u,a],d);const p=this.makeTensorInfo([u,a],s);this.texData.get(p.dataId).usage=d?lw.PIXELS:lw.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,u,r);const f=!0,g=this.runWebGLProgram(i,[p],s,null,f),m=this.texData.get(g.dataId);e.texture=m.texture,e.texShape=m.texShape,e.isPacked=m.isPacked,e.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),e.values=null,l&&(this.uploadWaitMs+=Qe()-c)}else{const t=this.acquireTexture(h,a,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*Pe(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(u().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function II(t){return({inputs:e,backend:n})=>{const{x:s}=e,r=n,i=new Jk(s.shape,t);return r.runWebGLProgram(i,[s],s.dtype)}}function CI(t,e,n,s){return({inputs:r,backend:i})=>{const{a,b:o}=r,l=i,c=u().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rv(e,a.shape,o.shape,!!n):new Ev(t,a.shape,o.shape),h=s||a.dtype;return l.runWebGLProgram(c,[a,o],h)}}Ln()&&or("webgl",(()=>new kI),2);const $I=CI("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n","\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"),SI={kernelName:C,backendName:"webgl",kernelFunc:$I};function EI(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const NI={kernelName:st,backendName:"webgl",kernelFunc:EI},RI={kernelName:$,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Ow(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;Ie(Lr(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Er(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Ne(u.inShape,u.outShape))return EI({inputs:{x:r},backend:n});const c=new Nk(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},AI={kernelName:S,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i}=e,a=i;Ow([r,i],"avgPoolBackprop");const{filterSize:o,strides:l,pad:u}=s,c=Er(a.shape,o,l,1,u),h=new wv(c);return n.runWebGLProgram(h,[r],a.dtype)}};class TI{constructor(t,e,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],hi(t,e),hi(t,n);let a="0.0";null!=s&&(hi(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(hi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class DI{constructor(t,e,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],hi(t,e),hi(t,n);let a="vec4(0.0)";null!=s&&(hi(t,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(hi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const FI={kernelName:tt,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=t;Ie(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ie(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ie(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[s,r,i];let h=null;null!=a&&(h=a.shape,c.push(a));let d=null;null!=o&&(d=o.shape,c.push(o));const p=u().getBool("WEBGL_PACK_NORMALIZATION")?new DI(s.shape,r.shape,i.shape,h,d,l):new TI(s.shape,r.shape,i.shape,h,d,l);return e.runWebGLProgram(p,c,c[0].dtype)}},_I=II("if (isnan(x)) return x;\n  return cos(x);\n"),OI={kernelName:B,backendName:"webgl",kernelFunc:_I},MI=CI("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;","\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",!0),LI={kernelName:j,backendName:"webgl",kernelFunc:MI};class zI{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const BI={kernelName:J,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new zI(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};class PI{constructor(t){this.variableNames=["A"];const e=nv(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class WI{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=nv(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const UI={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:i}=s,a="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[c,l],d=[c,l,i];(o||a)&&(null==VI&&(VI=document.createElement("canvas").getContext("2d")),VI.canvas.width=l,VI.canvas.height=c,VI.drawImage(r,0,0,l,c),r=VI.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=lw.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=u().getBool("WEBGL_PACK")?new WI(d):new PI(d),g=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),g}};let VI;function GI(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:i}=s,a=n,o=Ee(r.shape),l=Fe(i,o),u=Ee(l);Ie(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(r.dataId);return!c.isPacked||Rw(r.shape,l)||null!==c.texture&&Rw(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const s=[$w(t.shape),...Sw(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[$w(e),...Sw(e)],a=new Tk(i,s),o=n.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(r,l,a)}const HI={kernelName:Ft,backendName:"webgl",kernelFunc:GI};class jI{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=mv(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class qI{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=mv(this.rank),r=tv("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=r[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function KI(t,e,n){const s=u().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qI(t.shape,e):new jI(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}const XI={kernelName:pt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:r,keepDims:i}=e,a=n,o=s.shape.length,l=_e(r,s.shape);let u=l;const c=br(u,o),h=null!=c,d=a.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const t=a.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const n=Xw(t,s.shape,s.dtype,c,e);p=a.makeTensorInfo(e,s.dtype),a.texData.get(p.dataId).values=n}else p=KI(s,c,a);u=wr(u.length,o)}yr("max",u,o);const[f,g]=gr(p.shape,u);let m,y=f;if(i&&(y=mr(f,l)),d){const t=a.texData.get(p.dataId).values,e=Gw(t,Ee(g),y,s.dtype);m=a.makeTensorInfo(y,s.dtype),a.texData.get(m.dataId).values=e}else m=function(t,e,n,s){const r=Ee(e),i=GI({inputs:{x:t},attrs:{shape:[Ee(t.shape)/r,r]},backend:s}),a=function(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=wi(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let i=t;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a],c=new Ak({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i;i=s.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&s.disposeData(h.dataId)}return i}(i,t.dtype,"max",s),o=GI({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(p,g,y,a);return h&&a.disposeIntermediateTensorInfo(p),m}},YI={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Ow(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;Ie(Lr(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Er(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Ne(u.inShape,u.outShape))return EI({inputs:{x:r},backend:n});const c=new Nk(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},JI={kernelName:mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:i,output:a}=e,o=i;Ow([i,a],"maxPoolBackprop");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Er(o.shape,l,u,1,c,h),p=new Nk(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new wk(d),m=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},ZI={kernelName:bt,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Ie(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];Ie(Lr(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Er(s.shape,r,i,u,a),[h,d]=function(t,e,n,s){let r=new Nk(n,"max",!1);const i=s.runWebGLProgram(r,[t],"float32");return r=new Nk(n,"max",!0,!0,e),[i,s.runWebGLProgram(r,[t],"float32")]}(s,o,c,l);return[h,d]}},QI={kernelName:It,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=n,l=e;return Za(l.readSync(s.dataId),l.readSync(r.dataId),i,a,o)}},tC=Qa,eC={kernelName:Ct,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e,c=u.readSync(s.dataId),h=u.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=tC(c,h,i,a,o,l);return[d,p]}},nC=to,sC={kernelName:$t,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:r}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e,c=u.readSync(s.dataId),h=u.readSync(r.dataId),d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:y}=nC(c,h,d,p,f,g);return[m,y]}};class rC{constructor(t,e,n,s){this.variableNames=["Image"],this.outputShape=[];const r=t[1],i=t[2],a=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[l,u]=Fo(s,r,i),c=l.toFixed(3),h=u.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${a};\n          float coordYFloat = (float(x) - ${c}) * ${a} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${d}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${r}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const iC={kernelName:ce,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:i,center:a}=e,o=n,l=new rC(s.shape,r,i,a);return o.runWebGLProgram(l,[s],s.dtype)}},aC=II("if (isnan(x)) return x;\n  return sin(x);\n"),oC={kernelName:Vt,backendName:"webgl",kernelFunc:aC},lC={kernelName:Qt,backendName:"webgl",kernelFunc:II("return x * x;")},uC="return (a - b) * (a - b);",cC=CI(uC,uC),hC={kernelName:Zt,backendName:"webgl",kernelFunc:cC},dC=II("return tan(x);"),pC=[SI,RI,AI,FI,OI,LI,BI,UI,NI,XI,YI,JI,ZI,QI,eC,sC,HI,iC,oC,lC,hC,{kernelName:ee,backendName:"webgl",kernelFunc:dC},{kernelName:re,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{perm:r}=e,i=n,a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[r[t]];let l;if(i.shouldExecuteOnCPU([s])){const t=i.texData.get(s.dataId).values,e=Xw(t,s.shape,s.dtype,r,o);l=i.makeTensorInfo(o,s.dtype),i.texData.get(l.dataId).values=e}else l=KI(s,r,i);return l}},{kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:i}=e;Ow(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=Yw(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}}];for(const t of pC)ye(t);const fC={min_left_letters:3,min_right_letters:3,min_word_length:6,min_subword_length:3,min_distance_from_a_primary_to_secondary_split:7,verbose:!0,debug:!1,model_base_url:"https://cdn.jsdelivr.net/gh/ylhyra/icelandic-hyphenation-neural/build"};console.log(document.currentScript);const gC=t=>t?{...fC,...t||{}}:fC,mC=["","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","r","s","t","u","v","w","x","y","z","á","æ","é","í","ð","ó","ö","ú","ý","þ"],yC=mC.length,bC=new Array(10).fill(0);let xC;const wC={},vC=async(t,e)=>{if(e=gC(e),0===t.length)return wC;const n=new Date;xC||(xC=await function(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const r=(n=t,s=e,ns.getLoadHandlers(n,s));if(0===r.length)r.push(function(t,e){return Ms(t,e)}(t,e));else if(r.length>1)throw new oh(`Found more than one (${r.length}) load handlers for URL '${t}'`);t=r[0]}var n,s;return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new oh("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await t.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const i=null==n.strict||n.strict,a=null!=s.weightData&&null!=s.weightSpecs&&i,o=xp(Hp(r),void 0,a),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new oh("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=function(t,e){const n={};let s,r=0;for(const i of e){const e=i.name,a=i.dtype,o=i.shape,l=Ee(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=Kn[n.dtype],c=t.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=es()),u=s(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}r+=l*o}else if("string"===a){const e=Ee(i.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+4))[0];r+=4;const n=new Uint8Array(t.slice(r,r+e));u.push(n),r+=e}}else{const s=Kn[a],i=t.slice(r,r+l*s);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{u=new Float32Array(i);const t=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],s[e]=u[2*e+1];const r=qn(t,o,"float32"),a=qn(s,o,"float32");n[e]=Hn(r,a)}}r+=l*s}"complex64"!==a&&(n[e]=qn(u,o,a))}return n}(t,e),s={},r=[];return e.forEach((t=>{"optimizer"===t.group?r.push({name:t.name,tensor:n[t.name]}):s[t.name]=n[t.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(t,i),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),ir(t),ir(e.map((t=>t.tensor)))}return o}(t,0,e)}(t,e)}((e.model_base_url||"")+"/model/model.json"));const s=new Date,r=[];if(t.forEach((t=>{let e=t.split("").map((t=>mC.indexOf(t)));e=[...bC,...e,...bC];for(let t=0;t<=e.length-22;t++){const n=e.slice(t,t+22);let s=[];for(let t=0;t<n.length;t++){let e=new Array(yC).fill(0);e[n[t]]=1,s.push(e)}r.push(s)}})),0===r.length)return wC;const i=await xC.predict(qn(r)).data();let a=0;return t.forEach((t=>{const e=[],n=t.split("");n.forEach(((t,s)=>{s+1<n.length&&(i[a]>0?e.push(i[a]):e.push(0),a++)})),wC[t]=e})),e.verbose&&console.log(`Hyphenation for ${t.length} words done in ${Math.round(new Date-s)} ms (loading model took ${Math.round(s-n)} ms)`),e.debug&&console.log(wC),wC},kC=/\u00AD/g,IC=mC.join(""),CC=new RegExp("((?:[^a-zA-ZÀ-ÖØ-öø-ɏ\\-\\–]+?)?\\s+?(?:[^a-zA-ZÀ-ÖØ-öø-ɏ\\-\\–]+?)?)","g"),$C=new RegExp(`^[${IC}]+$`,"i"),SC=.55-.25,EC=async(t,e,n)=>{e=gC(e),t=t.replace(kC,"");const s=[],r=[],i=new RegExp(`([${IC}]{${e.min_word_length},})`,"i");t.split(CC).forEach((t=>{if(!(t.length<e.min_word_length||/\s/.test(t))&&new RegExp(`[${IC}]{${e.min_word_length}}`,"i").test(t))return $C.test(t)?(r.includes(t.toLowerCase())||r.push(t.toLowerCase()),void s.push({string:t,toHyphenate:t.toLowerCase()})):void t.split(i).forEach(((t,n)=>{n%2!=0||t.length<e.min_word_length?s.push({string:t}):(r.includes(t.toLowerCase())||r.push(t.toLowerCase()),s.push({string:t,toHyphenate:t.toLowerCase()}))}));s.push({string:t})}));const a=await vC(r,e);return s.map((t=>{if(!t.toHyphenate)return t.string;const n=a[t.toHyphenate];if(!n.find((t=>t>SC)))return t.string;let s=n.map(((t,e)=>t>SC?{value:t,index:e}:null)).filter(Boolean).sort(((t,e)=>e.value-t.value)),r=[];s.forEach((t=>{if(!r.find((n=>Math.abs(t.index-n.index)<e.min_subword_length))){if(t.value>.7)return r.push(t);if(!r.filter((t=>t.value>.7)).find((n=>Math.abs(t.index-n.index)<e.min_distance_from_a_primary_to_secondary_split))&&!r.find((n=>Math.abs(t.index-n.index)<e.min_subword_length)))return t.value>SC?r.push(t):void 0}}));let i="";const o=t.string.split("");for(let n=0;n<o.length;n++){if(i+=o[n],n+1<e.min_left_letters||t.string.length-n-1<e.min_right_letters)continue;const s=(r.find((t=>t.index===n))||{}).value;(s>.7||s>SC)&&(i+="­")}return i})).join("")},NC=t=>{let e="";const n=t=>{if(Array.isArray(t))return t.map(n);if(t&&t.childNodes)for(var s=0;s<t.childNodes.length;s++){var r=t.childNodes[s];if(!["SCRIPT","STYLE","CODE"].includes(r.nodeName))if(r.nodeType===Node.TEXT_NODE){var i=r.nodeValue;e+=i+"\n"}else n(r)}};return n(t),e.replace(kC,"")},RC=(t,e)=>{let n=0;if(!e)return void console.error("No text received");const s=[];let r=0;e.split(kC).forEach(((t,n)=>{r+=t.length,r!==e.length&&s.push(r)}));const i=e.replace(kC,""),a=t=>{if(Array.isArray(t))return t.map(a);if(t&&t.childNodes)for(var e=0;e<t.childNodes.length;e++){var r=t.childNodes[e];if(!["SCRIPT","STYLE","CODE"].includes(r.nodeName))if(r.nodeType===Node.TEXT_NODE){var o=r.nodeValue.replace(kC,"");if(o===i.slice(n,n+o.length)){var l=o.split("");let e="";for(let t=0;t<l.length;t++)e+=l[t],s.includes(n+t+1)&&(e+="­");t.replaceChild(document.createTextNode(e),r)}n+=o.length+1}else a(r)}};a(t)};window&&(window.IcelandicHyphenation={HyphenateText:EC,HyphenateDOM:(t,e)=>{t||(t=document.body);const n=async()=>{const n=await EC(NC(t),e);RC(t,n)};"complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState?n():document.addEventListener("DOMContentLoaded",n,!1)}})}()}();